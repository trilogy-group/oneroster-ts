openapi: 3.1.0
info:
  title: OneRoster API
  version: 1.0.0
  description: >
    # Authentication


    All endpoints require authentication using the `Authorization: Bearer
    <token>` header.


    The token can be obtained with:


    ```

    curl -X POST
    https://alpha-auth-production-idp.auth.us-west-2.amazoncognito.com/oauth2/token
    \

    -H "Content-Type: application/x-www-form-urlencoded" \

    -d
    "grant_type=client_credentials&client_id=<your-client-id>&client_secret=<your-client-secret>"

    ```


    Use the correct IDP server depending on the environment you're using:


    - Production Server:
      https://alpha-auth-production-idp.auth.us-west-2.amazoncognito.com
    - Staging Server:
      https://alpha-auth-development-idp.auth.us-west-2.amazoncognito.com

    Reach out to the platform team to get a client/secret pair for your
    application.


    # Pagination


    Our API uses offset pagination for list endpoints. Paginated responses
    include the following fields:


    - `offset`: Offset for the next page of results

    - `limit`: Number of items per page (default: 100)


    Example request:


    ```

    GET /ims/oneroster/rostering/v1p2/users?offset=20&limit=20

    ```


    All listing endpoints support offset pagination.


    # Filtering


    All listing endpoints support filtering using the `filter` query parameter,
    following 1EdTech's filtering specification.


    The filter should be a string with the following format:


    ```

    ?filter=[field][operator][value]

    ```


    Example request:


    ```

    GET /ims/oneroster/rostering/v1p2/users?filter=status='active'

    ```


    Example request with multiple filters:


    ```

    GET /ims/oneroster/rostering/v1p2/users?filter=status='active' AND
    name='John'

    ```


    **Filtering by nested relations is not supported**.


    # Sorting


    All listing endpoints support sorting using the `sort` and `orderBy` query
    parameters, following 1EdTech's sorting specification


    Example request:


    ```

    GET /ims/oneroster/rostering/v1p2/users?sort=lastName&orderBy=asc

    ```
servers:
  - url: https://api.staging.alpha-1edtech.com
    description: OneRoster staging environment
    x-speakeasy-server-id: staging
  # - url: https://api.alpha-1edtech.com
  #   description: OneRoster prod environment
  #   x-speakeasy-server-id: prod
tags:
  - name: Assessment Line Items Management
    description: >-
      This enables the management of the assessment line items i.e. line items
      that are used to store results about tests/assessments and where these
      test/assessments are not aligned to a class.
  - name: Assessment Results Management
    description: >-
      This enables the management of the assessment results i.e. results that
      are used to store scores for tests/assessments and where these
      test/assessments are not aligned to a class.
  - name: Categories Management
    description: This enables the management of Categories i.e. collections of LineItems.
  - name: Gradebook - Classes
  - name: Gradebook - Line Items
  - name: Gradebook - Results
  - name: Gradebook - Schools
  - name: Gradebook - Score Scales
  - name: Resources - Classes
  - name: Resources - Courses
  - name: Resources - General
  - name: Resources - Users
  - name: Rostering - Academic Sessions
  - name: Rostering - Classes
  - name: Rostering - Course Component Resources
  - name: Rostering - Course Components
  - name: Rostering - Courses
  - name: Rostering - Demographics
  - name: Rostering - Enrollments
  - name: Rostering - Grading Periods
  - name: Rostering - Organizations
  - name: Rostering - Schools
  - name: Rostering - Students
  - name: Rostering - Teachers
  - name: Rostering - Terms
  - name: Rostering - Users
security:
  - OAuth2: []
paths:
  /ims/oneroster/gradebook/v1p2/scoreScales/:
    get:
      operationId: getAllScoreScales
      summary: Get all score scales
      description: Returns a collection of all score scales.
      tags: &ref_0
        - Gradebook - Score Scales
      responses:
        '200':
          description: Successful response containing a collection of score scales
          content:
            application/json:
              schema:
                type: object
                properties:
                  scoreScales:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScoreScale'
                required:
                  - scoreScales
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createScoreScale
      summary: Create a new score scale
      description: Creates a new score scale with the provided information.
      tags: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scoreScale:
                  $ref: '#/components/schemas/ScoreScale'
              required:
                - scoreScale
      responses:
        '201':
          description: Score scale successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/scoreScales/{sourcedId}:
    get:
      operationId: getScoreScale
      summary: Get a specific score scale
      description: Returns a specific score scale by sourcedId.
      tags: *ref_0
      parameters:
        - name: sourcedId
          description: The sourcedId of the score scale
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the score scale
          content:
            application/json:
              schema:
                type: object
                properties:
                  scoreScale:
                    $ref: '#/components/schemas/ScoreScale'
                required:
                  - scoreScale
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateScoreScale
      summary: Update an existing score scale
      description: Updates an existing score scale with the provided information.
      tags: *ref_0
      parameters:
        - name: sourcedId
          description: The sourcedId of the score scale to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scoreScale:
                  $ref: '#/components/schemas/ScoreScale'
              required:
                - scoreScale
      responses:
        '200':
          description: Score scale successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  scoreScale:
                    $ref: '#/components/schemas/ScoreScale'
                required:
                  - scoreScale
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteScoreScale
      summary: Delete a score scale
      description: Deletes a score scale with the specified sourcedId.
      tags: *ref_0
      parameters:
        - name: sourcedId
          description: The sourcedId of the score scale to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Score scale successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/schools/{sourcedId}/scoreScales:
    get:
      operationId: getScoreScalesForSchool
      summary: Get score scales for a school
      description: >-
        Returns a collection of score scales associated with the specified
        school.
      tags:
        - Gradebook - Schools
        - Gradebook - Score Scales
      parameters:
        - name: sourcedId
          description: The sourcedId of the school
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response containing a collection of score scales
          content:
            application/json:
              schema:
                type: object
                properties:
                  scoreScales:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScoreScale'
                required:
                  - scoreScales
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/results/:
    get:
      operationId: getAllResults
      summary: Get all results
      description: Returns a collection of all results.
      tags: &ref_1
        - Gradebook - Results
      responses:
        '200':
          description: Successful response containing a collection of results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Result'
                required:
                  - results
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createResult
      summary: Create a new result
      description: Creates a new result with the provided information.
      tags: *ref_1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  $ref: '#/components/schemas/Result'
              required:
                - result
      responses:
        '201':
          description: Result successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/results/{sourcedId}:
    get:
      operationId: getResult
      summary: Get a specific result
      description: Returns a specific result by sourcedId.
      tags: *ref_1
      parameters:
        - name: sourcedId
          description: The sourcedId of the result
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Result'
                required:
                  - result
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Result not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateResult
      summary: Update an existing result
      description: Updates an existing result with the provided information.
      tags: *ref_1
      parameters:
        - name: sourcedId
          description: The sourcedId of the result to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  $ref: '#/components/schemas/Result'
              required:
                - result
      responses:
        '200':
          description: Result successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Result'
                required:
                  - result
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Result not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteResult
      summary: Delete a result
      description: Deletes a result with the specified sourcedId.
      tags: *ref_1
      parameters:
        - name: sourcedId
          description: The sourcedId of the result to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Result successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Result not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/lineItems/:
    get:
      operationId: getAllLineItems
      summary: Get all line items
      description: Returns a collection of all line items.
      tags: &ref_2
        - Gradebook - Line Items
      responses:
        '200':
          description: Successful response containing a collection of line items
          content:
            application/json:
              schema:
                type: object
                properties:
                  lineItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/LineItem'
                required:
                  - lineItems
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createLineItem
      summary: Create a new line item
      description: Creates a new line item with the provided information.
      tags: *ref_2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineItem:
                  $ref: '#/components/schemas/LineItem'
              required:
                - lineItem
      responses:
        '201':
          description: Line item successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/lineItems/{sourcedId}:
    get:
      operationId: getLineItem
      summary: Get a specific line item
      description: Returns a specific line item by sourcedId.
      tags: *ref_2
      parameters:
        - name: sourcedId
          description: The sourcedId of the line item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the line item
          content:
            application/json:
              schema:
                type: object
                properties:
                  lineItem:
                    $ref: '#/components/schemas/LineItem'
                required:
                  - lineItem
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateLineItem
      summary: Update an existing line item
      description: Updates an existing line item with the provided information.
      tags: *ref_2
      parameters:
        - name: sourcedId
          description: The sourcedId of the line item to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineItem:
                  $ref: '#/components/schemas/LineItem'
              required:
                - lineItem
      responses:
        '201':
          description: Line item successfully updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteLineItem
      summary: Delete a line item
      description: Deletes a line item with the specified sourcedId.
      tags: *ref_2
      parameters:
        - name: sourcedId
          description: The sourcedId of the line item to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Line item successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/lineItems/{sourcedId}/results:
    post:
      operationId: createResultForLineItem
      summary: Create a new result for a line item
      description: Creates a new result associated with the specified line item.
      tags: *ref_2
      parameters:
        - name: sourcedId
          description: The sourcedId of the line item
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/Result'
              required:
                - results
      responses:
        '201':
          description: Result successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/schools/{sourcedId}/lineItems:
    get:
      operationId: getLineItemsForSchool
      summary: Get line items for a school
      description: Returns a collection of line items associated with the specified school.
      tags:
        - Gradebook - Schools
        - Gradebook - Line Items
      parameters:
        - name: sourcedId
          description: The sourcedId of the school
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response containing a collection of line items
          content:
            application/json:
              schema:
                type: object
                properties:
                  lineItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/LineItem'
                required:
                  - lineItems
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createLineItemsForSchool
      summary: Create line items for a school
      description: Creates new line items associated with the specified school.
      tags:
        - Gradebook - Schools
        - Gradebook - Line Items
      parameters:
        - name: sourcedId
          description: The sourcedId of the school
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineItems:
                  type: array
                  items:
                    $ref: '#/components/schemas/LineItem'
              required:
                - lineItems
      responses:
        '201':
          description: Line items successfully created for school
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/classes/{classSourcedId}/academicSessions/{academicSessionSourcedId}/results:
    post:
      operationId: postResultsForAcademicSessionForClass
      summary: Create results for an academic session in a class
      description: Creates new results for a specific academic session within a class.
      tags: &ref_3
        - Gradebook - Classes
      parameters:
        - name: classSourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
        - name: academicSessionSourcedId
          description: The sourcedId of the academic session
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/Result'
              required:
                - results
      responses:
        '201':
          description: Results successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class or academic session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/classes/{classSourcedId}/lineItems:
    parameters:
      - name: classSourcedId
        in: path
        required: true
        schema:
          type: string
        description: The sourcedId of the class
    get:
      operationId: getLineItemsForClass
      summary: Get line items for a class
      description: Returns a collection of line items associated with a specific class.
      tags: *ref_3
      responses:
        '200':
          description: Successful response containing a collection of line items for the class
          content:
            application/json:
              schema:
                type: object
                properties:
                  lineItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/LineItem'
                required:
                  - lineItems
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: postLineItemsForClass
      summary: Create a line item for a class
      description: Creates a new line item associated with a specific class.
      tags: *ref_3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lineItem:
                  $ref: '#/components/schemas/LineItem'
              required:
                - lineItem
      responses:
        '201':
          description: Line item successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/classes/{classSourcedId}/lineItems/{lineItemSourcedId}/results:
    get:
      operationId: getResultsForLineItemForClass
      summary: Get results for a specific line item in a class
      description: Returns a collection of results for a specific line item within a class.
      tags: *ref_3
      parameters:
        - name: classSourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
        - name: lineItemSourcedId
          description: The sourcedId of the line item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of results for the
            specified line item in the class
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Result'
                required:
                  - results
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class or line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/classes/{classSourcedId}/students/{studentSourcedId}/results:
    get:
      operationId: getResultsForStudentForClass
      summary: Get results for a specific student in a class
      description: Returns a collection of results for a specific student within a class.
      tags: *ref_3
      parameters:
        - name: classSourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
        - name: studentSourcedId
          description: The sourcedId of the student
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of results for the
            specified student in the class
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Result'
                required:
                  - results
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class or student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/classes/{sourcedId}/categories:
    get:
      operationId: getCategoriesForClass
      summary: Get categories for a class
      description: Returns a collection of categories associated with a specific class.
      tags: *ref_3
      parameters:
        - name: sourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of categories for the
            class
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                required:
                  - categories
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/classes/{sourcedId}/results:
    get:
      operationId: getResultsForClass
      summary: Get results for a class
      description: Returns a collection of results associated with a specific class.
      tags: *ref_3
      parameters:
        - name: sourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response containing a collection of results for the class
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Result'
                required:
                  - results
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/classes/{sourcedId}/scoreScales:
    get:
      operationId: getScoreScalesForClass
      summary: Get score scales for a class
      description: Returns a collection of score scales associated with a specific class.
      tags: *ref_3
      parameters:
        - name: sourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of score scales for the
            class
          content:
            application/json:
              schema:
                type: object
                properties:
                  scoreScales:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScoreScale'
                required:
                  - scoreScales
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/categories/:
    get:
      operationId: getAllCategories
      summary: The REST read request message for the getAllCategories() API call.
      description: Get all of the lineItem categories on the service provider.
      tags: &ref_4
        - Categories Management
      responses:
        '200':
          description: Successful response containing a collection of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                required:
                  - categories
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createCategory
      summary: The REST create request message for the createCategory() API call.
      description: >-
        To create a new Category. The responding system must return the set of
        sourcedIds that have been allocated to the newly created category
        record. A 'title' MUST be provided when creating a category.
      tags: *ref_4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/Category'
              required:
                - category
      responses:
        '201':
          description: Category successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/categories/{sourcedId}:
    get:
      operationId: getCategory
      summary: The REST read request message for the getCategory() API call.
      description: >-
        Get a specific category on the service provider. If the corresponding
        record cannot be located, the api will return a 404 error code and
        message 'Category not found.'
      tags: *ref_4
      parameters:
        - name: sourcedId
          description: The sourcedId of the category
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the category
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    $ref: '#/components/schemas/Category'
                required:
                  - category
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateCategory
      summary: The REST update request message for the updateCategory() API call.
      description: >-
        To update an existing Category. The sourcedId for the record to be
        updated is supplied by the requesting system.
      tags: *ref_4
      parameters:
        - name: sourcedId
          description: The sourcedId of the category to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/Category'
              required:
                - category
      responses:
        '200':
          description: Category successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    $ref: '#/components/schemas/Category'
                required:
                  - category
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteCategory
      summary: The REST delete request message for the deleteCategory() API call.
      description: >-
        Perform a soft delete on a specific Category on the service provider.
        This operation changes the status of the Category to 'tobedeleted'.
      tags: *ref_4
      parameters:
        - name: sourcedId
          description: The sourcedId of the category to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Category successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/assessmentResults/:
    get:
      operationId: getAllAssessmentResults
      summary: >-
        The REST read request message for the getAllAssessmentResults() API
        call.
      description: Get all of the Assessment Results on the service provider.
      tags: &ref_5
        - Assessment Results Management
      parameters:
        - in: query
          name: fields
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
            description: Comma-separated list of fields to include in the response
            example: sourcedId,name
        - in: query
          name: limit
          description: The maximum number of items to return in the paginated response
          schema:
            type: integer
            minimum: 1
            default: 100
            description: The maximum number of items to return in the paginated response
            example: 100
        - in: query
          name: offset
          description: The number of items to skip in the paginated response
          schema:
            type: integer
            minimum: 0
            default: 0
            description: The number of items to skip in the paginated response
            example: 0
        - in: query
          name: sort
          description: The field to sort the response by
          schema:
            type: string
            description: The field to sort the response by
        - in: query
          name: orderBy
          description: The order to sort the response by
          schema:
            type: string
            enum: &ref_6
              - asc
              - desc
            description: The order to sort the response by
        - in: query
          name: filter
          description: The filter to apply to the response
          schema:
            type: string
            description: The filter to apply to the response
            example: status='active'
        - in: query
          name: search
          description: The search query to apply to the response
          schema:
            type: string
            description: The search query to apply to the response
      x-speakeasy-pagination:
        type: offsetLimit
        inputs:
          - name: offset
            in: parameters
            type: offset
          - name: limit
            in: parameters
            type: limit
        outputs:
          results: $.assessmentResults
      responses:
        '200':
          description: Successful response containing a collection of assessment results
          content:
            application/json:
              schema:
                type: object
                properties:
                  assessmentResults:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssessmentResult'
                required:
                  - assessmentResults
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createAssessmentResult
      summary: >-
        The REST create request message for the createAssessmentResult() API
        call.
      description: >-
        To create an Assessment Result. The responding system must return the
        set of sourcedIds that have been allocated to the newly created
        assessmentResult record. An Assessment Line Item sourcedId and Student
        sourcedId MUST be provided when creating an assessmentResult.
      tags: *ref_5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentResult:
                  $ref: '#/components/schemas/AssessmentResult'
              required:
                - assessmentResult
      responses:
        '201':
          description: Assessment result successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/assessmentResults/{sourcedId}:
    get:
      operationId: getAssessmentResult
      summary: The REST read request message for the getAssessmentResult() API call.
      description: >-
        Get a specific Assessment Result on the service provider. If the
        corresponding record cannot be located, the api will return a 404 error
        code and message 'Assessment result not found.'
      tags: *ref_5
      parameters:
        - name: sourcedId
          description: The sourcedId of the assessment result
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the assessment result
          content:
            application/json:
              schema:
                type: object
                properties:
                  assessmentResult:
                    $ref: '#/components/schemas/AssessmentResult'
                required:
                  - assessmentResult
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Assessment result not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateAssessmentResult
      summary: >-
        The REST update request message for the updateAssessmentResult() API
        call.
      description: >-
        To update an existing Assessment Result. The sourcedId for the record to
        be updated is supplied by the requesting system.
      tags: *ref_5
      parameters:
        - name: sourcedId
          description: The sourcedId of the assessment result to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentResult:
                  $ref: '#/components/schemas/AssessmentResult'
              required:
                - assessmentResult
      responses:
        '200':
          description: Assessment result successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  assessmentResult:
                    $ref: '#/components/schemas/AssessmentResult'
                required:
                  - assessmentResult
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Assessment result not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteAssessmentResult
      summary: >-
        The REST delete request message for the deleteAssessmentResult() API
        call.
      description: >-
        Perform a soft delete on a specific Assessment Result on the service
        provider. This operation changes the status of the Assessment Result to
        'tobedeleted'.
      tags: *ref_5
      parameters:
        - name: sourcedId
          description: The sourcedId of the assessment result to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Assessment result successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Assessment result not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/assessmentLineItems/:
    get:
      operationId: getAllAssessmentLineItems
      summary: >-
        The REST read request message for the getAllAssessmentLineItems() API
        call.
      description: Get all of the Assessment Line Items on the service provider.
      tags: &ref_7
        - Assessment Line Items Management
      parameters:
        - in: query
          name: fields
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
            description: Comma-separated list of fields to include in the response
            example: sourcedId,name
        - in: query
          name: limit
          description: The maximum number of items to return in the paginated response
          schema:
            type: integer
            minimum: 1
            default: 100
            description: The maximum number of items to return in the paginated response
            example: 100
        - in: query
          name: offset
          description: The number of items to skip in the paginated response
          schema:
            type: integer
            minimum: 0
            default: 0
            description: The number of items to skip in the paginated response
            example: 0
        - in: query
          name: sort
          description: The field to sort the response by
          schema:
            type: string
            description: The field to sort the response by
        - in: query
          name: orderBy
          description: The order to sort the response by
          schema:
            type: string
            enum: *ref_6
            description: The order to sort the response by
        - in: query
          name: filter
          description: The filter to apply to the response
          schema:
            type: string
            description: The filter to apply to the response
            example: status='active'
        - in: query
          name: search
          description: The search query to apply to the response
          schema:
            type: string
            description: The search query to apply to the response
      x-speakeasy-pagination:
        type: offsetLimit
        inputs:
          - name: offset
            in: parameters
            type: offset
          - name: limit
            in: parameters
            type: limit
        outputs:
          results: $.assessmentLineItems
      responses:
        '200':
          description: Successful response containing a collection of assessment line items
          content:
            application/json:
              schema:
                type: object
                properties:
                  assessmentLineItems:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssessmentLineItem'
                required:
                  - assessmentLineItems
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createAssessmentLineItem
      summary: >-
        The REST create request message for the createAssessmentLineItem() API
        call.
      description: >-
        To create an Assessment Line Item. The responding system must return the
        set of sourcedIds that have been allocated to the newly created
        assessmentLineItem record. A 'title' MUST be provided when creating an
        assessmentLineItem.
      tags: *ref_7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentLineItem:
                  $ref: '#/components/schemas/AssessmentLineItem'
              required:
                - assessmentLineItem
      responses:
        '201':
          description: Assessment line item successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/gradebook/v1p2/assessmentLineItems/{sourcedId}:
    get:
      operationId: getAssessmentLineItem
      summary: The REST read request message for the getAssessmentLineItem() API call.
      description: >-
        Get a specific Assessment Line Item on the service provider. If the
        corresponding record cannot be located, the api will return a 404 error
        code and message 'Assessment line item not found.'
      tags: *ref_7
      parameters:
        - name: sourcedId
          description: The sourcedId of the assessment line item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the assessment line item
          content:
            application/json:
              schema:
                type: object
                properties:
                  assessmentLineItem:
                    $ref: '#/components/schemas/AssessmentLineItem'
                required:
                  - assessmentLineItem
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Assessment line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateAssessmentLineItem
      summary: >-
        The REST update request message for the updateAssessmentLineItem() API
        call.
      description: >-
        To update an existing Assessment Line Item. The sourcedId for the record
        to be updated is supplied by the requesting system.
      tags: *ref_7
      parameters:
        - name: sourcedId
          description: The sourcedId of the assessment line item to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentLineItem:
                  $ref: '#/components/schemas/AssessmentLineItem'
              required:
                - assessmentLineItem
      responses:
        '200':
          description: Assessment line item successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  assessmentLineItem:
                    $ref: '#/components/schemas/AssessmentLineItem'
                required:
                  - assessmentLineItem
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Assessment line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteAssessmentLineItem
      summary: >-
        The REST delete request message for the deleteAssessmentLineItem() API
        call.
      description: >-
        Perform a soft delete on a specific Assessment Line Item on the service
        provider. This operation changes the status of the Assessment Line Item
        to 'tobedeleted'.
      tags: *ref_7
      parameters:
        - name: sourcedId
          description: The sourcedId of the assessment line item to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Assessment line item successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Assessment line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/courses/{courseSourcedId}/resources:
    get:
      operationId: getResourcesForCourse
      summary: Get resources for a course
      description: Returns a collection of resources associated with the course.
      tags: &ref_8
        - Resources - Courses
      parameters:
        - name: courseSourcedId
          description: The sourcedId of the course
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of resources for the
            course
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'
                required:
                  - resources
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: assignResourceToCourse
      summary: Assign a resource to a course
      description: Assigns an existing resource to the specified course.
      tags: *ref_8
      parameters:
        - name: courseSourcedId
          description: The sourcedId of the course
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    dateAssigned:
                      type: string
                  required:
                    - sourcedId
              required:
                - resource
      responses:
        '201':
          description: Resource successfully assigned to course
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/courses/{courseSourcedId}/resources/{resourceSourcedId}:
    delete:
      operationId: removeResourceFromCourse
      summary: Remove a resource from a course
      description: Removes the specified resource from the course.
      tags: *ref_8
      parameters:
        - name: courseSourcedId
          description: The sourcedId of the course
          in: path
          required: true
          schema:
            type: string
        - name: resourceSourcedId
          description: The sourcedId of the resource to remove
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Resource successfully removed from course
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course or resource relationship not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/classes/{classSourcedId}/resources:
    get:
      operationId: getResourcesForClass
      summary: Get resources for a class
      description: Returns a collection of resources associated with the class.
      tags: &ref_9
        - Resources - Classes
      parameters:
        - name: classSourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of resources for the
            class
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'
                required:
                  - resources
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: assignResourceToClass
      summary: Assign a resource to a class
      description: Assigns an existing resource to the specified class.
      tags: *ref_9
      parameters:
        - name: classSourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    dateAssigned:
                      type: string
                  required:
                    - sourcedId
              required:
                - resource
      responses:
        '201':
          description: Resource successfully assigned to class
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/classes/{classSourcedId}/resources/{resourceSourcedId}:
    delete:
      operationId: removeResourceFromClass
      summary: Remove a resource from a class
      description: Removes the specified resource from the class.
      tags: *ref_9
      parameters:
        - name: classSourcedId
          description: The sourcedId of the class
          in: path
          required: true
          schema:
            type: string
        - name: resourceSourcedId
          description: The sourcedId of the resource to remove
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Resource successfully removed from class
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class or resource relationship not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/users/{userSourcedId}/resources:
    get:
      operationId: getResourcesForUser
      summary: Get resources for a user
      description: Returns a collection of resources associated with the user.
      tags: &ref_10
        - Resources - Users
      parameters:
        - name: userSourcedId
          description: The sourcedId of the user
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of resources for the
            user
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'
                required:
                  - resources
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: assignResourceToUser
      summary: Assign a resource to a user
      description: Assigns an existing resource to the specified user.
      tags: *ref_10
      parameters:
        - name: userSourcedId
          description: The sourcedId of the user
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    dateAssigned:
                      type: string
                  required:
                    - sourcedId
              required:
                - resource
      responses:
        '201':
          description: Resource successfully assigned to user
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: User or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/users/{userSourcedId}/resources/{resourceSourcedId}:
    delete:
      operationId: removeResourceFromUser
      summary: Remove a resource from a user
      description: Removes the specified resource from the user.
      tags: *ref_10
      parameters:
        - name: userSourcedId
          description: The sourcedId of the user
          in: path
          required: true
          schema:
            type: string
        - name: resourceSourcedId
          description: The sourcedId of the resource to remove
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Resource successfully removed from user
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: User or resource relationship not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/:
    get:
      operationId: getAllResources
      summary: Get all resources
      description: Returns a collection of all resources.
      tags: &ref_11
        - Resources - General
      responses:
        '200':
          description: Successful response containing a collection of resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'
                required:
                  - resources
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createResource
      summary: Create a new resource
      description: Creates a new resource with the provided information.
      tags: *ref_11
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: &ref_12
                        - active
                        - tobedeleted
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    title:
                      type: string
                    roles:
                      type: array
                      items:
                        type: string
                        enum: &ref_13
                          - primary
                          - secondary
                    importance:
                      type: string
                      enum: &ref_14
                        - primary
                        - secondary
                    vendorResourceId:
                      type: string
                    vendorId:
                      type: string
                    applicationId:
                      type: string
                  required:
                    - title
                    - vendorResourceId
              required:
                - resource
      responses:
        '201':
          description: Resource successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/resources/v1p2/resources/{sourcedId}:
    get:
      operationId: getResource
      summary: Get a specific resource
      description: Returns a specific resource by sourcedId.
      tags: *ref_11
      parameters:
        - name: sourcedId
          description: The sourcedId of the resource
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  resource:
                    $ref: '#/components/schemas/Resource'
                required:
                  - resource
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateResource
      summary: Update an existing resource
      description: Updates an existing resource with the provided information.
      tags: *ref_11
      parameters:
        - name: sourcedId
          description: The sourcedId of the resource to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_12
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    title:
                      type: string
                    roles:
                      type: array
                      items:
                        type: string
                        enum: *ref_13
                    importance:
                      type: string
                      enum: *ref_14
                    vendorResourceId:
                      type: string
                    vendorId:
                      type: string
                    applicationId:
                      type: string
                  required:
                    - title
                    - vendorResourceId
              required:
                - resource
      responses:
        '200':
          description: Resource successfully updated
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteResource
      summary: Delete a resource
      description: Deletes a resource with the specified sourcedId.
      tags: *ref_11
      parameters:
        - name: sourcedId
          description: The sourcedId of the resource to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Resource successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/users/:
    get:
      operationId: getAllUsers
      summary: Get all users
      description: Returns a collection of all users.
      tags: &ref_15
        - Rostering - Users
      parameters:
        - in: query
          name: fields
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
            description: Comma-separated list of fields to include in the response
            example: sourcedId,name
        - in: query
          name: limit
          description: The maximum number of items to return in the paginated response
          schema:
            type: integer
            minimum: 1
            default: 100
            description: The maximum number of items to return in the paginated response
            example: 100
        - in: query
          name: offset
          description: The number of items to skip in the paginated response
          schema:
            type: integer
            minimum: 0
            default: 0
            description: The number of items to skip in the paginated response
            example: 0
        - in: query
          name: sort
          description: The field to sort the response by
          schema:
            type: string
            description: The field to sort the response by
        - in: query
          name: orderBy
          description: The order to sort the response by
          schema:
            type: string
            enum: *ref_6
            description: The order to sort the response by
        - in: query
          name: filter
          description: The filter to apply to the response
          schema:
            type: string
            description: The filter to apply to the response
            example: status='active'
        - in: query
          name: search
          description: The search query to apply to the response
          schema:
            type: string
            description: The search query to apply to the response
      x-speakeasy-pagination:
        type: offsetLimit
        inputs:
          - name: offset
            in: parameters
            type: offset
          - name: limit
            in: parameters
            type: limit
        outputs:
          results: $.users
      responses:
        '200':
          description: Successful response containing a collection of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: &ref_18
                            - active
                            - tobedeleted
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        userMasterIdentifier:
                          type:
                            - string
                            - 'null'
                        username:
                          type:
                            - string
                            - 'null'
                        userIds:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              identifier:
                                type: string
                            required:
                              - type
                              - identifier
                        enabledUser:
                          type: boolean
                        givenName:
                          type: string
                        familyName:
                          type: string
                        middleName:
                          type:
                            - string
                            - 'null'
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              roleType:
                                type: string
                                enum: &ref_16
                                  - primary
                                  - secondary
                              role:
                                type: string
                                enum: &ref_17
                                  - administrator
                                  - aide
                                  - guardian
                                  - parent
                                  - proctor
                                  - relative
                                  - student
                                  - teacher
                              org:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri
                                  sourcedId:
                                    type: string
                                  type:
                                    type: string
                                required:
                                  - href
                                  - sourcedId
                                  - type
                              userProfile:
                                type: string
                              beginDate:
                                type:
                                  - string
                                  - 'null'
                              endDate:
                                type:
                                  - string
                                  - 'null'
                            required:
                              - roleType
                              - role
                              - org
                              - beginDate
                              - endDate
                          default: &ref_19 []
                        agents:
                          type: array
                          items:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                              sourcedId:
                                type: string
                              type:
                                type: string
                                enum: &ref_20
                                  - academicSession
                                  - assessmentLineItem
                                  - category
                                  - class
                                  - course
                                  - demographics
                                  - enrollment
                                  - gradingPeriod
                                  - lineItem
                                  - org
                                  - resource
                                  - result
                                  - scoreScale
                                  - student
                                  - teacher
                                  - term
                                  - user
                                  - componentResource
                                  - courseComponent
                            required:
                              - href
                              - sourcedId
                              - type
                          default: &ref_21 []
                        primaryOrg:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                          required:
                            - href
                            - sourcedId
                            - type
                        email:
                          type:
                            - string
                            - 'null'
                          format: email
                        preferredFirstName:
                          type:
                            - string
                            - 'null'
                        preferredMiddleName:
                          type:
                            - string
                            - 'null'
                        preferredLastName:
                          type:
                            - string
                            - 'null'
                        pronouns:
                          type:
                            - string
                            - 'null'
                        grades:
                          type: array
                          items:
                            type: string
                        password:
                          type:
                            - string
                            - 'null'
                        sms:
                          type:
                            - string
                            - 'null'
                        phone:
                          type:
                            - string
                            - 'null'
                      required:
                        - sourcedId
                        - status
                        - enabledUser
                        - givenName
                        - familyName
                        - roles
                        - agents
                required:
                  - users
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createUser
      summary: Create a new user
      description: Creates a new user with the provided information.
      tags: *ref_15
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    metadata:
                      type: object
                      additionalProperties: {}
                    status:
                      type: string
                      enum: &ref_22
                        - active
                        - tobedeleted
                      default: active
                    userMasterIdentifier:
                      type:
                        - string
                        - 'null'
                    username:
                      type:
                        - string
                        - 'null'
                    userIds:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          identifier:
                            type: string
                        required:
                          - type
                          - identifier
                    enabledUser:
                      type: boolean
                    givenName:
                      type: string
                    familyName:
                      type: string
                    middleName:
                      type:
                        - string
                        - 'null'
                    roles:
                      type: array
                      items:
                        type: object
                        properties:
                          roleType:
                            type: string
                            enum: *ref_16
                          role:
                            type: string
                            enum: *ref_17
                          org:
                            type: object
                            properties:
                              sourcedId:
                                type: string
                            required:
                              - sourcedId
                          userProfile:
                            type: string
                          beginDate:
                            type: string
                          endDate:
                            type: string
                        required:
                          - roleType
                          - role
                          - org
                      minItems: 1
                    primaryOrg:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    email:
                      type:
                        - string
                        - 'null'
                      format: email
                    preferredFirstName:
                      type:
                        - string
                        - 'null'
                    preferredMiddleName:
                      type:
                        - string
                        - 'null'
                    preferredLastName:
                      type:
                        - string
                        - 'null'
                    pronouns:
                      type:
                        - string
                        - 'null'
                    grades:
                      type: array
                      items:
                        type: string
                    password:
                      type:
                        - string
                        - 'null'
                    sms:
                      type:
                        - string
                        - 'null'
                    phone:
                      type:
                        - string
                        - 'null'
                    agents:
                      type: array
                      items:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      default: &ref_23 []
                  required:
                    - enabledUser
                    - givenName
                    - familyName
                    - roles
              required:
                - user
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      userMasterIdentifier:
                        type:
                          - string
                          - 'null'
                      username:
                        type:
                          - string
                          - 'null'
                      userIds:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            identifier:
                              type: string
                          required:
                            - type
                            - identifier
                      enabledUser:
                        type: boolean
                      givenName:
                        type: string
                      familyName:
                        type: string
                      middleName:
                        type:
                          - string
                          - 'null'
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            roleType:
                              type: string
                              enum: *ref_16
                            role:
                              type: string
                              enum: *ref_17
                            org:
                              type: object
                              properties:
                                href:
                                  type: string
                                  format: uri
                                sourcedId:
                                  type: string
                                type:
                                  type: string
                              required:
                                - href
                                - sourcedId
                                - type
                            userProfile:
                              type: string
                            beginDate:
                              type:
                                - string
                                - 'null'
                            endDate:
                              type:
                                - string
                                - 'null'
                          required:
                            - roleType
                            - role
                            - org
                            - beginDate
                            - endDate
                        default: *ref_19
                      agents:
                        type: array
                        items:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                              enum: *ref_20
                          required:
                            - href
                            - sourcedId
                            - type
                        default: *ref_21
                      primaryOrg:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                          sourcedId:
                            type: string
                          type:
                            type: string
                        required:
                          - href
                          - sourcedId
                          - type
                      email:
                        type:
                          - string
                          - 'null'
                        format: email
                      preferredFirstName:
                        type:
                          - string
                          - 'null'
                      preferredMiddleName:
                        type:
                          - string
                          - 'null'
                      preferredLastName:
                        type:
                          - string
                          - 'null'
                      pronouns:
                        type:
                          - string
                          - 'null'
                      grades:
                        type: array
                        items:
                          type: string
                      password:
                        type:
                          - string
                          - 'null'
                      sms:
                        type:
                          - string
                          - 'null'
                      phone:
                        type:
                          - string
                          - 'null'
                    required:
                      - sourcedId
                      - status
                      - enabledUser
                      - givenName
                      - familyName
                      - roles
                      - agents
                required:
                  - user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/users/{sourcedId}:
    get:
      operationId: getUser
      summary: Get a specific user
      description: Returns a specific user by sourcedId.
      tags: *ref_15
      parameters:
        - name: sourcedId
          description: The sourcedId of the user
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      userMasterIdentifier:
                        type:
                          - string
                          - 'null'
                      username:
                        type:
                          - string
                          - 'null'
                      userIds:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            identifier:
                              type: string
                          required:
                            - type
                            - identifier
                      enabledUser:
                        type: boolean
                      givenName:
                        type: string
                      familyName:
                        type: string
                      middleName:
                        type:
                          - string
                          - 'null'
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            roleType:
                              type: string
                              enum: *ref_16
                            role:
                              type: string
                              enum: *ref_17
                            org:
                              type: object
                              properties:
                                href:
                                  type: string
                                  format: uri
                                sourcedId:
                                  type: string
                                type:
                                  type: string
                              required:
                                - href
                                - sourcedId
                                - type
                            userProfile:
                              type: string
                            beginDate:
                              type:
                                - string
                                - 'null'
                            endDate:
                              type:
                                - string
                                - 'null'
                          required:
                            - roleType
                            - role
                            - org
                            - beginDate
                            - endDate
                        default: *ref_19
                      agents:
                        type: array
                        items:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                              enum: *ref_20
                          required:
                            - href
                            - sourcedId
                            - type
                        default: *ref_21
                      primaryOrg:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                          sourcedId:
                            type: string
                          type:
                            type: string
                        required:
                          - href
                          - sourcedId
                          - type
                      email:
                        type:
                          - string
                          - 'null'
                        format: email
                      preferredFirstName:
                        type:
                          - string
                          - 'null'
                      preferredMiddleName:
                        type:
                          - string
                          - 'null'
                      preferredLastName:
                        type:
                          - string
                          - 'null'
                      pronouns:
                        type:
                          - string
                          - 'null'
                      grades:
                        type: array
                        items:
                          type: string
                      password:
                        type:
                          - string
                          - 'null'
                      sms:
                        type:
                          - string
                          - 'null'
                      phone:
                        type:
                          - string
                          - 'null'
                    required:
                      - sourcedId
                      - status
                      - enabledUser
                      - givenName
                      - familyName
                      - roles
                      - agents
                required:
                  - user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateUser
      summary: Update an existing user
      description: Updates an existing user with the provided information.
      tags: *ref_15
      parameters:
        - name: sourcedId
          description: The sourcedId of the user to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    metadata:
                      type: object
                      additionalProperties: {}
                    status:
                      type: string
                      enum: *ref_22
                      default: active
                    userMasterIdentifier:
                      type:
                        - string
                        - 'null'
                    username:
                      type:
                        - string
                        - 'null'
                    userIds:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          identifier:
                            type: string
                        required:
                          - type
                          - identifier
                    enabledUser:
                      type: boolean
                    givenName:
                      type: string
                    familyName:
                      type: string
                    middleName:
                      type:
                        - string
                        - 'null'
                    roles:
                      type: array
                      items:
                        type: object
                        properties:
                          roleType:
                            type: string
                            enum: *ref_16
                          role:
                            type: string
                            enum: *ref_17
                          org:
                            type: object
                            properties:
                              sourcedId:
                                type: string
                            required:
                              - sourcedId
                          userProfile:
                            type: string
                          beginDate:
                            type: string
                          endDate:
                            type: string
                        required:
                          - roleType
                          - role
                          - org
                      minItems: 1
                    primaryOrg:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    email:
                      type:
                        - string
                        - 'null'
                      format: email
                    preferredFirstName:
                      type:
                        - string
                        - 'null'
                    preferredMiddleName:
                      type:
                        - string
                        - 'null'
                    preferredLastName:
                      type:
                        - string
                        - 'null'
                    pronouns:
                      type:
                        - string
                        - 'null'
                    grades:
                      type: array
                      items:
                        type: string
                    password:
                      type:
                        - string
                        - 'null'
                    sms:
                      type:
                        - string
                        - 'null'
                    phone:
                      type:
                        - string
                        - 'null'
                    agents:
                      type: array
                      items:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      default: *ref_23
                  required:
                    - enabledUser
                    - givenName
                    - familyName
                    - roles
              required:
                - user
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      userMasterIdentifier:
                        type:
                          - string
                          - 'null'
                      username:
                        type:
                          - string
                          - 'null'
                      userIds:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            identifier:
                              type: string
                          required:
                            - type
                            - identifier
                      enabledUser:
                        type: boolean
                      givenName:
                        type: string
                      familyName:
                        type: string
                      middleName:
                        type:
                          - string
                          - 'null'
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            roleType:
                              type: string
                              enum: *ref_16
                            role:
                              type: string
                              enum: *ref_17
                            org:
                              type: object
                              properties:
                                href:
                                  type: string
                                  format: uri
                                sourcedId:
                                  type: string
                                type:
                                  type: string
                              required:
                                - href
                                - sourcedId
                                - type
                            userProfile:
                              type: string
                            beginDate:
                              type:
                                - string
                                - 'null'
                            endDate:
                              type:
                                - string
                                - 'null'
                          required:
                            - roleType
                            - role
                            - org
                            - beginDate
                            - endDate
                        default: *ref_19
                      agents:
                        type: array
                        items:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                              enum: *ref_20
                          required:
                            - href
                            - sourcedId
                            - type
                        default: *ref_21
                      primaryOrg:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                          sourcedId:
                            type: string
                          type:
                            type: string
                        required:
                          - href
                          - sourcedId
                          - type
                      email:
                        type:
                          - string
                          - 'null'
                        format: email
                      preferredFirstName:
                        type:
                          - string
                          - 'null'
                      preferredMiddleName:
                        type:
                          - string
                          - 'null'
                      preferredLastName:
                        type:
                          - string
                          - 'null'
                      pronouns:
                        type:
                          - string
                          - 'null'
                      grades:
                        type: array
                        items:
                          type: string
                      password:
                        type:
                          - string
                          - 'null'
                      sms:
                        type:
                          - string
                          - 'null'
                      phone:
                        type:
                          - string
                          - 'null'
                    required:
                      - sourcedId
                      - status
                      - enabledUser
                      - givenName
                      - familyName
                      - roles
                      - agents
                required:
                  - user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteUser
      summary: Delete a user
      description: Deletes a user with the specified sourcedId.
      tags: *ref_15
      parameters:
        - name: sourcedId
          description: The sourcedId of the user to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/terms/:
    get:
      operationId: getAllTerms
      summary: Get all terms
      description: Returns a collection of all terms.
      tags: &ref_24
        - Rostering - Terms
      responses:
        '200':
          description: Successful response containing a collection of terms
          content:
            application/json:
              schema:
                type: object
                properties:
                  terms:
                    type: array
                    items:
                      $ref: '#/components/schemas/AcademicSession'
                required:
                  - terms
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/terms/{sourcedId}:
    get:
      operationId: getTerm
      summary: Get a specific term
      description: Returns a specific term by sourcedId.
      tags: *ref_24
      parameters:
        - name: sourcedId
          description: The sourcedId of the term
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the term
          content:
            application/json:
              schema:
                type: object
                properties:
                  term:
                    $ref: '#/components/schemas/AcademicSession'
                required:
                  - term
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/teachers/:
    get:
      operationId: getAllTeachers
      summary: Get all teachers
      description: Returns a collection of all teachers.
      tags: &ref_25
        - Rostering - Teachers
      responses:
        '200':
          description: Successful response containing a collection of teachers
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        userMasterIdentifier:
                          type:
                            - string
                            - 'null'
                        username:
                          type:
                            - string
                            - 'null'
                        userIds:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              identifier:
                                type: string
                            required:
                              - type
                              - identifier
                        enabledUser:
                          type: boolean
                        givenName:
                          type: string
                        familyName:
                          type: string
                        middleName:
                          type:
                            - string
                            - 'null'
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              roleType:
                                type: string
                                enum: *ref_16
                              role:
                                type: string
                                enum: *ref_17
                              org:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri
                                  sourcedId:
                                    type: string
                                  type:
                                    type: string
                                required:
                                  - href
                                  - sourcedId
                                  - type
                              userProfile:
                                type: string
                              beginDate:
                                type:
                                  - string
                                  - 'null'
                              endDate:
                                type:
                                  - string
                                  - 'null'
                            required:
                              - roleType
                              - role
                              - org
                              - beginDate
                              - endDate
                          default: *ref_19
                        agents:
                          type: array
                          items:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                              sourcedId:
                                type: string
                              type:
                                type: string
                                enum: *ref_20
                            required:
                              - href
                              - sourcedId
                              - type
                          default: *ref_21
                        primaryOrg:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                          required:
                            - href
                            - sourcedId
                            - type
                        email:
                          type:
                            - string
                            - 'null'
                          format: email
                        preferredFirstName:
                          type:
                            - string
                            - 'null'
                        preferredMiddleName:
                          type:
                            - string
                            - 'null'
                        preferredLastName:
                          type:
                            - string
                            - 'null'
                        pronouns:
                          type:
                            - string
                            - 'null'
                        grades:
                          type: array
                          items:
                            type: string
                        password:
                          type:
                            - string
                            - 'null'
                        sms:
                          type:
                            - string
                            - 'null'
                        phone:
                          type:
                            - string
                            - 'null'
                      required:
                        - sourcedId
                        - status
                        - enabledUser
                        - givenName
                        - familyName
                        - roles
                        - agents
                required:
                  - users
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/teachers/{sourcedId}:
    get:
      operationId: getTeacher
      summary: Get a specific teacher
      description: Returns a specific teacher by sourcedId.
      tags: *ref_25
      parameters:
        - name: sourcedId
          description: The sourcedId of the teacher
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the teacher
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      userMasterIdentifier:
                        type:
                          - string
                          - 'null'
                      username:
                        type:
                          - string
                          - 'null'
                      userIds:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            identifier:
                              type: string
                          required:
                            - type
                            - identifier
                      enabledUser:
                        type: boolean
                      givenName:
                        type: string
                      familyName:
                        type: string
                      middleName:
                        type:
                          - string
                          - 'null'
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            roleType:
                              type: string
                              enum: *ref_16
                            role:
                              type: string
                              enum: *ref_17
                            org:
                              type: object
                              properties:
                                href:
                                  type: string
                                  format: uri
                                sourcedId:
                                  type: string
                                type:
                                  type: string
                              required:
                                - href
                                - sourcedId
                                - type
                            userProfile:
                              type: string
                            beginDate:
                              type:
                                - string
                                - 'null'
                            endDate:
                              type:
                                - string
                                - 'null'
                          required:
                            - roleType
                            - role
                            - org
                            - beginDate
                            - endDate
                        default: *ref_19
                      agents:
                        type: array
                        items:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                              enum: *ref_20
                          required:
                            - href
                            - sourcedId
                            - type
                        default: *ref_21
                      primaryOrg:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                          sourcedId:
                            type: string
                          type:
                            type: string
                        required:
                          - href
                          - sourcedId
                          - type
                      email:
                        type:
                          - string
                          - 'null'
                        format: email
                      preferredFirstName:
                        type:
                          - string
                          - 'null'
                      preferredMiddleName:
                        type:
                          - string
                          - 'null'
                      preferredLastName:
                        type:
                          - string
                          - 'null'
                      pronouns:
                        type:
                          - string
                          - 'null'
                      grades:
                        type: array
                        items:
                          type: string
                      password:
                        type:
                          - string
                          - 'null'
                      sms:
                        type:
                          - string
                          - 'null'
                      phone:
                        type:
                          - string
                          - 'null'
                    required:
                      - sourcedId
                      - status
                      - enabledUser
                      - givenName
                      - familyName
                      - roles
                      - agents
                required:
                  - user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/students/:
    get:
      operationId: getAllStudents
      summary: Get all students
      description: Returns a collection of all students.
      tags: &ref_26
        - Rostering - Students
      responses:
        '200':
          description: Successful response containing a collection of students
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        userMasterIdentifier:
                          type:
                            - string
                            - 'null'
                        username:
                          type:
                            - string
                            - 'null'
                        userIds:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              identifier:
                                type: string
                            required:
                              - type
                              - identifier
                        enabledUser:
                          type: boolean
                        givenName:
                          type: string
                        familyName:
                          type: string
                        middleName:
                          type:
                            - string
                            - 'null'
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              roleType:
                                type: string
                                enum: *ref_16
                              role:
                                type: string
                                enum: *ref_17
                              org:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri
                                  sourcedId:
                                    type: string
                                  type:
                                    type: string
                                required:
                                  - href
                                  - sourcedId
                                  - type
                              userProfile:
                                type: string
                              beginDate:
                                type:
                                  - string
                                  - 'null'
                              endDate:
                                type:
                                  - string
                                  - 'null'
                            required:
                              - roleType
                              - role
                              - org
                              - beginDate
                              - endDate
                          default: *ref_19
                        agents:
                          type: array
                          items:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                              sourcedId:
                                type: string
                              type:
                                type: string
                                enum: *ref_20
                            required:
                              - href
                              - sourcedId
                              - type
                          default: *ref_21
                        primaryOrg:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                          required:
                            - href
                            - sourcedId
                            - type
                        email:
                          type:
                            - string
                            - 'null'
                          format: email
                        preferredFirstName:
                          type:
                            - string
                            - 'null'
                        preferredMiddleName:
                          type:
                            - string
                            - 'null'
                        preferredLastName:
                          type:
                            - string
                            - 'null'
                        pronouns:
                          type:
                            - string
                            - 'null'
                        grades:
                          type: array
                          items:
                            type: string
                        password:
                          type:
                            - string
                            - 'null'
                        sms:
                          type:
                            - string
                            - 'null'
                        phone:
                          type:
                            - string
                            - 'null'
                      required:
                        - sourcedId
                        - status
                        - enabledUser
                        - givenName
                        - familyName
                        - roles
                        - agents
                required:
                  - users
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/students/{sourcedId}:
    get:
      operationId: getStudent
      summary: Get a specific student
      description: Returns a specific student by sourcedId.
      tags: *ref_26
      parameters:
        - name: sourcedId
          description: The sourcedId of the student
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the student
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      userMasterIdentifier:
                        type:
                          - string
                          - 'null'
                      username:
                        type:
                          - string
                          - 'null'
                      userIds:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            identifier:
                              type: string
                          required:
                            - type
                            - identifier
                      enabledUser:
                        type: boolean
                      givenName:
                        type: string
                      familyName:
                        type: string
                      middleName:
                        type:
                          - string
                          - 'null'
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            roleType:
                              type: string
                              enum: *ref_16
                            role:
                              type: string
                              enum: *ref_17
                            org:
                              type: object
                              properties:
                                href:
                                  type: string
                                  format: uri
                                sourcedId:
                                  type: string
                                type:
                                  type: string
                              required:
                                - href
                                - sourcedId
                                - type
                            userProfile:
                              type: string
                            beginDate:
                              type:
                                - string
                                - 'null'
                            endDate:
                              type:
                                - string
                                - 'null'
                          required:
                            - roleType
                            - role
                            - org
                            - beginDate
                            - endDate
                        default: *ref_19
                      agents:
                        type: array
                        items:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                              enum: *ref_20
                          required:
                            - href
                            - sourcedId
                            - type
                        default: *ref_21
                      primaryOrg:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                          sourcedId:
                            type: string
                          type:
                            type: string
                        required:
                          - href
                          - sourcedId
                          - type
                      email:
                        type:
                          - string
                          - 'null'
                        format: email
                      preferredFirstName:
                        type:
                          - string
                          - 'null'
                      preferredMiddleName:
                        type:
                          - string
                          - 'null'
                      preferredLastName:
                        type:
                          - string
                          - 'null'
                      pronouns:
                        type:
                          - string
                          - 'null'
                      grades:
                        type: array
                        items:
                          type: string
                      password:
                        type:
                          - string
                          - 'null'
                      sms:
                        type:
                          - string
                          - 'null'
                      phone:
                        type:
                          - string
                          - 'null'
                    required:
                      - sourcedId
                      - status
                      - enabledUser
                      - givenName
                      - familyName
                      - roles
                      - agents
                required:
                  - user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/:
    get:
      operationId: getAllSchools
      summary: Get all schools
      description: Returns a collection of all schools
      tags: &ref_27
        - Rostering - Schools
      responses:
        '200':
          description: Collection of schools successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  orgs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Org'
                required:
                  - orgs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createSchool
      summary: Create a new school
      description: Creates a new school
      tags: *ref_27
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: &ref_30
                        - active
                        - tobedeleted
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    name:
                      type: string
                    type:
                      type: string
                      const: school
                    identifier:
                      type: string
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - name
                    - type
              required:
                - org
      responses:
        '201':
          description: School successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/classes/{classSourcedId}/students:
    get:
      operationId: getStudentsForClassInSchool
      summary: Get students for a specific class in a school
      description: >-
        Returns a collection of students enrolled in a specific class within a
        school
      tags: &ref_28
        - Rostering - Schools
        - Rostering - Students
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
        - name: classSourcedId
          description: Class sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of students successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        userMasterIdentifier:
                          type:
                            - string
                            - 'null'
                        username:
                          type:
                            - string
                            - 'null'
                        userIds:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              identifier:
                                type: string
                            required:
                              - type
                              - identifier
                        enabledUser:
                          type: boolean
                        givenName:
                          type: string
                        familyName:
                          type: string
                        middleName:
                          type:
                            - string
                            - 'null'
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              roleType:
                                type: string
                                enum: *ref_16
                              role:
                                type: string
                                enum: *ref_17
                              org:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri
                                  sourcedId:
                                    type: string
                                  type:
                                    type: string
                                required:
                                  - href
                                  - sourcedId
                                  - type
                              userProfile:
                                type: string
                              beginDate:
                                type:
                                  - string
                                  - 'null'
                              endDate:
                                type:
                                  - string
                                  - 'null'
                            required:
                              - roleType
                              - role
                              - org
                              - beginDate
                              - endDate
                          default: *ref_19
                        agents:
                          type: array
                          items:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                              sourcedId:
                                type: string
                              type:
                                type: string
                                enum: *ref_20
                            required:
                              - href
                              - sourcedId
                              - type
                          default: *ref_21
                        primaryOrg:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                          required:
                            - href
                            - sourcedId
                            - type
                        email:
                          type:
                            - string
                            - 'null'
                          format: email
                        preferredFirstName:
                          type:
                            - string
                            - 'null'
                        preferredMiddleName:
                          type:
                            - string
                            - 'null'
                        preferredLastName:
                          type:
                            - string
                            - 'null'
                        pronouns:
                          type:
                            - string
                            - 'null'
                        grades:
                          type: array
                          items:
                            type: string
                        password:
                          type:
                            - string
                            - 'null'
                        sms:
                          type:
                            - string
                            - 'null'
                        phone:
                          type:
                            - string
                            - 'null'
                      required:
                        - sourcedId
                        - status
                        - enabledUser
                        - givenName
                        - familyName
                        - roles
                        - agents
                required:
                  - users
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School or   class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/classes/{classSourcedId}/teachers:
    get:
      operationId: getTeachersForClassInSchool
      summary: Get teachers for a specific class in a school
      description: >-
        Returns a collection of teachers assigned to a specific class within a
        school
      tags: &ref_29
        - Rostering - Schools
        - Rostering - Teachers
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
        - name: classSourcedId
          description: Class sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of teachers successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        userMasterIdentifier:
                          type:
                            - string
                            - 'null'
                        username:
                          type:
                            - string
                            - 'null'
                        userIds:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              identifier:
                                type: string
                            required:
                              - type
                              - identifier
                        enabledUser:
                          type: boolean
                        givenName:
                          type: string
                        familyName:
                          type: string
                        middleName:
                          type:
                            - string
                            - 'null'
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              roleType:
                                type: string
                                enum: *ref_16
                              role:
                                type: string
                                enum: *ref_17
                              org:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri
                                  sourcedId:
                                    type: string
                                  type:
                                    type: string
                                required:
                                  - href
                                  - sourcedId
                                  - type
                              userProfile:
                                type: string
                              beginDate:
                                type:
                                  - string
                                  - 'null'
                              endDate:
                                type:
                                  - string
                                  - 'null'
                            required:
                              - roleType
                              - role
                              - org
                              - beginDate
                              - endDate
                          default: *ref_19
                        agents:
                          type: array
                          items:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                              sourcedId:
                                type: string
                              type:
                                type: string
                                enum: *ref_20
                            required:
                              - href
                              - sourcedId
                              - type
                          default: *ref_21
                        primaryOrg:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                          required:
                            - href
                            - sourcedId
                            - type
                        email:
                          type:
                            - string
                            - 'null'
                          format: email
                        preferredFirstName:
                          type:
                            - string
                            - 'null'
                        preferredMiddleName:
                          type:
                            - string
                            - 'null'
                        preferredLastName:
                          type:
                            - string
                            - 'null'
                        pronouns:
                          type:
                            - string
                            - 'null'
                        grades:
                          type: array
                          items:
                            type: string
                        password:
                          type:
                            - string
                            - 'null'
                        sms:
                          type:
                            - string
                            - 'null'
                        phone:
                          type:
                            - string
                            - 'null'
                      required:
                        - sourcedId
                        - status
                        - enabledUser
                        - givenName
                        - familyName
                        - roles
                        - agents
                required:
                  - users
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School or class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/students:
    get:
      operationId: getStudentsForSchool
      summary: Get all students for a school
      description: Returns a collection of students enrolled in a specific school
      tags: *ref_28
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of students successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        userMasterIdentifier:
                          type:
                            - string
                            - 'null'
                        username:
                          type:
                            - string
                            - 'null'
                        userIds:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              identifier:
                                type: string
                            required:
                              - type
                              - identifier
                        enabledUser:
                          type: boolean
                        givenName:
                          type: string
                        familyName:
                          type: string
                        middleName:
                          type:
                            - string
                            - 'null'
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              roleType:
                                type: string
                                enum: *ref_16
                              role:
                                type: string
                                enum: *ref_17
                              org:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri
                                  sourcedId:
                                    type: string
                                  type:
                                    type: string
                                required:
                                  - href
                                  - sourcedId
                                  - type
                              userProfile:
                                type: string
                              beginDate:
                                type:
                                  - string
                                  - 'null'
                              endDate:
                                type:
                                  - string
                                  - 'null'
                            required:
                              - roleType
                              - role
                              - org
                              - beginDate
                              - endDate
                          default: *ref_19
                        agents:
                          type: array
                          items:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                              sourcedId:
                                type: string
                              type:
                                type: string
                                enum: *ref_20
                            required:
                              - href
                              - sourcedId
                              - type
                          default: *ref_21
                        primaryOrg:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                          required:
                            - href
                            - sourcedId
                            - type
                        email:
                          type:
                            - string
                            - 'null'
                          format: email
                        preferredFirstName:
                          type:
                            - string
                            - 'null'
                        preferredMiddleName:
                          type:
                            - string
                            - 'null'
                        preferredLastName:
                          type:
                            - string
                            - 'null'
                        pronouns:
                          type:
                            - string
                            - 'null'
                        grades:
                          type: array
                          items:
                            type: string
                        password:
                          type:
                            - string
                            - 'null'
                        sms:
                          type:
                            - string
                            - 'null'
                        phone:
                          type:
                            - string
                            - 'null'
                      required:
                        - sourcedId
                        - status
                        - enabledUser
                        - givenName
                        - familyName
                        - roles
                        - agents
                required:
                  - users
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/teachers:
    get:
      operationId: getTeachersForSchool
      summary: Get all teachers for a school
      description: Returns a collection of teachers assigned to a specific school
      tags: *ref_29
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of teachers successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        userMasterIdentifier:
                          type:
                            - string
                            - 'null'
                        username:
                          type:
                            - string
                            - 'null'
                        userIds:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              identifier:
                                type: string
                            required:
                              - type
                              - identifier
                        enabledUser:
                          type: boolean
                        givenName:
                          type: string
                        familyName:
                          type: string
                        middleName:
                          type:
                            - string
                            - 'null'
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              roleType:
                                type: string
                                enum: *ref_16
                              role:
                                type: string
                                enum: *ref_17
                              org:
                                type: object
                                properties:
                                  href:
                                    type: string
                                    format: uri
                                  sourcedId:
                                    type: string
                                  type:
                                    type: string
                                required:
                                  - href
                                  - sourcedId
                                  - type
                              userProfile:
                                type: string
                              beginDate:
                                type:
                                  - string
                                  - 'null'
                              endDate:
                                type:
                                  - string
                                  - 'null'
                            required:
                              - roleType
                              - role
                              - org
                              - beginDate
                              - endDate
                          default: *ref_19
                        agents:
                          type: array
                          items:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                              sourcedId:
                                type: string
                              type:
                                type: string
                                enum: *ref_20
                            required:
                              - href
                              - sourcedId
                              - type
                          default: *ref_21
                        primaryOrg:
                          type: object
                          properties:
                            href:
                              type: string
                              format: uri
                            sourcedId:
                              type: string
                            type:
                              type: string
                          required:
                            - href
                            - sourcedId
                            - type
                        email:
                          type:
                            - string
                            - 'null'
                          format: email
                        preferredFirstName:
                          type:
                            - string
                            - 'null'
                        preferredMiddleName:
                          type:
                            - string
                            - 'null'
                        preferredLastName:
                          type:
                            - string
                            - 'null'
                        pronouns:
                          type:
                            - string
                            - 'null'
                        grades:
                          type: array
                          items:
                            type: string
                        password:
                          type:
                            - string
                            - 'null'
                        sms:
                          type:
                            - string
                            - 'null'
                        phone:
                          type:
                            - string
                            - 'null'
                      required:
                        - sourcedId
                        - status
                        - enabledUser
                        - givenName
                        - familyName
                        - roles
                        - agents
                required:
                  - users
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/terms:
    get:
      operationId: getTermsForSchool
      summary: Get all terms for a school
      description: Returns a collection of terms for a specific school
      tags:
        - Rostering - Schools
        - Rostering - Terms
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of terms successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  terms:
                    type: array
                    items:
                      $ref: '#/components/schemas/AcademicSession'
                required:
                  - terms
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{sourcedId}:
    get:
      operationId: getSchool
      summary: Get a single school
      description: Returns a single school by sourcedId
      tags: *ref_27
      parameters:
        - name: sourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: School successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  org:
                    $ref: '#/components/schemas/Org'
                required:
                  - org
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateSchool
      summary: Update a school
      description: Updates an existing school
      tags: *ref_27
      parameters:
        - name: sourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_30
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    name:
                      type: string
                    type:
                      type: string
                      const: school
                    identifier:
                      type: string
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - name
                    - type
              required:
                - org
      responses:
        '200':
          description: School successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteSchool
      summary: Delete a school
      description: Deletes an existing school
      tags: *ref_27
      parameters:
        - name: sourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: School successfully deleted
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/orgs/:
    get:
      operationId: getAllOrgs
      summary: Get all organizations
      description: Returns a collection of all organizations
      tags: &ref_31
        - Rostering - Organizations
      parameters:
        - in: query
          name: fields
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
            description: Comma-separated list of fields to include in the response
            example: sourcedId,name
        - in: query
          name: limit
          description: The maximum number of items to return in the paginated response
          schema:
            type: integer
            minimum: 1
            default: 100
            description: The maximum number of items to return in the paginated response
            example: 100
        - in: query
          name: offset
          description: The number of items to skip in the paginated response
          schema:
            type: integer
            minimum: 0
            default: 0
            description: The number of items to skip in the paginated response
            example: 0
        - in: query
          name: sort
          description: The field to sort the response by
          schema:
            type: string
            description: The field to sort the response by
        - in: query
          name: orderBy
          description: The order to sort the response by
          schema:
            type: string
            enum: *ref_6
            description: The order to sort the response by
        - in: query
          name: filter
          description: The filter to apply to the response
          schema:
            type: string
            description: The filter to apply to the response
            example: status='active'
        - in: query
          name: search
          description: The search query to apply to the response
          schema:
            type: string
            description: The search query to apply to the response
      x-speakeasy-pagination:
        type: offsetLimit
        inputs:
          - name: offset
            in: parameters
            type: offset
          - name: limit
            in: parameters
            type: limit
        outputs:
          results: $.orgs
      responses:
        '200':
          description: Collection of organizations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orgs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Org'
                required:
                  - orgs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createOrg
      summary: Create an organization
      description: Creates a new organization
      tags: *ref_31
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_30
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    name:
                      type: string
                    type:
                      type: string
                      enum: &ref_32
                        - department
                        - school
                        - district
                        - local
                        - state
                        - national
                    identifier:
                      type: string
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - name
                    - type
              required:
                - org
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Invalid organization data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/orgs/{sourcedId}:
    get:
      operationId: getOrg
      summary: Get a specific organization
      description: Returns a specific organization by sourcedId
      tags: *ref_31
      parameters:
        - name: sourcedId
          description: The sourcedId of the organization to retrieve
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  org:
                    $ref: '#/components/schemas/Org'
                required:
                  - org
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateOrg
      summary: Update an organization
      description: Updates a specific organization by sourcedId
      tags: *ref_31
      parameters:
        - name: sourcedId
          description: The sourcedId of the organization to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                org:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_30
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    name:
                      type: string
                    type:
                      type: string
                      enum: *ref_32
                    identifier:
                      type: string
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - name
                    - type
              required:
                - org
      responses:
        '201':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Invalid organization data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteOrg
      summary: Delete an organization
      description: Deletes a specific organization by sourcedId
      tags: *ref_31
      parameters:
        - name: sourcedId
          description: The sourcedId of the organization to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Organization deleted successfully
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/gradingPeriods/:
    get:
      operationId: getAllGradingPeriods
      summary: Get all grading periods
      description: Returns a collection of all grading periods
      tags: &ref_33
        - Rostering - Grading Periods
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  gradingPeriods:
                    type: array
                    items:
                      $ref: '#/components/schemas/AcademicSession'
                required:
                  - gradingPeriods
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createGradingPeriod
      summary: Create a new grading period
      description: Creates a new grading period
      tags: *ref_33
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: &ref_34
                        - active
                        - tobedeleted
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    title:
                      type: string
                    startDate:
                      type: string
                    endDate:
                      type: string
                    type:
                      type: string
                      const: gradingPeriod
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    schoolYear:
                      type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - title
                    - startDate
                    - endDate
                    - type
                    - schoolYear
                    - org
              required:
                - academicSession
      responses:
        '201':
          description: Grading period created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/gradingPeriods/{sourcedId}:
    get:
      operationId: getGradingPeriod
      summary: Get a specific grading period
      description: Returns a specific grading period by sourcedId
      tags: *ref_33
      parameters:
        - name: sourcedId
          description: The sourcedId of the grading period to retrieve
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  gradingPeriod:
                    $ref: '#/components/schemas/AcademicSession'
                required:
                  - gradingPeriod
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Grading period not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateGradingPeriod
      summary: Update a grading period
      description: Updates an existing grading period by sourcedId
      tags: *ref_33
      parameters:
        - name: sourcedId
          description: The sourcedId of the grading period to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_34
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    title:
                      type: string
                    startDate:
                      type: string
                    endDate:
                      type: string
                    type:
                      type: string
                      const: gradingPeriod
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    schoolYear:
                      type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - title
                    - startDate
                    - endDate
                    - type
                    - schoolYear
                    - org
              required:
                - academicSession
      responses:
        '201':
          description: Grading period updated successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Grading period not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteGradingPeriod
      summary: Delete a grading period
      description: Deletes a grading period by sourcedId
      tags: *ref_33
      parameters:
        - name: sourcedId
          description: The sourcedId of the grading period to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Grading period deleted successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Grading period not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/terms/{termSourcedId}/gradingPeriods:
    get:
      operationId: getGradingPeriodsForTerm
      summary: Get grading periods for a term
      description: Returns a collection of grading periods associated with the term.
      tags: &ref_35
        - Rostering - Terms
        - Rostering - Grading Periods
      parameters:
        - name: termSourcedId
          description: The sourcedId of the term
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of grading periods for
            the term
          content:
            application/json:
              schema:
                type: object
                properties:
                  gradingPeriods:
                    type: array
                    items:
                      $ref: '#/components/schemas/AcademicSession'
                required:
                  - gradingPeriods
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Term not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createGradingPeriodForTerm
      summary: Create a new grading period for a term
      description: Creates a new grading period associated with the specified term.
      tags: *ref_35
      parameters:
        - name: termSourcedId
          description: The sourcedId of the term
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_34
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    title:
                      type: string
                    startDate:
                      type: string
                    endDate:
                      type: string
                    type:
                      type: string
                      const: gradingPeriod
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    schoolYear:
                      type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - title
                    - startDate
                    - endDate
                    - type
                    - schoolYear
                    - org
              required:
                - academicSession
      responses:
        '201':
          description: Grading period successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  academicSession:
                    $ref: '#/components/schemas/AcademicSession'
                required:
                  - academicSession
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Term not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/enrollments/:
    get:
      operationId: getAllEnrollments
      summary: Get all enrollments
      description: Returns a collection of all enrollment records
      tags: &ref_36
        - Rostering - Enrollments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  enrollments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Enrollment'
                required:
                  - enrollments
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createEnrollment
      summary: Create a new enrollment
      description: Creates a new enrollment with the provided data
      tags: *ref_36
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollment:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum:
                        - active
                        - tobedeleted
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    role:
                      type: string
                      enum: &ref_37
                        - administrator
                        - proctor
                        - student
                        - teacher
                    primary:
                      type: boolean
                      default: false
                    beginDate:
                      type: string
                      example: '2024-01-01'
                    endDate:
                      type: string
                      example: '2024-01-01'
                    user:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    class:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - role
                    - user
                    - class
              required:
                - enrollment
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/enrollments/{sourcedId}:
    get:
      operationId: getEnrollment
      summary: Get a specific enrollment
      description: Returns the enrollment record matching the sourcedId
      tags: *ref_36
      parameters:
        - name: sourcedId
          description: The unique identifier for the enrollment
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  enrollment:
                    $ref: '#/components/schemas/Enrollment'
                required:
                  - enrollment
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Enrollment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateEnrollment
      summary: Update an enrollment
      description: Updates an existing enrollment with the provided data
      tags: *ref_36
      parameters:
        - name: sourcedId
          description: The unique identifier for the enrollment to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollment:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum:
                        - active
                        - tobedeleted
                    metadata:
                      type: object
                      additionalProperties: {}
                    role:
                      type: string
                      enum: *ref_37
                    primary:
                      type: boolean
                      default: false
                    beginDate:
                      type: string
                      example: '2024-01-01'
                    endDate:
                      type: string
                      example: '2024-01-01'
                    user:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    class:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - sourcedId
                    - status
                    - role
                    - user
                    - class
              required:
                - enrollment
      responses:
        '201':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Enrollment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteEnrollment
      summary: Delete an enrollment
      description: Deletes the enrollment with the specified sourcedId
      tags: *ref_36
      parameters:
        - name: sourcedId
          description: The unique identifier for the enrollment to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Enrollment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/classes/{classSourcedId}/enrollments:
    get:
      operationId: getEnrollmentsForClassInSchool
      summary: Get enrollments for a specific class in a school
      description: Returns a collection of enrollments for a specific class within a school
      tags: &ref_38
        - Rostering - Schools
        - Rostering - Enrollments
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
        - name: classSourcedId
          description: Class sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of enrollments successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  enrollments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Enrollment'
                required:
                  - enrollments
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School or class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/enrollments:
    get:
      operationId: getEnrollmentsForSchool
      summary: Get all enrollments for a school
      description: Returns a collection of enrollments for a specific school
      tags: *ref_38
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of enrollments successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  enrollments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Enrollment'
                required:
                  - enrollments
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/demographics/:
    get:
      operationId: getAllDemographics
      summary: Get all demographics records
      description: Returns a collection of all demographics records
      tags: &ref_39
        - Rostering - Demographics
      responses:
        '200':
          description: Demographics collection retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  demographics:
                    type: array
                    items:
                      $ref: '#/components/schemas/Demographics'
                required:
                  - demographics
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: postDemographics
      summary: Create a new demographics record
      description: Creates a new demographics record with the provided information
      tags: *ref_39
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                demographics:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: &ref_40
                        - active
                        - tobedeleted
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    birthDate:
                      type:
                        - string
                        - 'null'
                      pattern: ^\d{4}-\d{2}-\d{2}$
                    sex:
                      type:
                        - string
                        - 'null'
                      enum:
                        - male
                        - female
                        - null
                    americanIndianOrAlaskaNative:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    asian:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    blackOrAfricanAmerican:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    nativeHawaiianOrOtherPacificIslander:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    white:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    demographicRaceTwoOrMoreRaces:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    hispanicOrLatinoEthnicity:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    countryOfBirthCode:
                      type:
                        - string
                        - 'null'
                    stateOfBirthAbbreviation:
                      type:
                        - string
                        - 'null'
                    cityOfBirth:
                      type:
                        - string
                        - 'null'
                    publicSchoolResidenceStatus:
                      type:
                        - string
                        - 'null'
                  required:
                    - sourcedId
              required:
                - demographics
      responses:
        '201':
          description: Demographics record created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/demographics/{sourcedId}:
    get:
      operationId: getDemographics
      summary: Get a specific demographics record
      description: Returns a single demographics record by sourcedId
      tags: *ref_39
      parameters:
        - name: sourcedId
          description: The unique identifier for the demographics record
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Demographics record retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  demographics:
                    $ref: '#/components/schemas/Demographics'
                required:
                  - demographics
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Demographics record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: putDemographics
      summary: Update a demographics record
      description: Updates an existing demographics record with the provided information
      tags: *ref_39
      parameters:
        - name: sourcedId
          description: The unique identifier for the demographics record to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                demographics:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_40
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    birthDate:
                      type:
                        - string
                        - 'null'
                      pattern: ^\d{4}-\d{2}-\d{2}$
                    sex:
                      type:
                        - string
                        - 'null'
                      enum:
                        - male
                        - female
                        - null
                    americanIndianOrAlaskaNative:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    asian:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    blackOrAfricanAmerican:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    nativeHawaiianOrOtherPacificIslander:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    white:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    demographicRaceTwoOrMoreRaces:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    hispanicOrLatinoEthnicity:
                      type:
                        - string
                        - 'null'
                      enum:
                        - 'true'
                        - 'false'
                        - null
                    countryOfBirthCode:
                      type:
                        - string
                        - 'null'
                    stateOfBirthAbbreviation:
                      type:
                        - string
                        - 'null'
                    cityOfBirth:
                      type:
                        - string
                        - 'null'
                    publicSchoolResidenceStatus:
                      type:
                        - string
                        - 'null'
                  required:
                    - sourcedId
              required:
                - demographics
      responses:
        '200':
          description: Demographics record updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Demographics'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Demographics record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteDemographics
      summary: Delete a demographics record
      description: Deletes a specific demographics record by sourcedId
      tags: *ref_39
      parameters:
        - name: sourcedId
          description: The unique identifier for the demographics record to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Demographics record deleted successfully
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Demographics record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/courses/:
    get:
      operationId: getAllCourses
      summary: Get All Courses
      description: Returns a collection of all courses
      tags: &ref_41
        - Rostering - Courses
      parameters:
        - in: query
          name: fields
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
            description: Comma-separated list of fields to include in the response
            example: sourcedId,name
        - in: query
          name: limit
          description: The maximum number of items to return in the paginated response
          schema:
            type: integer
            minimum: 1
            default: 100
            description: The maximum number of items to return in the paginated response
            example: 100
        - in: query
          name: offset
          description: The number of items to skip in the paginated response
          schema:
            type: integer
            minimum: 0
            default: 0
            description: The number of items to skip in the paginated response
            example: 0
        - in: query
          name: sort
          description: The field to sort the response by
          schema:
            type: string
            description: The field to sort the response by
        - in: query
          name: orderBy
          description: The order to sort the response by
          schema:
            type: string
            enum: *ref_6
            description: The order to sort the response by
        - in: query
          name: filter
          description: The filter to apply to the response
          schema:
            type: string
            description: The filter to apply to the response
            example: status='active'
        - in: query
          name: search
          description: The search query to apply to the response
          schema:
            type: string
            description: The search query to apply to the response
      x-speakeasy-pagination:
        type: offsetLimit
        inputs:
          - name: offset
            in: parameters
            type: offset
          - name: limit
            in: parameters
            type: limit
        outputs:
          results: $.courses
      responses:
        '200':
          description: Collection of Courses
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        title:
                          type: string
                        academicSession:
                          type:
                            - object
                            - 'null'
                          properties:
                            sourcedId:
                              type: string
                          required:
                            - sourcedId
                        courseCode:
                          type:
                            - string
                            - 'null'
                        grades:
                          type:
                            - array
                            - 'null'
                          items:
                            type: string
                        subjects:
                          type:
                            - array
                            - 'null'
                          items:
                            type: string
                        subjectCodes:
                          type:
                            - array
                            - 'null'
                          items:
                            type: string
                        org:
                          type: object
                          properties:
                            sourcedId:
                              type: string
                          required:
                            - sourcedId
                        level:
                          type:
                            - string
                            - 'null'
                        gradingScheme:
                          type:
                            - string
                            - 'null'
                      required:
                        - status
                        - title
                        - org
                      description: Represents a course.
                required:
                  - courses
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createCourse
      summary: Create Course
      description: Used when creating a new course
      tags: *ref_41
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_18
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    title:
                      type: string
                    academicSession:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    courseCode:
                      type:
                        - string
                        - 'null'
                    grades:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    subjects:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    subjectCodes:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    level:
                      type:
                        - string
                        - 'null'
                    gradingScheme:
                      type:
                        - string
                        - 'null'
                  required:
                    - status
                    - title
                    - org
                  description: Represents a course.
              required:
                - course
      responses:
        '200':
          description: Created Course Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/courses/{courseSourcedId}/classes:
    get:
      operationId: getClassesForCourse
      summary: Get Classes For Course
      description: Returns all classes associated with a specific course
      tags: *ref_41
      parameters:
        - name: courseSourcedId
          description: The sourcedId of the course
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of Classes for Course
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/courses/{sourcedId}:
    get:
      operationId: getCourse
      summary: Get Course
      description: Returns a specific course by sourcedId
      tags: *ref_41
      parameters:
        - name: sourcedId
          description: The sourcedId of the course
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Single Course
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      title:
                        type: string
                      academicSession:
                        type:
                          - object
                          - 'null'
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      courseCode:
                        type:
                          - string
                          - 'null'
                      grades:
                        type:
                          - array
                          - 'null'
                        items:
                          type: string
                      subjects:
                        type:
                          - array
                          - 'null'
                        items:
                          type: string
                      subjectCodes:
                        type:
                          - array
                          - 'null'
                        items:
                          type: string
                      org:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      level:
                        type:
                          - string
                          - 'null'
                      gradingScheme:
                        type:
                          - string
                          - 'null'
                    required:
                      - status
                      - title
                      - org
                    description: Represents a course.
                required:
                  - course
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: putCourse
      summary: Update Course
      description: Updates an existing course
      tags: *ref_41
      parameters:
        - name: sourcedId
          description: The sourcedId of the course to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_18
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    title:
                      type: string
                    academicSession:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    courseCode:
                      type:
                        - string
                        - 'null'
                    grades:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    subjects:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    subjectCodes:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    level:
                      type:
                        - string
                        - 'null'
                    gradingScheme:
                      type:
                        - string
                        - 'null'
                  required:
                    - status
                    - title
                    - org
                  description: Represents a course.
              required:
                - course
      responses:
        '200':
          description: Course Updated Successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteCourse
      summary: Delete Course
      description: Deletes a specific course by sourcedId
      tags: *ref_41
      parameters:
        - name: sourcedId
          description: The sourcedId of the course to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course Deleted Successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/courses/component-resources:
    post:
      operationId: createComponentResource
      summary: Create Component Resource
      description: Used when creating a new component resource
      tags: &ref_42
        - Rostering - Courses
        - Rostering - Course Component Resources
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                componentResource:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_18
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    courseComponent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    resource:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    title:
                      type: string
                    sortOrder:
                      type: number
                      default: 0
                  required:
                    - sourcedId
                    - status
                    - courseComponent
                    - resource
                    - title
                  description: Represents a resource associated with a course component.
              required:
                - componentResource
      responses:
        '200':
          description: Created Component Resource Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    get:
      operationId: getAllComponentResources
      summary: Get All Component Resources
      description: Returns a collection of all component resources
      tags: *ref_42
      parameters:
        - in: query
          name: fields
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
            description: Comma-separated list of fields to include in the response
            example: sourcedId,name
        - in: query
          name: limit
          description: The maximum number of items to return in the paginated response
          schema:
            type: integer
            minimum: 1
            default: 100
            description: The maximum number of items to return in the paginated response
            example: 100
        - in: query
          name: offset
          description: The number of items to skip in the paginated response
          schema:
            type: integer
            minimum: 0
            default: 0
            description: The number of items to skip in the paginated response
            example: 0
        - in: query
          name: sort
          description: The field to sort the response by
          schema:
            type: string
            description: The field to sort the response by
        - in: query
          name: orderBy
          description: The order to sort the response by
          schema:
            type: string
            enum: *ref_6
            description: The order to sort the response by
        - in: query
          name: filter
          description: The filter to apply to the response
          schema:
            type: string
            description: The filter to apply to the response
            example: status='active'
        - in: query
          name: search
          description: The search query to apply to the response
          schema:
            type: string
            description: The search query to apply to the response
      x-speakeasy-pagination:
        type: offsetLimit
        inputs:
          - name: offset
            in: parameters
            type: offset
          - name: limit
            in: parameters
            type: limit
        outputs:
          results: $.componentResources
      responses:
        '200':
          description: Collection of Component Resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  componentResources:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        courseComponent:
                          type: object
                          properties:
                            sourcedId:
                              type: string
                          required:
                            - sourcedId
                        resource:
                          type: object
                          properties:
                            sourcedId:
                              type: string
                          required:
                            - sourcedId
                        title:
                          type: string
                        sortOrder:
                          type: number
                          default: 0
                      required:
                        - sourcedId
                        - status
                        - courseComponent
                        - resource
                        - title
                        - sortOrder
                      description: >-
                        Represents a resource associated with a course
                        component.
                required:
                  - componentResources
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/courses/component-resources/{sourcedId}:
    get:
      operationId: getComponentResource
      summary: Get Component Resource
      description: Returns a specific component resource by sourcedId
      tags: *ref_42
      parameters:
        - name: sourcedId
          description: The sourcedId of the component resource
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Single Component Resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  componentResource:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      courseComponent:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      resource:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      title:
                        type: string
                      sortOrder:
                        type: number
                        default: 0
                    required:
                      - sourcedId
                      - status
                      - courseComponent
                      - resource
                      - title
                      - sortOrder
                    description: Represents a resource associated with a course component.
                required:
                  - componentResource
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Component Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: putComponentResource
      summary: Update Component Resource
      description: Updates an existing component resource
      tags: *ref_42
      parameters:
        - name: sourcedId
          description: The sourcedId of the component resource to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                componentResource:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_18
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    courseComponent:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    resource:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    title:
                      type: string
                    sortOrder:
                      type: number
                      default: 0
                  required:
                    - sourcedId
                    - status
                    - courseComponent
                    - resource
                    - title
                  description: Represents a resource associated with a course component.
              required:
                - componentResource
      responses:
        '200':
          description: Component Resource Updated Successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Component Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteComponentResource
      summary: Delete Component Resource
      description: Deletes a specific component resource by sourcedId
      tags: *ref_42
      parameters:
        - name: sourcedId
          description: The sourcedId of the component resource to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Component Resource Deleted Successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Component Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/courses/components:
    post:
      operationId: createCourseComponent
      summary: Create Course Component
      description: Used when creating a new course component or module
      tags: &ref_43
        - Rostering - Courses
        - Rostering - Course Components
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                courseComponent:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_18
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    course:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    courseComponent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    title:
                      type: string
                    sortOrder:
                      type: number
                      example: 1
                    prerequisites:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    prerequisiteCriteria:
                      type:
                        - string
                        - 'null'
                    unlockDate:
                      type: string
                      description: The date the component is unlocked for the student
                      example: '2021-01-01T00:00:00.000Z'
                  required:
                    - status
                    - course
                    - title
                  description: Represents a component of a course.
              required:
                - courseComponent
      responses:
        '200':
          description: Created Course Component Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    get:
      operationId: getAllCourseComponents
      summary: Get All Course Components
      description: Returns a collection of all course components
      tags: *ref_43
      parameters:
        - in: query
          name: fields
          description: Comma-separated list of fields to include in the response
          schema:
            type: string
            description: Comma-separated list of fields to include in the response
            example: sourcedId,name
        - in: query
          name: limit
          description: The maximum number of items to return in the paginated response
          schema:
            type: integer
            minimum: 1
            default: 100
            description: The maximum number of items to return in the paginated response
            example: 100
        - in: query
          name: offset
          description: The number of items to skip in the paginated response
          schema:
            type: integer
            minimum: 0
            default: 0
            description: The number of items to skip in the paginated response
            example: 0
        - in: query
          name: sort
          description: The field to sort the response by
          schema:
            type: string
            description: The field to sort the response by
        - in: query
          name: orderBy
          description: The order to sort the response by
          schema:
            type: string
            enum: *ref_6
            description: The order to sort the response by
        - in: query
          name: filter
          description: The filter to apply to the response
          schema:
            type: string
            description: The filter to apply to the response
            example: status='active'
        - in: query
          name: search
          description: The search query to apply to the response
          schema:
            type: string
            description: The search query to apply to the response
      x-speakeasy-pagination:
        type: offsetLimit
        inputs:
          - name: offset
            in: parameters
            type: offset
          - name: limit
            in: parameters
            type: limit
        outputs:
          results: $.courseComponents
      responses:
        '200':
          description: Collection of Course Components
          content:
            application/json:
              schema:
                type: object
                properties:
                  courseComponents:
                    type: array
                    items:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                        status:
                          type: string
                          enum: *ref_18
                        dateLastModified:
                          type: string
                          format: date-time
                        metadata:
                          type:
                            - object
                            - 'null'
                          additionalProperties: {}
                        course:
                          type: object
                          properties:
                            sourcedId:
                              type: string
                          required:
                            - sourcedId
                        courseComponent:
                          type:
                            - object
                            - 'null'
                          properties:
                            sourcedId:
                              type: string
                          required:
                            - sourcedId
                        parent:
                          type:
                            - object
                            - 'null'
                          properties:
                            sourcedId:
                              type: string
                          required:
                            - sourcedId
                        title:
                          type: string
                        sortOrder:
                          type: number
                          example: 1
                        prerequisites:
                          type:
                            - array
                            - 'null'
                          items:
                            type: string
                        prerequisiteCriteria:
                          type:
                            - string
                            - 'null'
                        unlockDate:
                          type: string
                          description: The date the component is unlocked for the student
                          example: '2021-01-01T00:00:00.000Z'
                      required:
                        - status
                        - course
                        - title
                        - sortOrder
                        - unlockDate
                      description: Represents a component of a course.
                required:
                  - courseComponents
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/courses/components/{sourcedId}:
    get:
      operationId: getCourseComponent
      summary: Get Course Component
      description: Returns a specific course component by sourcedId
      tags: *ref_43
      parameters:
        - name: sourcedId
          description: The sourcedId of the course component
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Single Course Component
          content:
            application/json:
              schema:
                type: object
                properties:
                  courseComponent:
                    type: object
                    properties:
                      sourcedId:
                        type: string
                      status:
                        type: string
                        enum: *ref_18
                      dateLastModified:
                        type: string
                        format: date-time
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                      course:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      courseComponent:
                        type:
                          - object
                          - 'null'
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      parent:
                        type:
                          - object
                          - 'null'
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                      title:
                        type: string
                      sortOrder:
                        type: number
                        example: 1
                      prerequisites:
                        type:
                          - array
                          - 'null'
                        items:
                          type: string
                      prerequisiteCriteria:
                        type:
                          - string
                          - 'null'
                      unlockDate:
                        type: string
                        description: The date the component is unlocked for the student
                        example: '2021-01-01T00:00:00.000Z'
                    required:
                      - status
                      - course
                      - title
                      - sortOrder
                      - unlockDate
                    description: Represents a component of a course.
                required:
                  - courseComponent
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course Component Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: putCourseComponent
      summary: Update Course Component
      description: Updates an existing course component
      tags: *ref_43
      parameters:
        - name: sourcedId
          description: The sourcedId of the course component to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                courseComponent:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_18
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    course:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    courseComponent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    title:
                      type: string
                    sortOrder:
                      type: number
                      example: 1
                    prerequisites:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    prerequisiteCriteria:
                      type:
                        - string
                        - 'null'
                    unlockDate:
                      type: string
                      description: The date the component is unlocked for the student
                      example: '2021-01-01T00:00:00.000Z'
                  required:
                    - status
                    - course
                    - title
                  description: Represents a component of a course.
              required:
                - courseComponent
      responses:
        '200':
          description: Course Component Updated Successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course Component Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteCourseComponent
      summary: Delete Course Component
      description: Deletes a specific course component by sourcedId
      tags: *ref_43
      parameters:
        - name: sourcedId
          description: The sourcedId of the course component to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course Component Deleted Successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Course Component Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/courses:
    get:
      operationId: getCoursesForSchool
      summary: Get all courses for a school
      description: Returns a collection of courses for a specific school
      tags:
        - Rostering - Schools
        - Rostering - Courses
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of courses successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_18
                    dateLastModified:
                      type: string
                      format: date-time
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    title:
                      type: string
                    academicSession:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    courseCode:
                      type:
                        - string
                        - 'null'
                    grades:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    subjects:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    subjectCodes:
                      type:
                        - array
                        - 'null'
                      items:
                        type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    level:
                      type:
                        - string
                        - 'null'
                    gradingScheme:
                      type:
                        - string
                        - 'null'
                  required:
                    - status
                    - title
                    - org
                  description: Represents a course.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/classes/:
    get:
      operationId: getAllClasses
      summary: Get all classes
      description: Returns a collection of classes
      tags: &ref_44
        - Rostering - Classes
      responses:
        '200':
          description: Successful response with a list of classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: createClass
      summary: Create a new class
      description: Creates a new class with the provided data
      tags: *ref_44
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                class:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum:
                        - active
                        - tobedeleted
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    title:
                      type: string
                    classCode:
                      type: string
                    classType:
                      type: string
                      enum: &ref_47
                        - homeroom
                        - scheduled
                    location:
                      type: string
                    grades:
                      type: array
                      items:
                        type: string
                    subjects:
                      type: array
                      items:
                        type: string
                    course:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    subjectCodes:
                      type: array
                      items:
                        type: string
                    periods:
                      type: array
                      items:
                        type: string
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                    terms:
                      type: array
                      items:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                  required:
                    - title
                    - course
                    - org
                    - terms
              required:
                - class
      responses:
        '201':
          description: Class successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/classes/{classSourcedId}/students:
    get:
      operationId: getStudentsForClass
      summary: Get students for a class
      description: Returns a collection of students enrolled in a specific class
      tags: &ref_45
        - Rostering - Classes
        - Rostering - Students
      parameters:
        - name: classSourcedId
          description: Class sourcedId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: addStudentToClass
      summary: Add a student to a class
      description: Enrolls a student in a specific class
      tags: *ref_45
      parameters:
        - name: classSourcedId
          description: Class sourcedId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollment:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    primary:
                      type: boolean
                      default: false
                    beginDate:
                      type: string
                      example: '2024-01-01'
                    endDate:
                      type: string
                      example: '2024-01-01'
                  required:
                    - user
              required:
                - enrollment
      responses:
        '201':
          description: Student successfully enrolled in class
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class or student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/classes/{classSourcedId}/teachers:
    get:
      operationId: getTeachersForClass
      summary: Get teachers for a class
      description: Returns a collection of teachers assigned to a specific class
      tags: &ref_46
        - Rostering - Classes
        - Rostering - Teachers
      parameters:
        - name: classSourcedId
          description: Class sourcedId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the list of teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: addTeacherToClass
      summary: Add a teacher to a class
      description: Assigns a teacher to a specific class
      tags: *ref_46
      parameters:
        - name: classSourcedId
          description: Class sourcedId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enrollment:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    primary:
                      type: boolean
                      default: false
                    beginDate:
                      type: string
                      example: '2024-01-01'
                    endDate:
                      type: string
                      example: '2024-01-01'
                  required:
                    - user
              required:
                - enrollment
      responses:
        '201':
          description: Teacher successfully assigned to class
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class or teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/classes/{sourcedId}:
    get:
      operationId: getClass
      summary: Get a specific class
      description: Returns a specific class by sourcedId
      tags: *ref_44
      parameters:
        - name: sourcedId
          description: Class sourcedId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with the requested class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: updateClass
      summary: Update a class
      description: Updates an existing class with the provided data
      tags: *ref_44
      parameters:
        - name: sourcedId
          description: Class sourcedId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                class:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - active
                        - tobedeleted
                    metadata:
                      type: object
                      additionalProperties: {}
                    title:
                      type: string
                    classCode:
                      type: string
                    classType:
                      type: string
                      enum: *ref_47
                    location:
                      type: string
                    grades:
                      type: array
                      items:
                        type: string
                    subjects:
                      type: array
                      items:
                        type: string
                    subjectCodes:
                      type: array
                      items:
                        type: string
                    periods:
                      type: array
                      items:
                        type: string
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
                    terms:
                      type: array
                      items:
                        type: object
                        properties:
                          sourcedId:
                            type: string
                        required:
                          - sourcedId
              required:
                - class
      responses:
        '200':
          description: Class successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteClass
      summary: Delete a class
      description: Deletes an existing class
      tags: *ref_44
      parameters:
        - name: sourcedId
          description: Class sourcedId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Class successfully deleted
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Class not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/schools/{schoolSourcedId}/classes:
    get:
      operationId: getClassesForSchool
      summary: Get all classes for a school
      description: Returns a collection of classes for a specific school
      tags:
        - Rostering - Schools
        - Rostering - Classes
      parameters:
        - name: schoolSourcedId
          description: School sourced ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection of classes successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  classes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                required:
                  - classes
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: School not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/students/{studentSourcedId}/classes:
    get:
      operationId: getClassesForStudent
      summary: Get classes for a student
      description: Returns a collection of classes that the student is enrolled in.
      tags:
        - Rostering - Students
        - Rostering - Classes
      parameters:
        - name: studentSourcedId
          description: The sourcedId of the student
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of classes for the
            student
          content:
            application/json:
              schema:
                type: object
                properties:
                  classes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                required:
                  - classes
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/teachers/{teacherSourcedId}/classes:
    get:
      operationId: getClassesForTeacher
      summary: Get classes for a teacher
      description: Returns a collection of classes that the teacher is teaching.
      tags:
        - Rostering - Teachers
        - Rostering - Classes
      parameters:
        - name: teacherSourcedId
          description: The sourcedId of the teacher
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successful response containing a collection of classes for the
            teacher
          content:
            application/json:
              schema:
                type: object
                properties:
                  classes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                required:
                  - classes
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Teacher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/terms/{termSourcedId}/classes:
    get:
      operationId: getClassesForTerm
      summary: Get classes for a term
      description: Returns a collection of classes associated with the term.
      tags:
        - Rostering - Terms
        - Rostering - Classes
      parameters:
        - name: termSourcedId
          description: The sourcedId of the term
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response containing a collection of classes for the term
          content:
            application/json:
              schema:
                type: object
                properties:
                  classes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                required:
                  - classes
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Term not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/users/{userSourcedId}/classes:
    get:
      operationId: getClassesForUser
      summary: Get classes for a user
      description: Returns a collection of classes associated with the user.
      tags:
        - Rostering - Users
        - Rostering - Classes
      parameters:
        - name: userSourcedId
          description: The sourcedId of the user
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response containing a collection of classes for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  classes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Class'
                required:
                  - classes
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/academicSessions/:
    get:
      operationId: getAllAcademicSessions
      summary: Get all academic sessions
      description: Returns a collection of academic sessions
      tags: &ref_48
        - Rostering - Academic Sessions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AcademicSession'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      operationId: postAcademicSession
      summary: Create an academic session
      description: Creates a new academic session
      tags: *ref_48
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_34
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    title:
                      type: string
                    startDate:
                      type: string
                    endDate:
                      type: string
                    type:
                      type: string
                      enum: &ref_49
                        - gradingPeriod
                        - semester
                        - schoolYear
                        - term
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    schoolYear:
                      type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - title
                    - startDate
                    - endDate
                    - type
                    - schoolYear
                    - org
              required:
                - academicSession
      responses:
        '201':
          description: Academic session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sourcedIdPairs:
                    type: object
                    properties:
                      suppliedSourcedId:
                        type: string
                      allocatedSourcedId:
                        type: string
                    required:
                      - suppliedSourcedId
                      - allocatedSourcedId
                required:
                  - sourcedIdPairs
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /ims/oneroster/rostering/v1p2/academicSessions/{sourcedId}:
    get:
      operationId: getAcademicSession
      summary: Get an academic session
      description: Returns a specific academic session by sourcedId
      tags: *ref_48
      parameters:
        - name: sourcedId
          description: The sourcedId of the academic session
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicSession'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Academic session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      operationId: putAcademicSession
      summary: Update an academic session
      description: Updates an existing academic session by sourcedId
      tags: *ref_48
      parameters:
        - name: sourcedId
          description: The sourcedId of the academic session to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academicSession:
                  type: object
                  properties:
                    sourcedId:
                      type: string
                    status:
                      type: string
                      enum: *ref_34
                      default: active
                    metadata:
                      type: object
                      additionalProperties: {}
                    title:
                      type: string
                    startDate:
                      type: string
                    endDate:
                      type: string
                    type:
                      type: string
                      enum: *ref_49
                    parent:
                      type:
                        - object
                        - 'null'
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                    schoolYear:
                      type: string
                    org:
                      type: object
                      properties:
                        sourcedId:
                          type: string
                      required:
                        - sourcedId
                  required:
                    - title
                    - startDate
                    - endDate
                    - type
                    - schoolYear
                    - org
              required:
                - academicSession
      responses:
        '200':
          description: Academic session updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicSession'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Academic session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      operationId: deleteAcademicSession
      summary: Delete an academic session
      description: Deletes an academic session by sourcedId
      tags: *ref_48
      parameters:
        - name: sourcedId
          description: The sourcedId of the academic session to delete
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Academic session deleted successfully
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Academic session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          scopes:
            https://purl.imsglobal.org/spec/or/v1p1/scope/admin: Admin access to the API
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-core.readonly: Read access to roster core
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster.readonly: Read access to roster
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster.createput: Create and update access to roster
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster.delete: Delete access to roster
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-demographics.readonly: Read access to roster demographics
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-demographics.createput: Create and update access to roster demographics
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-demographics.delete: Delete access to roster demographics
            https://purl.imsglobal.org/spec/or/v1p1/scope/resource.readonly: Read access to resource
            https://purl.imsglobal.org/spec/or/v1p1/scope/resource.createput: Create and update access to resource
            https://purl.imsglobal.org/spec/or/v1p1/scope/resource.delete: Delete access to resource
            https://purl.imsglobal.org/spec/or/v1p1/scope/gradebook.readonly: Read access to gradebook
            https://purl.imsglobal.org/spec/or/v1p1/scope/gradebook.createput: Create and update access to gradebook
            https://purl.imsglobal.org/spec/or/v1p1/scope/gradebook.delete: Delete access to gradebook
            https://purl.imsglobal.org/spec/powerpath/v1p1/scope/powerpath.readonly: Read access to powerpath
            https://purl.imsglobal.org/spec/powerpath/v1p1/scope/powerpath.createput: Create and update access to powerpath
            https://purl.imsglobal.org/spec/powerpath/v1p1/scope/powerpath.admin: Admin access to powerpath
          tokenUrl: >-
            https://alpha-auth-development-idp.auth.us-west-2.amazoncognito.com/oauth2/token
  schemas:
    ScoreScale:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        type:
          type: string
        class:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        course:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        scoreScaleValue:
          type: array
          items:
            type: object
            properties:
              itemValueLHS:
                type: string
              itemValueRHS:
                type: string
              value:
                type: string
              description:
                type: string
            required:
              - itemValueLHS
              - itemValueRHS
      required:
        - status
        - title
        - type
        - class
        - scoreScaleValue
      description: Represents a score scale.
    BadRequestResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: invaliddata
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    UnauthorizedRequestResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: unauthorisedrequest
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    ForbiddenResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: forbidden
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    NotFoundResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: unknownobject
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    UnprocessableEntityResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: invaliddata
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    TooManyRequestsResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: server_busy
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    InternalServerErrorResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: internal_server_error
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    Result:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        lineItem:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        student:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        class:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        scoreScale:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        scoreStatus:
          type: string
          enum: &ref_50
            - exempt
            - fully graded
            - not submitted
            - partially graded
            - submitted
        score:
          type:
            - number
            - 'null'
        textScore:
          type:
            - string
            - 'null'
        scoreDate:
          type: string
          format: date-time
        comment:
          type:
            - string
            - 'null'
        learningObjectiveSet:
          type:
            - array
            - 'null'
          items:
            type: object
            properties:
              source:
                type: string
              learningObjectiveIds:
                type: array
                items:
                  type: object
                  properties:
                    learningObjectiveId:
                      type: string
                    score:
                      type: number
                    textScore:
                      type: string
                  required:
                    - learningObjectiveId
            required:
              - source
              - learningObjectiveIds
        inProgress:
          type: string
        incomplete:
          type: string
        late:
          type: string
        missing:
          type: string
      required:
        - status
        - lineItem
        - student
        - scoreStatus
        - scoreDate
      description: Represents a result.
    LineItem:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        description:
          type:
            - string
            - 'null'
        assignDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        class:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        school:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        category:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        gradingPeriod:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        academicSession:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        scoreScale:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        resultValueMin:
          type:
            - number
            - 'null'
        resultValueMax:
          type:
            - number
            - 'null'
        learningObjectiveSet:
          type:
            - array
            - 'null'
          items:
            type: object
            properties:
              source:
                type: string
              learningObjectiveIds:
                type: array
                items:
                  type: object
                  properties:
                    learningObjectiveId:
                      type: string
                    score:
                      type: number
                    textScore:
                      type: string
                  required:
                    - learningObjectiveId
            required:
              - source
              - learningObjectiveIds
      required:
        - status
        - title
        - assignDate
        - dueDate
        - class
        - school
        - category
      description: Represents a line item.
    Category:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        weight:
          type:
            - number
            - 'null'
      required:
        - status
        - title
      description: Represents a category.
    AssessmentResult:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        assessmentLineItem:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        student:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        score:
          type:
            - number
            - 'null'
        textScore:
          type:
            - string
            - 'null'
        scoreDate:
          type: string
          format: date-time
        scoreScale:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        scorePercentile:
          type:
            - number
            - 'null'
        scoreStatus:
          type: string
          enum: *ref_50
        comment:
          type:
            - string
            - 'null'
        learningObjectiveSet:
          type:
            - array
            - 'null'
          items:
            type: object
            properties:
              source:
                type: string
              learningObjectiveIds:
                type: array
                items:
                  type: object
                  properties:
                    learningObjectiveId:
                      type: string
                    score:
                      type: number
                    textScore:
                      type: string
                  required:
                    - learningObjectiveId
            required:
              - source
              - learningObjectiveIds
        inProgress:
          type:
            - string
            - 'null'
        incomplete:
          type:
            - string
            - 'null'
        late:
          type:
            - string
            - 'null'
        missing:
          type:
            - string
            - 'null'
      required:
        - status
        - assessmentLineItem
        - student
        - scoreDate
        - scoreStatus
      description: Represents an assessment result.
    AssessmentLineItem:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        description:
          type:
            - string
            - 'null'
        class:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        parent:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: Represents a parent assessment line item.
        scoreScale:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: Represents a score scale.
        resultValueMin:
          type:
            - number
            - 'null'
        resultValueMax:
          type:
            - number
            - 'null'
        component:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: >-
            Reference to the Component that this assessment line item is
            associated with.
        componentResource:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: >-
            Reference to the Component Resource that this assessment line item
            is associated with.
        learningObjectiveSet:
          $ref: '#/components/schemas/LearningObjectiveSet'
      required:
        - status
        - title
      description: Represents an assessment line item.
    LearningObjectiveSet:
      type:
        - array
        - 'null'
      items:
        type: object
        properties:
          source:
            type: string
          learningObjectiveIds:
            type: array
            items:
              type: object
              properties:
                learningObjectiveId:
                  type: string
                score:
                  type: number
                textScore:
                  type: string
              required:
                - learningObjectiveId
        required:
          - source
          - learningObjectiveIds
      description: Represents a learning objective set.
    Resource:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - primary
              - secondary
        importance:
          type: string
          enum:
            - primary
            - secondary
        vendorResourceId:
          type: string
        vendorId:
          type:
            - string
            - 'null'
        applicationId:
          type:
            - string
            - 'null'
      required:
        - sourcedId
        - status
        - title
        - vendorResourceId
      description: Represents a digital resource of some kind.
    AcademicSession:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        type:
          type: string
          enum: *ref_49
        parent:
          type:
            - object
            - 'null'
          properties:
            href:
              type: string
              format: uri
            sourcedId:
              type: string
            type:
              type: string
              enum: *ref_20
          required:
            - href
            - sourcedId
            - type
        schoolYear:
          type: number
        org:
          type: object
          properties:
            href:
              type: string
              format: uri
            sourcedId:
              type: string
            type:
              type: string
              enum: *ref_20
          required:
            - href
            - sourcedId
            - type
      required:
        - sourcedId
        - status
        - title
        - startDate
        - endDate
        - type
        - schoolYear
        - org
      description: Represents an academic session.
    Org:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        name:
          type: string
        type:
          type: string
          enum: *ref_32
        identifier:
          type: string
        parent:
          type:
            - object
            - 'null'
          properties:
            href:
              type: string
              format: uri
            sourcedId:
              type: string
            type:
              type: string
          required:
            - href
            - sourcedId
            - type
        children:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
                format: uri
              sourcedId:
                type: string
              type:
                type: string
            required:
              - href
              - sourcedId
              - type
          default: []
      required:
        - sourcedId
        - status
        - name
        - type
        - identifier
        - parent
        - children
      description: Represents an organization.
    Enrollment:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        role:
          type: string
          enum: *ref_37
        primary:
          type: boolean
        beginDate:
          type:
            - string
            - 'null'
          example: '2024-01-01'
        endDate:
          type:
            - string
            - 'null'
          example: '2024-01-01'
        user:
          type: object
          properties:
            href:
              type: string
              format: uri
            sourcedId:
              type: string
            type:
              type: string
          required:
            - href
            - sourcedId
            - type
        class:
          type: object
          properties:
            href:
              type: string
              format: uri
            sourcedId:
              type: string
            type:
              type: string
          required:
            - href
            - sourcedId
            - type
      required:
        - sourcedId
        - status
        - role
        - primary
        - beginDate
        - endDate
        - user
        - class
      description: Represents an enrollment.
    Demographics:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        birthDate:
          type:
            - string
            - 'null'
          pattern: ^\d{4}-\d{2}-\d{2}$
        sex:
          type:
            - string
            - 'null'
          enum:
            - male
            - female
            - other
            - unspecified
            - null
        americanIndianOrAlaskaNative:
          type:
            - string
            - 'null'
        asian:
          type:
            - string
            - 'null'
        blackOrAfricanAmerican:
          type:
            - string
            - 'null'
        nativeHawaiianOrOtherPacificIslander:
          type:
            - string
            - 'null'
        white:
          type:
            - string
            - 'null'
        demographicRaceTwoOrMoreRaces:
          type:
            - string
            - 'null'
        hispanicOrLatinoEthnicity:
          type:
            - string
            - 'null'
        countryOfBirthCode:
          type:
            - string
            - 'null'
        stateOfBirthAbbreviation:
          type:
            - string
            - 'null'
        cityOfBirth:
          type:
            - string
            - 'null'
        publicSchoolResidenceStatus:
          type:
            - string
            - 'null'
      required:
        - sourcedId
        - status
        - birthDate
        - sex
        - americanIndianOrAlaskaNative
        - asian
        - blackOrAfricanAmerican
        - nativeHawaiianOrOtherPacificIslander
        - white
        - demographicRaceTwoOrMoreRaces
        - hispanicOrLatinoEthnicity
        - countryOfBirthCode
        - stateOfBirthAbbreviation
        - cityOfBirth
        - publicSchoolResidenceStatus
      description: Represents a student's demographics information.
    Class:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_18
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        classCode:
          type:
            - string
            - 'null'
        classType:
          type: string
          enum: *ref_47
        location:
          type:
            - string
            - 'null'
        grades:
          type: array
          items:
            type: string
        subjects:
          type: array
          items:
            type: string
        course:
          type:
            - object
            - 'null'
          properties:
            href:
              type: string
              format: uri
            sourcedId:
              type: string
            type:
              type: string
          required:
            - href
            - sourcedId
            - type
        school:
          type:
            - object
            - 'null'
          properties:
            href:
              type: string
              format: uri
            sourcedId:
              type: string
            type:
              type: string
          required:
            - href
            - sourcedId
            - type
        terms:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
                format: uri
              sourcedId:
                type: string
              type:
                type: string
            required:
              - href
              - sourcedId
              - type
        subjectCodes:
          type: array
          items:
            type: string
        periods:
          type: array
          items:
            type: string
        resources:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
                format: uri
              sourcedId:
                type: string
              type:
                type: string
            required:
              - href
              - sourcedId
              - type
      required:
        - sourcedId
        - status
        - title
        - classCode
        - classType
        - location
        - course
        - school
        - terms
      description: Represents a class.
