/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PostAcademicSessionStatus = {
  Active: "active",
  Tobedeleted: "tobedeleted",
} as const;
export type PostAcademicSessionStatus = ClosedEnum<
  typeof PostAcademicSessionStatus
>;

export const PostAcademicSessionType = {
  GradingPeriod: "gradingPeriod",
  Semester: "semester",
  SchoolYear: "schoolYear",
  Term: "term",
} as const;
export type PostAcademicSessionType = ClosedEnum<
  typeof PostAcademicSessionType
>;

export type PostAcademicSessionParent = {
  sourcedId: string;
};

export type PostAcademicSessionOrg = {
  sourcedId: string;
};

export type PostAcademicSessionAcademicSession = {
  sourcedId?: string | undefined;
  status?: PostAcademicSessionStatus | undefined;
  metadata?: { [k: string]: any } | undefined;
  title: string;
  startDate: string;
  endDate: string;
  type: PostAcademicSessionType;
  parent?: PostAcademicSessionParent | null | undefined;
  schoolYear: string;
  org: PostAcademicSessionOrg;
};

export type PostAcademicSessionRequest = {
  academicSession: PostAcademicSessionAcademicSession;
};

export type PostAcademicSessionSourcedIdPairs = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/**
 * Academic session created
 */
export type PostAcademicSessionResponse = {
  sourcedIdPairs: PostAcademicSessionSourcedIdPairs;
};

/** @internal */
export const PostAcademicSessionStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostAcademicSessionStatus
> = z.nativeEnum(PostAcademicSessionStatus);

/** @internal */
export const PostAcademicSessionStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostAcademicSessionStatus
> = PostAcademicSessionStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionStatus$ {
  /** @deprecated use `PostAcademicSessionStatus$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionStatus$inboundSchema;
  /** @deprecated use `PostAcademicSessionStatus$outboundSchema` instead. */
  export const outboundSchema = PostAcademicSessionStatus$outboundSchema;
}

/** @internal */
export const PostAcademicSessionType$inboundSchema: z.ZodNativeEnum<
  typeof PostAcademicSessionType
> = z.nativeEnum(PostAcademicSessionType);

/** @internal */
export const PostAcademicSessionType$outboundSchema: z.ZodNativeEnum<
  typeof PostAcademicSessionType
> = PostAcademicSessionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionType$ {
  /** @deprecated use `PostAcademicSessionType$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionType$inboundSchema;
  /** @deprecated use `PostAcademicSessionType$outboundSchema` instead. */
  export const outboundSchema = PostAcademicSessionType$outboundSchema;
}

/** @internal */
export const PostAcademicSessionParent$inboundSchema: z.ZodType<
  PostAcademicSessionParent,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type PostAcademicSessionParent$Outbound = {
  sourcedId: string;
};

/** @internal */
export const PostAcademicSessionParent$outboundSchema: z.ZodType<
  PostAcademicSessionParent$Outbound,
  z.ZodTypeDef,
  PostAcademicSessionParent
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionParent$ {
  /** @deprecated use `PostAcademicSessionParent$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionParent$inboundSchema;
  /** @deprecated use `PostAcademicSessionParent$outboundSchema` instead. */
  export const outboundSchema = PostAcademicSessionParent$outboundSchema;
  /** @deprecated use `PostAcademicSessionParent$Outbound` instead. */
  export type Outbound = PostAcademicSessionParent$Outbound;
}

export function postAcademicSessionParentToJSON(
  postAcademicSessionParent: PostAcademicSessionParent,
): string {
  return JSON.stringify(
    PostAcademicSessionParent$outboundSchema.parse(postAcademicSessionParent),
  );
}

export function postAcademicSessionParentFromJSON(
  jsonString: string,
): SafeParseResult<PostAcademicSessionParent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostAcademicSessionParent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostAcademicSessionParent' from JSON`,
  );
}

/** @internal */
export const PostAcademicSessionOrg$inboundSchema: z.ZodType<
  PostAcademicSessionOrg,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type PostAcademicSessionOrg$Outbound = {
  sourcedId: string;
};

/** @internal */
export const PostAcademicSessionOrg$outboundSchema: z.ZodType<
  PostAcademicSessionOrg$Outbound,
  z.ZodTypeDef,
  PostAcademicSessionOrg
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionOrg$ {
  /** @deprecated use `PostAcademicSessionOrg$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionOrg$inboundSchema;
  /** @deprecated use `PostAcademicSessionOrg$outboundSchema` instead. */
  export const outboundSchema = PostAcademicSessionOrg$outboundSchema;
  /** @deprecated use `PostAcademicSessionOrg$Outbound` instead. */
  export type Outbound = PostAcademicSessionOrg$Outbound;
}

export function postAcademicSessionOrgToJSON(
  postAcademicSessionOrg: PostAcademicSessionOrg,
): string {
  return JSON.stringify(
    PostAcademicSessionOrg$outboundSchema.parse(postAcademicSessionOrg),
  );
}

export function postAcademicSessionOrgFromJSON(
  jsonString: string,
): SafeParseResult<PostAcademicSessionOrg, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostAcademicSessionOrg$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostAcademicSessionOrg' from JSON`,
  );
}

/** @internal */
export const PostAcademicSessionAcademicSession$inboundSchema: z.ZodType<
  PostAcademicSessionAcademicSession,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string().optional(),
  status: PostAcademicSessionStatus$inboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  title: z.string(),
  startDate: z.string(),
  endDate: z.string(),
  type: PostAcademicSessionType$inboundSchema,
  parent: z.nullable(z.lazy(() => PostAcademicSessionParent$inboundSchema))
    .optional(),
  schoolYear: z.string(),
  org: z.lazy(() => PostAcademicSessionOrg$inboundSchema),
});

/** @internal */
export type PostAcademicSessionAcademicSession$Outbound = {
  sourcedId?: string | undefined;
  status: string;
  metadata?: { [k: string]: any } | undefined;
  title: string;
  startDate: string;
  endDate: string;
  type: string;
  parent?: PostAcademicSessionParent$Outbound | null | undefined;
  schoolYear: string;
  org: PostAcademicSessionOrg$Outbound;
};

/** @internal */
export const PostAcademicSessionAcademicSession$outboundSchema: z.ZodType<
  PostAcademicSessionAcademicSession$Outbound,
  z.ZodTypeDef,
  PostAcademicSessionAcademicSession
> = z.object({
  sourcedId: z.string().optional(),
  status: PostAcademicSessionStatus$outboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  title: z.string(),
  startDate: z.string(),
  endDate: z.string(),
  type: PostAcademicSessionType$outboundSchema,
  parent: z.nullable(z.lazy(() => PostAcademicSessionParent$outboundSchema))
    .optional(),
  schoolYear: z.string(),
  org: z.lazy(() => PostAcademicSessionOrg$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionAcademicSession$ {
  /** @deprecated use `PostAcademicSessionAcademicSession$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionAcademicSession$inboundSchema;
  /** @deprecated use `PostAcademicSessionAcademicSession$outboundSchema` instead. */
  export const outboundSchema =
    PostAcademicSessionAcademicSession$outboundSchema;
  /** @deprecated use `PostAcademicSessionAcademicSession$Outbound` instead. */
  export type Outbound = PostAcademicSessionAcademicSession$Outbound;
}

export function postAcademicSessionAcademicSessionToJSON(
  postAcademicSessionAcademicSession: PostAcademicSessionAcademicSession,
): string {
  return JSON.stringify(
    PostAcademicSessionAcademicSession$outboundSchema.parse(
      postAcademicSessionAcademicSession,
    ),
  );
}

export function postAcademicSessionAcademicSessionFromJSON(
  jsonString: string,
): SafeParseResult<PostAcademicSessionAcademicSession, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostAcademicSessionAcademicSession$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostAcademicSessionAcademicSession' from JSON`,
  );
}

/** @internal */
export const PostAcademicSessionRequest$inboundSchema: z.ZodType<
  PostAcademicSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  academicSession: z.lazy(() =>
    PostAcademicSessionAcademicSession$inboundSchema
  ),
});

/** @internal */
export type PostAcademicSessionRequest$Outbound = {
  academicSession: PostAcademicSessionAcademicSession$Outbound;
};

/** @internal */
export const PostAcademicSessionRequest$outboundSchema: z.ZodType<
  PostAcademicSessionRequest$Outbound,
  z.ZodTypeDef,
  PostAcademicSessionRequest
> = z.object({
  academicSession: z.lazy(() =>
    PostAcademicSessionAcademicSession$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionRequest$ {
  /** @deprecated use `PostAcademicSessionRequest$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionRequest$inboundSchema;
  /** @deprecated use `PostAcademicSessionRequest$outboundSchema` instead. */
  export const outboundSchema = PostAcademicSessionRequest$outboundSchema;
  /** @deprecated use `PostAcademicSessionRequest$Outbound` instead. */
  export type Outbound = PostAcademicSessionRequest$Outbound;
}

export function postAcademicSessionRequestToJSON(
  postAcademicSessionRequest: PostAcademicSessionRequest,
): string {
  return JSON.stringify(
    PostAcademicSessionRequest$outboundSchema.parse(postAcademicSessionRequest),
  );
}

export function postAcademicSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostAcademicSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostAcademicSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostAcademicSessionRequest' from JSON`,
  );
}

/** @internal */
export const PostAcademicSessionSourcedIdPairs$inboundSchema: z.ZodType<
  PostAcademicSessionSourcedIdPairs,
  z.ZodTypeDef,
  unknown
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/** @internal */
export type PostAcademicSessionSourcedIdPairs$Outbound = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/** @internal */
export const PostAcademicSessionSourcedIdPairs$outboundSchema: z.ZodType<
  PostAcademicSessionSourcedIdPairs$Outbound,
  z.ZodTypeDef,
  PostAcademicSessionSourcedIdPairs
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionSourcedIdPairs$ {
  /** @deprecated use `PostAcademicSessionSourcedIdPairs$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionSourcedIdPairs$inboundSchema;
  /** @deprecated use `PostAcademicSessionSourcedIdPairs$outboundSchema` instead. */
  export const outboundSchema =
    PostAcademicSessionSourcedIdPairs$outboundSchema;
  /** @deprecated use `PostAcademicSessionSourcedIdPairs$Outbound` instead. */
  export type Outbound = PostAcademicSessionSourcedIdPairs$Outbound;
}

export function postAcademicSessionSourcedIdPairsToJSON(
  postAcademicSessionSourcedIdPairs: PostAcademicSessionSourcedIdPairs,
): string {
  return JSON.stringify(
    PostAcademicSessionSourcedIdPairs$outboundSchema.parse(
      postAcademicSessionSourcedIdPairs,
    ),
  );
}

export function postAcademicSessionSourcedIdPairsFromJSON(
  jsonString: string,
): SafeParseResult<PostAcademicSessionSourcedIdPairs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostAcademicSessionSourcedIdPairs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostAcademicSessionSourcedIdPairs' from JSON`,
  );
}

/** @internal */
export const PostAcademicSessionResponse$inboundSchema: z.ZodType<
  PostAcademicSessionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedIdPairs: z.lazy(() => PostAcademicSessionSourcedIdPairs$inboundSchema),
});

/** @internal */
export type PostAcademicSessionResponse$Outbound = {
  sourcedIdPairs: PostAcademicSessionSourcedIdPairs$Outbound;
};

/** @internal */
export const PostAcademicSessionResponse$outboundSchema: z.ZodType<
  PostAcademicSessionResponse$Outbound,
  z.ZodTypeDef,
  PostAcademicSessionResponse
> = z.object({
  sourcedIdPairs: z.lazy(() =>
    PostAcademicSessionSourcedIdPairs$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAcademicSessionResponse$ {
  /** @deprecated use `PostAcademicSessionResponse$inboundSchema` instead. */
  export const inboundSchema = PostAcademicSessionResponse$inboundSchema;
  /** @deprecated use `PostAcademicSessionResponse$outboundSchema` instead. */
  export const outboundSchema = PostAcademicSessionResponse$outboundSchema;
  /** @deprecated use `PostAcademicSessionResponse$Outbound` instead. */
  export type Outbound = PostAcademicSessionResponse$Outbound;
}

export function postAcademicSessionResponseToJSON(
  postAcademicSessionResponse: PostAcademicSessionResponse,
): string {
  return JSON.stringify(
    PostAcademicSessionResponse$outboundSchema.parse(
      postAcademicSessionResponse,
    ),
  );
}

export function postAcademicSessionResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostAcademicSessionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostAcademicSessionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostAcademicSessionResponse' from JSON`,
  );
}
