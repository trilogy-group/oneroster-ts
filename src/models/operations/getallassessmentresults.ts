/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The order to sort the response by
 */
export const GetAllAssessmentResultsOrderBy = {
  Asc: "asc",
  Desc: "desc",
} as const;
/**
 * The order to sort the response by
 */
export type GetAllAssessmentResultsOrderBy = ClosedEnum<
  typeof GetAllAssessmentResultsOrderBy
>;

export type GetAllAssessmentResultsRequest = {
  /**
   * Comma-separated list of fields to include in the response
   */
  fields?: string | undefined;
  /**
   * The maximum number of items to return in the paginated response
   */
  limit?: number | undefined;
  /**
   * The number of items to skip in the paginated response
   */
  offset?: number | undefined;
  /**
   * The field to sort the response by
   */
  sort?: string | undefined;
  /**
   * The order to sort the response by
   */
  orderBy?: GetAllAssessmentResultsOrderBy | undefined;
  /**
   * The filter to apply to the response
   */
  filter?: string | undefined;
  /**
   * The search query to apply to the response
   */
  search?: string | undefined;
};

/**
 * Successful response containing a collection of assessment results
 */
export type GetAllAssessmentResultsResponseBody = {
  assessmentResults: Array<components.AssessmentResult>;
};

export type GetAllAssessmentResultsResponse = {
  result: GetAllAssessmentResultsResponseBody;
};

/** @internal */
export const GetAllAssessmentResultsOrderBy$inboundSchema: z.ZodNativeEnum<
  typeof GetAllAssessmentResultsOrderBy
> = z.nativeEnum(GetAllAssessmentResultsOrderBy);

/** @internal */
export const GetAllAssessmentResultsOrderBy$outboundSchema: z.ZodNativeEnum<
  typeof GetAllAssessmentResultsOrderBy
> = GetAllAssessmentResultsOrderBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentResultsOrderBy$ {
  /** @deprecated use `GetAllAssessmentResultsOrderBy$inboundSchema` instead. */
  export const inboundSchema = GetAllAssessmentResultsOrderBy$inboundSchema;
  /** @deprecated use `GetAllAssessmentResultsOrderBy$outboundSchema` instead. */
  export const outboundSchema = GetAllAssessmentResultsOrderBy$outboundSchema;
}

/** @internal */
export const GetAllAssessmentResultsRequest$inboundSchema: z.ZodType<
  GetAllAssessmentResultsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetAllAssessmentResultsOrderBy$inboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/** @internal */
export type GetAllAssessmentResultsRequest$Outbound = {
  fields?: string | undefined;
  limit: number;
  offset: number;
  sort?: string | undefined;
  orderBy?: string | undefined;
  filter?: string | undefined;
  search?: string | undefined;
};

/** @internal */
export const GetAllAssessmentResultsRequest$outboundSchema: z.ZodType<
  GetAllAssessmentResultsRequest$Outbound,
  z.ZodTypeDef,
  GetAllAssessmentResultsRequest
> = z.object({
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetAllAssessmentResultsOrderBy$outboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentResultsRequest$ {
  /** @deprecated use `GetAllAssessmentResultsRequest$inboundSchema` instead. */
  export const inboundSchema = GetAllAssessmentResultsRequest$inboundSchema;
  /** @deprecated use `GetAllAssessmentResultsRequest$outboundSchema` instead. */
  export const outboundSchema = GetAllAssessmentResultsRequest$outboundSchema;
  /** @deprecated use `GetAllAssessmentResultsRequest$Outbound` instead. */
  export type Outbound = GetAllAssessmentResultsRequest$Outbound;
}

export function getAllAssessmentResultsRequestToJSON(
  getAllAssessmentResultsRequest: GetAllAssessmentResultsRequest,
): string {
  return JSON.stringify(
    GetAllAssessmentResultsRequest$outboundSchema.parse(
      getAllAssessmentResultsRequest,
    ),
  );
}

export function getAllAssessmentResultsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAllAssessmentResultsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllAssessmentResultsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllAssessmentResultsRequest' from JSON`,
  );
}

/** @internal */
export const GetAllAssessmentResultsResponseBody$inboundSchema: z.ZodType<
  GetAllAssessmentResultsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  assessmentResults: z.array(components.AssessmentResult$inboundSchema),
});

/** @internal */
export type GetAllAssessmentResultsResponseBody$Outbound = {
  assessmentResults: Array<components.AssessmentResult$Outbound>;
};

/** @internal */
export const GetAllAssessmentResultsResponseBody$outboundSchema: z.ZodType<
  GetAllAssessmentResultsResponseBody$Outbound,
  z.ZodTypeDef,
  GetAllAssessmentResultsResponseBody
> = z.object({
  assessmentResults: z.array(components.AssessmentResult$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentResultsResponseBody$ {
  /** @deprecated use `GetAllAssessmentResultsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetAllAssessmentResultsResponseBody$inboundSchema;
  /** @deprecated use `GetAllAssessmentResultsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetAllAssessmentResultsResponseBody$outboundSchema;
  /** @deprecated use `GetAllAssessmentResultsResponseBody$Outbound` instead. */
  export type Outbound = GetAllAssessmentResultsResponseBody$Outbound;
}

export function getAllAssessmentResultsResponseBodyToJSON(
  getAllAssessmentResultsResponseBody: GetAllAssessmentResultsResponseBody,
): string {
  return JSON.stringify(
    GetAllAssessmentResultsResponseBody$outboundSchema.parse(
      getAllAssessmentResultsResponseBody,
    ),
  );
}

export function getAllAssessmentResultsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetAllAssessmentResultsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAllAssessmentResultsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllAssessmentResultsResponseBody' from JSON`,
  );
}

/** @internal */
export const GetAllAssessmentResultsResponse$inboundSchema: z.ZodType<
  GetAllAssessmentResultsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => GetAllAssessmentResultsResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type GetAllAssessmentResultsResponse$Outbound = {
  Result: GetAllAssessmentResultsResponseBody$Outbound;
};

/** @internal */
export const GetAllAssessmentResultsResponse$outboundSchema: z.ZodType<
  GetAllAssessmentResultsResponse$Outbound,
  z.ZodTypeDef,
  GetAllAssessmentResultsResponse
> = z.object({
  result: z.lazy(() => GetAllAssessmentResultsResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentResultsResponse$ {
  /** @deprecated use `GetAllAssessmentResultsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAllAssessmentResultsResponse$inboundSchema;
  /** @deprecated use `GetAllAssessmentResultsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAllAssessmentResultsResponse$outboundSchema;
  /** @deprecated use `GetAllAssessmentResultsResponse$Outbound` instead. */
  export type Outbound = GetAllAssessmentResultsResponse$Outbound;
}

export function getAllAssessmentResultsResponseToJSON(
  getAllAssessmentResultsResponse: GetAllAssessmentResultsResponse,
): string {
  return JSON.stringify(
    GetAllAssessmentResultsResponse$outboundSchema.parse(
      getAllAssessmentResultsResponse,
    ),
  );
}

export function getAllAssessmentResultsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAllAssessmentResultsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllAssessmentResultsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllAssessmentResultsResponse' from JSON`,
  );
}
