/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetScoreScalesForClassRequest = {
  /**
   * The sourcedId of the class
   */
  sourcedId: string;
};

/**
 * Successful response containing a collection of score scales for the class
 */
export type GetScoreScalesForClassResponse = {
  scoreScales: Array<components.ScoreScale>;
};

/** @internal */
export const GetScoreScalesForClassRequest$inboundSchema: z.ZodType<
  GetScoreScalesForClassRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetScoreScalesForClassRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetScoreScalesForClassRequest$outboundSchema: z.ZodType<
  GetScoreScalesForClassRequest$Outbound,
  z.ZodTypeDef,
  GetScoreScalesForClassRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetScoreScalesForClassRequest$ {
  /** @deprecated use `GetScoreScalesForClassRequest$inboundSchema` instead. */
  export const inboundSchema = GetScoreScalesForClassRequest$inboundSchema;
  /** @deprecated use `GetScoreScalesForClassRequest$outboundSchema` instead. */
  export const outboundSchema = GetScoreScalesForClassRequest$outboundSchema;
  /** @deprecated use `GetScoreScalesForClassRequest$Outbound` instead. */
  export type Outbound = GetScoreScalesForClassRequest$Outbound;
}

export function getScoreScalesForClassRequestToJSON(
  getScoreScalesForClassRequest: GetScoreScalesForClassRequest,
): string {
  return JSON.stringify(
    GetScoreScalesForClassRequest$outboundSchema.parse(
      getScoreScalesForClassRequest,
    ),
  );
}

export function getScoreScalesForClassRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetScoreScalesForClassRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetScoreScalesForClassRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetScoreScalesForClassRequest' from JSON`,
  );
}

/** @internal */
export const GetScoreScalesForClassResponse$inboundSchema: z.ZodType<
  GetScoreScalesForClassResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  scoreScales: z.array(components.ScoreScale$inboundSchema),
});

/** @internal */
export type GetScoreScalesForClassResponse$Outbound = {
  scoreScales: Array<components.ScoreScale$Outbound>;
};

/** @internal */
export const GetScoreScalesForClassResponse$outboundSchema: z.ZodType<
  GetScoreScalesForClassResponse$Outbound,
  z.ZodTypeDef,
  GetScoreScalesForClassResponse
> = z.object({
  scoreScales: z.array(components.ScoreScale$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetScoreScalesForClassResponse$ {
  /** @deprecated use `GetScoreScalesForClassResponse$inboundSchema` instead. */
  export const inboundSchema = GetScoreScalesForClassResponse$inboundSchema;
  /** @deprecated use `GetScoreScalesForClassResponse$outboundSchema` instead. */
  export const outboundSchema = GetScoreScalesForClassResponse$outboundSchema;
  /** @deprecated use `GetScoreScalesForClassResponse$Outbound` instead. */
  export type Outbound = GetScoreScalesForClassResponse$Outbound;
}

export function getScoreScalesForClassResponseToJSON(
  getScoreScalesForClassResponse: GetScoreScalesForClassResponse,
): string {
  return JSON.stringify(
    GetScoreScalesForClassResponse$outboundSchema.parse(
      getScoreScalesForClassResponse,
    ),
  );
}

export function getScoreScalesForClassResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetScoreScalesForClassResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetScoreScalesForClassResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetScoreScalesForClassResponse' from JSON`,
  );
}
