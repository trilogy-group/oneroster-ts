/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RemoveResourceFromClassRequest = {
  /**
   * The sourcedId of the class
   */
  classSourcedId: string;
  /**
   * The sourcedId of the resource to remove
   */
  resourceSourcedId: string;
};

/** @internal */
export const RemoveResourceFromClassRequest$inboundSchema: z.ZodType<
  RemoveResourceFromClassRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  classSourcedId: z.string(),
  resourceSourcedId: z.string(),
});

/** @internal */
export type RemoveResourceFromClassRequest$Outbound = {
  classSourcedId: string;
  resourceSourcedId: string;
};

/** @internal */
export const RemoveResourceFromClassRequest$outboundSchema: z.ZodType<
  RemoveResourceFromClassRequest$Outbound,
  z.ZodTypeDef,
  RemoveResourceFromClassRequest
> = z.object({
  classSourcedId: z.string(),
  resourceSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveResourceFromClassRequest$ {
  /** @deprecated use `RemoveResourceFromClassRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveResourceFromClassRequest$inboundSchema;
  /** @deprecated use `RemoveResourceFromClassRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveResourceFromClassRequest$outboundSchema;
  /** @deprecated use `RemoveResourceFromClassRequest$Outbound` instead. */
  export type Outbound = RemoveResourceFromClassRequest$Outbound;
}

export function removeResourceFromClassRequestToJSON(
  removeResourceFromClassRequest: RemoveResourceFromClassRequest,
): string {
  return JSON.stringify(
    RemoveResourceFromClassRequest$outboundSchema.parse(
      removeResourceFromClassRequest,
    ),
  );
}

export function removeResourceFromClassRequestFromJSON(
  jsonString: string,
): SafeParseResult<RemoveResourceFromClassRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveResourceFromClassRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveResourceFromClassRequest' from JSON`,
  );
}
