/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateCategoryRequest = {
  /**
   * Represents a category.
   */
  category: components.Category;
};

export type CreateCategorySourcedIdPairs = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/**
 * Category successfully created
 */
export type CreateCategoryResponse = {
  sourcedIdPairs: CreateCategorySourcedIdPairs;
};

/** @internal */
export const CreateCategoryRequest$inboundSchema: z.ZodType<
  CreateCategoryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  category: components.Category$inboundSchema,
});

/** @internal */
export type CreateCategoryRequest$Outbound = {
  category: components.Category$Outbound;
};

/** @internal */
export const CreateCategoryRequest$outboundSchema: z.ZodType<
  CreateCategoryRequest$Outbound,
  z.ZodTypeDef,
  CreateCategoryRequest
> = z.object({
  category: components.Category$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCategoryRequest$ {
  /** @deprecated use `CreateCategoryRequest$inboundSchema` instead. */
  export const inboundSchema = CreateCategoryRequest$inboundSchema;
  /** @deprecated use `CreateCategoryRequest$outboundSchema` instead. */
  export const outboundSchema = CreateCategoryRequest$outboundSchema;
  /** @deprecated use `CreateCategoryRequest$Outbound` instead. */
  export type Outbound = CreateCategoryRequest$Outbound;
}

export function createCategoryRequestToJSON(
  createCategoryRequest: CreateCategoryRequest,
): string {
  return JSON.stringify(
    CreateCategoryRequest$outboundSchema.parse(createCategoryRequest),
  );
}

export function createCategoryRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateCategoryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCategoryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCategoryRequest' from JSON`,
  );
}

/** @internal */
export const CreateCategorySourcedIdPairs$inboundSchema: z.ZodType<
  CreateCategorySourcedIdPairs,
  z.ZodTypeDef,
  unknown
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/** @internal */
export type CreateCategorySourcedIdPairs$Outbound = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/** @internal */
export const CreateCategorySourcedIdPairs$outboundSchema: z.ZodType<
  CreateCategorySourcedIdPairs$Outbound,
  z.ZodTypeDef,
  CreateCategorySourcedIdPairs
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCategorySourcedIdPairs$ {
  /** @deprecated use `CreateCategorySourcedIdPairs$inboundSchema` instead. */
  export const inboundSchema = CreateCategorySourcedIdPairs$inboundSchema;
  /** @deprecated use `CreateCategorySourcedIdPairs$outboundSchema` instead. */
  export const outboundSchema = CreateCategorySourcedIdPairs$outboundSchema;
  /** @deprecated use `CreateCategorySourcedIdPairs$Outbound` instead. */
  export type Outbound = CreateCategorySourcedIdPairs$Outbound;
}

export function createCategorySourcedIdPairsToJSON(
  createCategorySourcedIdPairs: CreateCategorySourcedIdPairs,
): string {
  return JSON.stringify(
    CreateCategorySourcedIdPairs$outboundSchema.parse(
      createCategorySourcedIdPairs,
    ),
  );
}

export function createCategorySourcedIdPairsFromJSON(
  jsonString: string,
): SafeParseResult<CreateCategorySourcedIdPairs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCategorySourcedIdPairs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCategorySourcedIdPairs' from JSON`,
  );
}

/** @internal */
export const CreateCategoryResponse$inboundSchema: z.ZodType<
  CreateCategoryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedIdPairs: z.lazy(() => CreateCategorySourcedIdPairs$inboundSchema),
});

/** @internal */
export type CreateCategoryResponse$Outbound = {
  sourcedIdPairs: CreateCategorySourcedIdPairs$Outbound;
};

/** @internal */
export const CreateCategoryResponse$outboundSchema: z.ZodType<
  CreateCategoryResponse$Outbound,
  z.ZodTypeDef,
  CreateCategoryResponse
> = z.object({
  sourcedIdPairs: z.lazy(() => CreateCategorySourcedIdPairs$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCategoryResponse$ {
  /** @deprecated use `CreateCategoryResponse$inboundSchema` instead. */
  export const inboundSchema = CreateCategoryResponse$inboundSchema;
  /** @deprecated use `CreateCategoryResponse$outboundSchema` instead. */
  export const outboundSchema = CreateCategoryResponse$outboundSchema;
  /** @deprecated use `CreateCategoryResponse$Outbound` instead. */
  export type Outbound = CreateCategoryResponse$Outbound;
}

export function createCategoryResponseToJSON(
  createCategoryResponse: CreateCategoryResponse,
): string {
  return JSON.stringify(
    CreateCategoryResponse$outboundSchema.parse(createCategoryResponse),
  );
}

export function createCategoryResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateCategoryResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCategoryResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCategoryResponse' from JSON`,
  );
}
