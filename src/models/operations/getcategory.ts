/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCategoryRequest = {
  /**
   * The sourcedId of the category
   */
  sourcedId: string;
};

/**
 * Successful response with the category
 */
export type GetCategoryResponse = {
  /**
   * Represents a category.
   */
  category: components.Category;
};

/** @internal */
export const GetCategoryRequest$inboundSchema: z.ZodType<
  GetCategoryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetCategoryRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetCategoryRequest$outboundSchema: z.ZodType<
  GetCategoryRequest$Outbound,
  z.ZodTypeDef,
  GetCategoryRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCategoryRequest$ {
  /** @deprecated use `GetCategoryRequest$inboundSchema` instead. */
  export const inboundSchema = GetCategoryRequest$inboundSchema;
  /** @deprecated use `GetCategoryRequest$outboundSchema` instead. */
  export const outboundSchema = GetCategoryRequest$outboundSchema;
  /** @deprecated use `GetCategoryRequest$Outbound` instead. */
  export type Outbound = GetCategoryRequest$Outbound;
}

export function getCategoryRequestToJSON(
  getCategoryRequest: GetCategoryRequest,
): string {
  return JSON.stringify(
    GetCategoryRequest$outboundSchema.parse(getCategoryRequest),
  );
}

export function getCategoryRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCategoryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCategoryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCategoryRequest' from JSON`,
  );
}

/** @internal */
export const GetCategoryResponse$inboundSchema: z.ZodType<
  GetCategoryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  category: components.Category$inboundSchema,
});

/** @internal */
export type GetCategoryResponse$Outbound = {
  category: components.Category$Outbound;
};

/** @internal */
export const GetCategoryResponse$outboundSchema: z.ZodType<
  GetCategoryResponse$Outbound,
  z.ZodTypeDef,
  GetCategoryResponse
> = z.object({
  category: components.Category$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCategoryResponse$ {
  /** @deprecated use `GetCategoryResponse$inboundSchema` instead. */
  export const inboundSchema = GetCategoryResponse$inboundSchema;
  /** @deprecated use `GetCategoryResponse$outboundSchema` instead. */
  export const outboundSchema = GetCategoryResponse$outboundSchema;
  /** @deprecated use `GetCategoryResponse$Outbound` instead. */
  export type Outbound = GetCategoryResponse$Outbound;
}

export function getCategoryResponseToJSON(
  getCategoryResponse: GetCategoryResponse,
): string {
  return JSON.stringify(
    GetCategoryResponse$outboundSchema.parse(getCategoryResponse),
  );
}

export function getCategoryResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetCategoryResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCategoryResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCategoryResponse' from JSON`,
  );
}
