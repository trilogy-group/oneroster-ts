/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetEnrollmentsForSchoolRequest = {
  /**
   * School sourced ID
   */
  schoolSourcedId: string;
};

/**
 * Collection of enrollments successfully retrieved
 */
export type GetEnrollmentsForSchoolResponse = {
  enrollments: Array<components.Enrollment>;
};

/** @internal */
export const GetEnrollmentsForSchoolRequest$inboundSchema: z.ZodType<
  GetEnrollmentsForSchoolRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  schoolSourcedId: z.string(),
});

/** @internal */
export type GetEnrollmentsForSchoolRequest$Outbound = {
  schoolSourcedId: string;
};

/** @internal */
export const GetEnrollmentsForSchoolRequest$outboundSchema: z.ZodType<
  GetEnrollmentsForSchoolRequest$Outbound,
  z.ZodTypeDef,
  GetEnrollmentsForSchoolRequest
> = z.object({
  schoolSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEnrollmentsForSchoolRequest$ {
  /** @deprecated use `GetEnrollmentsForSchoolRequest$inboundSchema` instead. */
  export const inboundSchema = GetEnrollmentsForSchoolRequest$inboundSchema;
  /** @deprecated use `GetEnrollmentsForSchoolRequest$outboundSchema` instead. */
  export const outboundSchema = GetEnrollmentsForSchoolRequest$outboundSchema;
  /** @deprecated use `GetEnrollmentsForSchoolRequest$Outbound` instead. */
  export type Outbound = GetEnrollmentsForSchoolRequest$Outbound;
}

export function getEnrollmentsForSchoolRequestToJSON(
  getEnrollmentsForSchoolRequest: GetEnrollmentsForSchoolRequest,
): string {
  return JSON.stringify(
    GetEnrollmentsForSchoolRequest$outboundSchema.parse(
      getEnrollmentsForSchoolRequest,
    ),
  );
}

export function getEnrollmentsForSchoolRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetEnrollmentsForSchoolRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEnrollmentsForSchoolRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEnrollmentsForSchoolRequest' from JSON`,
  );
}

/** @internal */
export const GetEnrollmentsForSchoolResponse$inboundSchema: z.ZodType<
  GetEnrollmentsForSchoolResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  enrollments: z.array(components.Enrollment$inboundSchema),
});

/** @internal */
export type GetEnrollmentsForSchoolResponse$Outbound = {
  enrollments: Array<components.Enrollment$Outbound>;
};

/** @internal */
export const GetEnrollmentsForSchoolResponse$outboundSchema: z.ZodType<
  GetEnrollmentsForSchoolResponse$Outbound,
  z.ZodTypeDef,
  GetEnrollmentsForSchoolResponse
> = z.object({
  enrollments: z.array(components.Enrollment$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEnrollmentsForSchoolResponse$ {
  /** @deprecated use `GetEnrollmentsForSchoolResponse$inboundSchema` instead. */
  export const inboundSchema = GetEnrollmentsForSchoolResponse$inboundSchema;
  /** @deprecated use `GetEnrollmentsForSchoolResponse$outboundSchema` instead. */
  export const outboundSchema = GetEnrollmentsForSchoolResponse$outboundSchema;
  /** @deprecated use `GetEnrollmentsForSchoolResponse$Outbound` instead. */
  export type Outbound = GetEnrollmentsForSchoolResponse$Outbound;
}

export function getEnrollmentsForSchoolResponseToJSON(
  getEnrollmentsForSchoolResponse: GetEnrollmentsForSchoolResponse,
): string {
  return JSON.stringify(
    GetEnrollmentsForSchoolResponse$outboundSchema.parse(
      getEnrollmentsForSchoolResponse,
    ),
  );
}

export function getEnrollmentsForSchoolResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetEnrollmentsForSchoolResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEnrollmentsForSchoolResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEnrollmentsForSchoolResponse' from JSON`,
  );
}
