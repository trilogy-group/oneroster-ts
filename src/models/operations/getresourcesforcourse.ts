/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The order to sort the response by
 */
export const GetResourcesForCourseOrderBy = {
  Asc: "asc",
  Desc: "desc",
} as const;
/**
 * The order to sort the response by
 */
export type GetResourcesForCourseOrderBy = ClosedEnum<
  typeof GetResourcesForCourseOrderBy
>;

export type GetResourcesForCourseRequest = {
  /**
   * The sourcedId of the course
   */
  courseSourcedId: string;
  /**
   * Comma-separated list of fields to include in the response
   */
  fields?: string | undefined;
  /**
   * The maximum number of items to return in the paginated response
   */
  limit?: number | undefined;
  /**
   * The number of items to skip in the paginated response
   */
  offset?: number | undefined;
  /**
   * The field to sort the response by
   */
  sort?: string | undefined;
  /**
   * The order to sort the response by
   */
  orderBy?: GetResourcesForCourseOrderBy | undefined;
  /**
   * The filter to apply to the response
   */
  filter?: string | undefined;
  /**
   * The search query to apply to the response
   */
  search?: string | undefined;
};

/**
 * Successful response containing a collection of resources for the course
 */
export type GetResourcesForCourseResponseBody = {
  resources: Array<components.Resource>;
  totalCount: number;
  pageCount: number;
  pageNumber: number;
  offset: number;
  limit: number;
};

export type GetResourcesForCourseResponse = {
  result: GetResourcesForCourseResponseBody;
};

/** @internal */
export const GetResourcesForCourseOrderBy$inboundSchema: z.ZodNativeEnum<
  typeof GetResourcesForCourseOrderBy
> = z.nativeEnum(GetResourcesForCourseOrderBy);

/** @internal */
export const GetResourcesForCourseOrderBy$outboundSchema: z.ZodNativeEnum<
  typeof GetResourcesForCourseOrderBy
> = GetResourcesForCourseOrderBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesForCourseOrderBy$ {
  /** @deprecated use `GetResourcesForCourseOrderBy$inboundSchema` instead. */
  export const inboundSchema = GetResourcesForCourseOrderBy$inboundSchema;
  /** @deprecated use `GetResourcesForCourseOrderBy$outboundSchema` instead. */
  export const outboundSchema = GetResourcesForCourseOrderBy$outboundSchema;
}

/** @internal */
export const GetResourcesForCourseRequest$inboundSchema: z.ZodType<
  GetResourcesForCourseRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  courseSourcedId: z.string(),
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetResourcesForCourseOrderBy$inboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/** @internal */
export type GetResourcesForCourseRequest$Outbound = {
  courseSourcedId: string;
  fields?: string | undefined;
  limit: number;
  offset: number;
  sort?: string | undefined;
  orderBy?: string | undefined;
  filter?: string | undefined;
  search?: string | undefined;
};

/** @internal */
export const GetResourcesForCourseRequest$outboundSchema: z.ZodType<
  GetResourcesForCourseRequest$Outbound,
  z.ZodTypeDef,
  GetResourcesForCourseRequest
> = z.object({
  courseSourcedId: z.string(),
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetResourcesForCourseOrderBy$outboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesForCourseRequest$ {
  /** @deprecated use `GetResourcesForCourseRequest$inboundSchema` instead. */
  export const inboundSchema = GetResourcesForCourseRequest$inboundSchema;
  /** @deprecated use `GetResourcesForCourseRequest$outboundSchema` instead. */
  export const outboundSchema = GetResourcesForCourseRequest$outboundSchema;
  /** @deprecated use `GetResourcesForCourseRequest$Outbound` instead. */
  export type Outbound = GetResourcesForCourseRequest$Outbound;
}

export function getResourcesForCourseRequestToJSON(
  getResourcesForCourseRequest: GetResourcesForCourseRequest,
): string {
  return JSON.stringify(
    GetResourcesForCourseRequest$outboundSchema.parse(
      getResourcesForCourseRequest,
    ),
  );
}

export function getResourcesForCourseRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetResourcesForCourseRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResourcesForCourseRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResourcesForCourseRequest' from JSON`,
  );
}

/** @internal */
export const GetResourcesForCourseResponseBody$inboundSchema: z.ZodType<
  GetResourcesForCourseResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  resources: z.array(components.Resource$inboundSchema),
  totalCount: z.number(),
  pageCount: z.number(),
  pageNumber: z.number(),
  offset: z.number(),
  limit: z.number(),
});

/** @internal */
export type GetResourcesForCourseResponseBody$Outbound = {
  resources: Array<components.Resource$Outbound>;
  totalCount: number;
  pageCount: number;
  pageNumber: number;
  offset: number;
  limit: number;
};

/** @internal */
export const GetResourcesForCourseResponseBody$outboundSchema: z.ZodType<
  GetResourcesForCourseResponseBody$Outbound,
  z.ZodTypeDef,
  GetResourcesForCourseResponseBody
> = z.object({
  resources: z.array(components.Resource$outboundSchema),
  totalCount: z.number(),
  pageCount: z.number(),
  pageNumber: z.number(),
  offset: z.number(),
  limit: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesForCourseResponseBody$ {
  /** @deprecated use `GetResourcesForCourseResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetResourcesForCourseResponseBody$inboundSchema;
  /** @deprecated use `GetResourcesForCourseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetResourcesForCourseResponseBody$outboundSchema;
  /** @deprecated use `GetResourcesForCourseResponseBody$Outbound` instead. */
  export type Outbound = GetResourcesForCourseResponseBody$Outbound;
}

export function getResourcesForCourseResponseBodyToJSON(
  getResourcesForCourseResponseBody: GetResourcesForCourseResponseBody,
): string {
  return JSON.stringify(
    GetResourcesForCourseResponseBody$outboundSchema.parse(
      getResourcesForCourseResponseBody,
    ),
  );
}

export function getResourcesForCourseResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetResourcesForCourseResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResourcesForCourseResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResourcesForCourseResponseBody' from JSON`,
  );
}

/** @internal */
export const GetResourcesForCourseResponse$inboundSchema: z.ZodType<
  GetResourcesForCourseResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => GetResourcesForCourseResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type GetResourcesForCourseResponse$Outbound = {
  Result: GetResourcesForCourseResponseBody$Outbound;
};

/** @internal */
export const GetResourcesForCourseResponse$outboundSchema: z.ZodType<
  GetResourcesForCourseResponse$Outbound,
  z.ZodTypeDef,
  GetResourcesForCourseResponse
> = z.object({
  result: z.lazy(() => GetResourcesForCourseResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesForCourseResponse$ {
  /** @deprecated use `GetResourcesForCourseResponse$inboundSchema` instead. */
  export const inboundSchema = GetResourcesForCourseResponse$inboundSchema;
  /** @deprecated use `GetResourcesForCourseResponse$outboundSchema` instead. */
  export const outboundSchema = GetResourcesForCourseResponse$outboundSchema;
  /** @deprecated use `GetResourcesForCourseResponse$Outbound` instead. */
  export type Outbound = GetResourcesForCourseResponse$Outbound;
}

export function getResourcesForCourseResponseToJSON(
  getResourcesForCourseResponse: GetResourcesForCourseResponse,
): string {
  return JSON.stringify(
    GetResourcesForCourseResponse$outboundSchema.parse(
      getResourcesForCourseResponse,
    ),
  );
}

export function getResourcesForCourseResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetResourcesForCourseResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResourcesForCourseResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResourcesForCourseResponse' from JSON`,
  );
}
