/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetResourcesForCourseRequest = {
  /**
   * The sourcedId of the course
   */
  courseSourcedId: string;
};

/**
 * Successful response containing a collection of resources for the course
 */
export type GetResourcesForCourseResponse = {
  resources: Array<components.Resource>;
};

/** @internal */
export const GetResourcesForCourseRequest$inboundSchema: z.ZodType<
  GetResourcesForCourseRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  courseSourcedId: z.string(),
});

/** @internal */
export type GetResourcesForCourseRequest$Outbound = {
  courseSourcedId: string;
};

/** @internal */
export const GetResourcesForCourseRequest$outboundSchema: z.ZodType<
  GetResourcesForCourseRequest$Outbound,
  z.ZodTypeDef,
  GetResourcesForCourseRequest
> = z.object({
  courseSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesForCourseRequest$ {
  /** @deprecated use `GetResourcesForCourseRequest$inboundSchema` instead. */
  export const inboundSchema = GetResourcesForCourseRequest$inboundSchema;
  /** @deprecated use `GetResourcesForCourseRequest$outboundSchema` instead. */
  export const outboundSchema = GetResourcesForCourseRequest$outboundSchema;
  /** @deprecated use `GetResourcesForCourseRequest$Outbound` instead. */
  export type Outbound = GetResourcesForCourseRequest$Outbound;
}

export function getResourcesForCourseRequestToJSON(
  getResourcesForCourseRequest: GetResourcesForCourseRequest,
): string {
  return JSON.stringify(
    GetResourcesForCourseRequest$outboundSchema.parse(
      getResourcesForCourseRequest,
    ),
  );
}

export function getResourcesForCourseRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetResourcesForCourseRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResourcesForCourseRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResourcesForCourseRequest' from JSON`,
  );
}

/** @internal */
export const GetResourcesForCourseResponse$inboundSchema: z.ZodType<
  GetResourcesForCourseResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resources: z.array(components.Resource$inboundSchema),
});

/** @internal */
export type GetResourcesForCourseResponse$Outbound = {
  resources: Array<components.Resource$Outbound>;
};

/** @internal */
export const GetResourcesForCourseResponse$outboundSchema: z.ZodType<
  GetResourcesForCourseResponse$Outbound,
  z.ZodTypeDef,
  GetResourcesForCourseResponse
> = z.object({
  resources: z.array(components.Resource$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResourcesForCourseResponse$ {
  /** @deprecated use `GetResourcesForCourseResponse$inboundSchema` instead. */
  export const inboundSchema = GetResourcesForCourseResponse$inboundSchema;
  /** @deprecated use `GetResourcesForCourseResponse$outboundSchema` instead. */
  export const outboundSchema = GetResourcesForCourseResponse$outboundSchema;
  /** @deprecated use `GetResourcesForCourseResponse$Outbound` instead. */
  export type Outbound = GetResourcesForCourseResponse$Outbound;
}

export function getResourcesForCourseResponseToJSON(
  getResourcesForCourseResponse: GetResourcesForCourseResponse,
): string {
  return JSON.stringify(
    GetResourcesForCourseResponse$outboundSchema.parse(
      getResourcesForCourseResponse,
    ),
  );
}

export function getResourcesForCourseResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetResourcesForCourseResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResourcesForCourseResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResourcesForCourseResponse' from JSON`,
  );
}
