/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetClassRequest = {
  /**
   * Class sourcedId
   */
  sourcedId: string;
};

/**
 * Successful response with the requested class
 */
export type GetClassResponse = {
  /**
   * Represents a class.
   */
  class: components.Class;
};

/** @internal */
export const GetClassRequest$inboundSchema: z.ZodType<
  GetClassRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetClassRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetClassRequest$outboundSchema: z.ZodType<
  GetClassRequest$Outbound,
  z.ZodTypeDef,
  GetClassRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassRequest$ {
  /** @deprecated use `GetClassRequest$inboundSchema` instead. */
  export const inboundSchema = GetClassRequest$inboundSchema;
  /** @deprecated use `GetClassRequest$outboundSchema` instead. */
  export const outboundSchema = GetClassRequest$outboundSchema;
  /** @deprecated use `GetClassRequest$Outbound` instead. */
  export type Outbound = GetClassRequest$Outbound;
}

export function getClassRequestToJSON(
  getClassRequest: GetClassRequest,
): string {
  return JSON.stringify(GetClassRequest$outboundSchema.parse(getClassRequest));
}

export function getClassRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetClassRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassRequest' from JSON`,
  );
}

/** @internal */
export const GetClassResponse$inboundSchema: z.ZodType<
  GetClassResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  class: components.Class$inboundSchema,
});

/** @internal */
export type GetClassResponse$Outbound = {
  class: components.Class$Outbound;
};

/** @internal */
export const GetClassResponse$outboundSchema: z.ZodType<
  GetClassResponse$Outbound,
  z.ZodTypeDef,
  GetClassResponse
> = z.object({
  class: components.Class$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassResponse$ {
  /** @deprecated use `GetClassResponse$inboundSchema` instead. */
  export const inboundSchema = GetClassResponse$inboundSchema;
  /** @deprecated use `GetClassResponse$outboundSchema` instead. */
  export const outboundSchema = GetClassResponse$outboundSchema;
  /** @deprecated use `GetClassResponse$Outbound` instead. */
  export type Outbound = GetClassResponse$Outbound;
}

export function getClassResponseToJSON(
  getClassResponse: GetClassResponse,
): string {
  return JSON.stringify(
    GetClassResponse$outboundSchema.parse(getClassResponse),
  );
}

export function getClassResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetClassResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassResponse' from JSON`,
  );
}
