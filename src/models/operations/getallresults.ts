/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Successful response containing a collection of results
 */
export type GetAllResultsResponse = {
  results: Array<components.Result>;
};

/** @internal */
export const GetAllResultsResponse$inboundSchema: z.ZodType<
  GetAllResultsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  results: z.array(components.Result$inboundSchema),
});

/** @internal */
export type GetAllResultsResponse$Outbound = {
  results: Array<components.Result$Outbound>;
};

/** @internal */
export const GetAllResultsResponse$outboundSchema: z.ZodType<
  GetAllResultsResponse$Outbound,
  z.ZodTypeDef,
  GetAllResultsResponse
> = z.object({
  results: z.array(components.Result$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllResultsResponse$ {
  /** @deprecated use `GetAllResultsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAllResultsResponse$inboundSchema;
  /** @deprecated use `GetAllResultsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAllResultsResponse$outboundSchema;
  /** @deprecated use `GetAllResultsResponse$Outbound` instead. */
  export type Outbound = GetAllResultsResponse$Outbound;
}

export function getAllResultsResponseToJSON(
  getAllResultsResponse: GetAllResultsResponse,
): string {
  return JSON.stringify(
    GetAllResultsResponse$outboundSchema.parse(getAllResultsResponse),
  );
}

export function getAllResultsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAllResultsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllResultsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllResultsResponse' from JSON`,
  );
}
