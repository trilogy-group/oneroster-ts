/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetSchoolRequest = {
  /**
   * School sourced ID
   */
  sourcedId: string;
};

/**
 * School successfully retrieved
 */
export type GetSchoolResponse = {
  /**
   * Represents an organization.
   */
  org: components.Org;
};

/** @internal */
export const GetSchoolRequest$inboundSchema: z.ZodType<
  GetSchoolRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetSchoolRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetSchoolRequest$outboundSchema: z.ZodType<
  GetSchoolRequest$Outbound,
  z.ZodTypeDef,
  GetSchoolRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSchoolRequest$ {
  /** @deprecated use `GetSchoolRequest$inboundSchema` instead. */
  export const inboundSchema = GetSchoolRequest$inboundSchema;
  /** @deprecated use `GetSchoolRequest$outboundSchema` instead. */
  export const outboundSchema = GetSchoolRequest$outboundSchema;
  /** @deprecated use `GetSchoolRequest$Outbound` instead. */
  export type Outbound = GetSchoolRequest$Outbound;
}

export function getSchoolRequestToJSON(
  getSchoolRequest: GetSchoolRequest,
): string {
  return JSON.stringify(
    GetSchoolRequest$outboundSchema.parse(getSchoolRequest),
  );
}

export function getSchoolRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSchoolRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSchoolRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSchoolRequest' from JSON`,
  );
}

/** @internal */
export const GetSchoolResponse$inboundSchema: z.ZodType<
  GetSchoolResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  org: components.Org$inboundSchema,
});

/** @internal */
export type GetSchoolResponse$Outbound = {
  org: components.Org$Outbound;
};

/** @internal */
export const GetSchoolResponse$outboundSchema: z.ZodType<
  GetSchoolResponse$Outbound,
  z.ZodTypeDef,
  GetSchoolResponse
> = z.object({
  org: components.Org$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSchoolResponse$ {
  /** @deprecated use `GetSchoolResponse$inboundSchema` instead. */
  export const inboundSchema = GetSchoolResponse$inboundSchema;
  /** @deprecated use `GetSchoolResponse$outboundSchema` instead. */
  export const outboundSchema = GetSchoolResponse$outboundSchema;
  /** @deprecated use `GetSchoolResponse$Outbound` instead. */
  export type Outbound = GetSchoolResponse$Outbound;
}

export function getSchoolResponseToJSON(
  getSchoolResponse: GetSchoolResponse,
): string {
  return JSON.stringify(
    GetSchoolResponse$outboundSchema.parse(getSchoolResponse),
  );
}

export function getSchoolResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetSchoolResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSchoolResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSchoolResponse' from JSON`,
  );
}
