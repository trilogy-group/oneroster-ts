/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateAssessmentResultRequest = {
  /**
   * Represents an assessment result.
   */
  assessmentResult: components.AssessmentResult;
};

export type CreateAssessmentResultSourcedIdPairs = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/**
 * Assessment result successfully created
 */
export type CreateAssessmentResultResponse = {
  sourcedIdPairs: CreateAssessmentResultSourcedIdPairs;
};

/** @internal */
export const CreateAssessmentResultRequest$inboundSchema: z.ZodType<
  CreateAssessmentResultRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  assessmentResult: components.AssessmentResult$inboundSchema,
});

/** @internal */
export type CreateAssessmentResultRequest$Outbound = {
  assessmentResult: components.AssessmentResult$Outbound;
};

/** @internal */
export const CreateAssessmentResultRequest$outboundSchema: z.ZodType<
  CreateAssessmentResultRequest$Outbound,
  z.ZodTypeDef,
  CreateAssessmentResultRequest
> = z.object({
  assessmentResult: components.AssessmentResult$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAssessmentResultRequest$ {
  /** @deprecated use `CreateAssessmentResultRequest$inboundSchema` instead. */
  export const inboundSchema = CreateAssessmentResultRequest$inboundSchema;
  /** @deprecated use `CreateAssessmentResultRequest$outboundSchema` instead. */
  export const outboundSchema = CreateAssessmentResultRequest$outboundSchema;
  /** @deprecated use `CreateAssessmentResultRequest$Outbound` instead. */
  export type Outbound = CreateAssessmentResultRequest$Outbound;
}

export function createAssessmentResultRequestToJSON(
  createAssessmentResultRequest: CreateAssessmentResultRequest,
): string {
  return JSON.stringify(
    CreateAssessmentResultRequest$outboundSchema.parse(
      createAssessmentResultRequest,
    ),
  );
}

export function createAssessmentResultRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateAssessmentResultRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAssessmentResultRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAssessmentResultRequest' from JSON`,
  );
}

/** @internal */
export const CreateAssessmentResultSourcedIdPairs$inboundSchema: z.ZodType<
  CreateAssessmentResultSourcedIdPairs,
  z.ZodTypeDef,
  unknown
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/** @internal */
export type CreateAssessmentResultSourcedIdPairs$Outbound = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/** @internal */
export const CreateAssessmentResultSourcedIdPairs$outboundSchema: z.ZodType<
  CreateAssessmentResultSourcedIdPairs$Outbound,
  z.ZodTypeDef,
  CreateAssessmentResultSourcedIdPairs
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAssessmentResultSourcedIdPairs$ {
  /** @deprecated use `CreateAssessmentResultSourcedIdPairs$inboundSchema` instead. */
  export const inboundSchema =
    CreateAssessmentResultSourcedIdPairs$inboundSchema;
  /** @deprecated use `CreateAssessmentResultSourcedIdPairs$outboundSchema` instead. */
  export const outboundSchema =
    CreateAssessmentResultSourcedIdPairs$outboundSchema;
  /** @deprecated use `CreateAssessmentResultSourcedIdPairs$Outbound` instead. */
  export type Outbound = CreateAssessmentResultSourcedIdPairs$Outbound;
}

export function createAssessmentResultSourcedIdPairsToJSON(
  createAssessmentResultSourcedIdPairs: CreateAssessmentResultSourcedIdPairs,
): string {
  return JSON.stringify(
    CreateAssessmentResultSourcedIdPairs$outboundSchema.parse(
      createAssessmentResultSourcedIdPairs,
    ),
  );
}

export function createAssessmentResultSourcedIdPairsFromJSON(
  jsonString: string,
): SafeParseResult<CreateAssessmentResultSourcedIdPairs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateAssessmentResultSourcedIdPairs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAssessmentResultSourcedIdPairs' from JSON`,
  );
}

/** @internal */
export const CreateAssessmentResultResponse$inboundSchema: z.ZodType<
  CreateAssessmentResultResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedIdPairs: z.lazy(() =>
    CreateAssessmentResultSourcedIdPairs$inboundSchema
  ),
});

/** @internal */
export type CreateAssessmentResultResponse$Outbound = {
  sourcedIdPairs: CreateAssessmentResultSourcedIdPairs$Outbound;
};

/** @internal */
export const CreateAssessmentResultResponse$outboundSchema: z.ZodType<
  CreateAssessmentResultResponse$Outbound,
  z.ZodTypeDef,
  CreateAssessmentResultResponse
> = z.object({
  sourcedIdPairs: z.lazy(() =>
    CreateAssessmentResultSourcedIdPairs$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAssessmentResultResponse$ {
  /** @deprecated use `CreateAssessmentResultResponse$inboundSchema` instead. */
  export const inboundSchema = CreateAssessmentResultResponse$inboundSchema;
  /** @deprecated use `CreateAssessmentResultResponse$outboundSchema` instead. */
  export const outboundSchema = CreateAssessmentResultResponse$outboundSchema;
  /** @deprecated use `CreateAssessmentResultResponse$Outbound` instead. */
  export type Outbound = CreateAssessmentResultResponse$Outbound;
}

export function createAssessmentResultResponseToJSON(
  createAssessmentResultResponse: CreateAssessmentResultResponse,
): string {
  return JSON.stringify(
    CreateAssessmentResultResponse$outboundSchema.parse(
      createAssessmentResultResponse,
    ),
  );
}

export function createAssessmentResultResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateAssessmentResultResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAssessmentResultResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAssessmentResultResponse' from JSON`,
  );
}
