/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetEnrollmentRequest = {
  /**
   * The unique identifier for the enrollment
   */
  sourcedId: string;
};

/**
 * Successful response
 */
export type GetEnrollmentResponse = {
  /**
   * Represents an enrollment.
   */
  enrollment: components.Enrollment;
};

/** @internal */
export const GetEnrollmentRequest$inboundSchema: z.ZodType<
  GetEnrollmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetEnrollmentRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetEnrollmentRequest$outboundSchema: z.ZodType<
  GetEnrollmentRequest$Outbound,
  z.ZodTypeDef,
  GetEnrollmentRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEnrollmentRequest$ {
  /** @deprecated use `GetEnrollmentRequest$inboundSchema` instead. */
  export const inboundSchema = GetEnrollmentRequest$inboundSchema;
  /** @deprecated use `GetEnrollmentRequest$outboundSchema` instead. */
  export const outboundSchema = GetEnrollmentRequest$outboundSchema;
  /** @deprecated use `GetEnrollmentRequest$Outbound` instead. */
  export type Outbound = GetEnrollmentRequest$Outbound;
}

export function getEnrollmentRequestToJSON(
  getEnrollmentRequest: GetEnrollmentRequest,
): string {
  return JSON.stringify(
    GetEnrollmentRequest$outboundSchema.parse(getEnrollmentRequest),
  );
}

export function getEnrollmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetEnrollmentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEnrollmentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEnrollmentRequest' from JSON`,
  );
}

/** @internal */
export const GetEnrollmentResponse$inboundSchema: z.ZodType<
  GetEnrollmentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  enrollment: components.Enrollment$inboundSchema,
});

/** @internal */
export type GetEnrollmentResponse$Outbound = {
  enrollment: components.Enrollment$Outbound;
};

/** @internal */
export const GetEnrollmentResponse$outboundSchema: z.ZodType<
  GetEnrollmentResponse$Outbound,
  z.ZodTypeDef,
  GetEnrollmentResponse
> = z.object({
  enrollment: components.Enrollment$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEnrollmentResponse$ {
  /** @deprecated use `GetEnrollmentResponse$inboundSchema` instead. */
  export const inboundSchema = GetEnrollmentResponse$inboundSchema;
  /** @deprecated use `GetEnrollmentResponse$outboundSchema` instead. */
  export const outboundSchema = GetEnrollmentResponse$outboundSchema;
  /** @deprecated use `GetEnrollmentResponse$Outbound` instead. */
  export type Outbound = GetEnrollmentResponse$Outbound;
}

export function getEnrollmentResponseToJSON(
  getEnrollmentResponse: GetEnrollmentResponse,
): string {
  return JSON.stringify(
    GetEnrollmentResponse$outboundSchema.parse(getEnrollmentResponse),
  );
}

export function getEnrollmentResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetEnrollmentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEnrollmentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEnrollmentResponse' from JSON`,
  );
}
