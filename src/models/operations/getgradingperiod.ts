/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGradingPeriodRequest = {
  /**
   * The sourcedId of the grading period to retrieve
   */
  sourcedId: string;
};

/**
 * Success
 */
export type GetGradingPeriodResponse = {
  /**
   * Represents an academic session.
   */
  gradingPeriod: components.AcademicSession;
};

/** @internal */
export const GetGradingPeriodRequest$inboundSchema: z.ZodType<
  GetGradingPeriodRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetGradingPeriodRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetGradingPeriodRequest$outboundSchema: z.ZodType<
  GetGradingPeriodRequest$Outbound,
  z.ZodTypeDef,
  GetGradingPeriodRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGradingPeriodRequest$ {
  /** @deprecated use `GetGradingPeriodRequest$inboundSchema` instead. */
  export const inboundSchema = GetGradingPeriodRequest$inboundSchema;
  /** @deprecated use `GetGradingPeriodRequest$outboundSchema` instead. */
  export const outboundSchema = GetGradingPeriodRequest$outboundSchema;
  /** @deprecated use `GetGradingPeriodRequest$Outbound` instead. */
  export type Outbound = GetGradingPeriodRequest$Outbound;
}

export function getGradingPeriodRequestToJSON(
  getGradingPeriodRequest: GetGradingPeriodRequest,
): string {
  return JSON.stringify(
    GetGradingPeriodRequest$outboundSchema.parse(getGradingPeriodRequest),
  );
}

export function getGradingPeriodRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGradingPeriodRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGradingPeriodRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGradingPeriodRequest' from JSON`,
  );
}

/** @internal */
export const GetGradingPeriodResponse$inboundSchema: z.ZodType<
  GetGradingPeriodResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  gradingPeriod: components.AcademicSession$inboundSchema,
});

/** @internal */
export type GetGradingPeriodResponse$Outbound = {
  gradingPeriod: components.AcademicSession$Outbound;
};

/** @internal */
export const GetGradingPeriodResponse$outboundSchema: z.ZodType<
  GetGradingPeriodResponse$Outbound,
  z.ZodTypeDef,
  GetGradingPeriodResponse
> = z.object({
  gradingPeriod: components.AcademicSession$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGradingPeriodResponse$ {
  /** @deprecated use `GetGradingPeriodResponse$inboundSchema` instead. */
  export const inboundSchema = GetGradingPeriodResponse$inboundSchema;
  /** @deprecated use `GetGradingPeriodResponse$outboundSchema` instead. */
  export const outboundSchema = GetGradingPeriodResponse$outboundSchema;
  /** @deprecated use `GetGradingPeriodResponse$Outbound` instead. */
  export type Outbound = GetGradingPeriodResponse$Outbound;
}

export function getGradingPeriodResponseToJSON(
  getGradingPeriodResponse: GetGradingPeriodResponse,
): string {
  return JSON.stringify(
    GetGradingPeriodResponse$outboundSchema.parse(getGradingPeriodResponse),
  );
}

export function getGradingPeriodResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetGradingPeriodResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGradingPeriodResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGradingPeriodResponse' from JSON`,
  );
}
