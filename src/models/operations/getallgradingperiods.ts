/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Success
 */
export type GetAllGradingPeriodsResponse = {
  gradingPeriods: Array<components.AcademicSession>;
};

/** @internal */
export const GetAllGradingPeriodsResponse$inboundSchema: z.ZodType<
  GetAllGradingPeriodsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  gradingPeriods: z.array(components.AcademicSession$inboundSchema),
});

/** @internal */
export type GetAllGradingPeriodsResponse$Outbound = {
  gradingPeriods: Array<components.AcademicSession$Outbound>;
};

/** @internal */
export const GetAllGradingPeriodsResponse$outboundSchema: z.ZodType<
  GetAllGradingPeriodsResponse$Outbound,
  z.ZodTypeDef,
  GetAllGradingPeriodsResponse
> = z.object({
  gradingPeriods: z.array(components.AcademicSession$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllGradingPeriodsResponse$ {
  /** @deprecated use `GetAllGradingPeriodsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAllGradingPeriodsResponse$inboundSchema;
  /** @deprecated use `GetAllGradingPeriodsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAllGradingPeriodsResponse$outboundSchema;
  /** @deprecated use `GetAllGradingPeriodsResponse$Outbound` instead. */
  export type Outbound = GetAllGradingPeriodsResponse$Outbound;
}

export function getAllGradingPeriodsResponseToJSON(
  getAllGradingPeriodsResponse: GetAllGradingPeriodsResponse,
): string {
  return JSON.stringify(
    GetAllGradingPeriodsResponse$outboundSchema.parse(
      getAllGradingPeriodsResponse,
    ),
  );
}

export function getAllGradingPeriodsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAllGradingPeriodsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllGradingPeriodsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllGradingPeriodsResponse' from JSON`,
  );
}
