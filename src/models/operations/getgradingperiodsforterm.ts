/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The order to sort the response by
 */
export const GetGradingPeriodsForTermOrderBy = {
  Asc: "asc",
  Desc: "desc",
} as const;
/**
 * The order to sort the response by
 */
export type GetGradingPeriodsForTermOrderBy = ClosedEnum<
  typeof GetGradingPeriodsForTermOrderBy
>;

export type GetGradingPeriodsForTermRequest = {
  /**
   * The sourcedId of the term
   */
  termSourcedId: string;
  /**
   * Comma-separated list of fields to include in the response
   */
  fields?: string | undefined;
  /**
   * The maximum number of items to return in the paginated response
   */
  limit?: number | undefined;
  /**
   * The number of items to skip in the paginated response
   */
  offset?: number | undefined;
  /**
   * The field to sort the response by
   */
  sort?: string | undefined;
  /**
   * The order to sort the response by
   */
  orderBy?: GetGradingPeriodsForTermOrderBy | undefined;
  /**
   * The filter to apply to the response
   */
  filter?: string | undefined;
  /**
   * The search query to apply to the response
   */
  search?: string | undefined;
};

/**
 * Successful response containing a collection of grading periods for the term
 */
export type GetGradingPeriodsForTermResponseBody = {
  gradingPeriods: Array<components.AcademicSession>;
  totalCount: number;
  pageCount: number;
  pageNumber: number;
  offset: number;
  limit: number;
};

export type GetGradingPeriodsForTermResponse = {
  result: GetGradingPeriodsForTermResponseBody;
};

/** @internal */
export const GetGradingPeriodsForTermOrderBy$inboundSchema: z.ZodNativeEnum<
  typeof GetGradingPeriodsForTermOrderBy
> = z.nativeEnum(GetGradingPeriodsForTermOrderBy);

/** @internal */
export const GetGradingPeriodsForTermOrderBy$outboundSchema: z.ZodNativeEnum<
  typeof GetGradingPeriodsForTermOrderBy
> = GetGradingPeriodsForTermOrderBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGradingPeriodsForTermOrderBy$ {
  /** @deprecated use `GetGradingPeriodsForTermOrderBy$inboundSchema` instead. */
  export const inboundSchema = GetGradingPeriodsForTermOrderBy$inboundSchema;
  /** @deprecated use `GetGradingPeriodsForTermOrderBy$outboundSchema` instead. */
  export const outboundSchema = GetGradingPeriodsForTermOrderBy$outboundSchema;
}

/** @internal */
export const GetGradingPeriodsForTermRequest$inboundSchema: z.ZodType<
  GetGradingPeriodsForTermRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  termSourcedId: z.string(),
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetGradingPeriodsForTermOrderBy$inboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/** @internal */
export type GetGradingPeriodsForTermRequest$Outbound = {
  termSourcedId: string;
  fields?: string | undefined;
  limit: number;
  offset: number;
  sort?: string | undefined;
  orderBy?: string | undefined;
  filter?: string | undefined;
  search?: string | undefined;
};

/** @internal */
export const GetGradingPeriodsForTermRequest$outboundSchema: z.ZodType<
  GetGradingPeriodsForTermRequest$Outbound,
  z.ZodTypeDef,
  GetGradingPeriodsForTermRequest
> = z.object({
  termSourcedId: z.string(),
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetGradingPeriodsForTermOrderBy$outboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGradingPeriodsForTermRequest$ {
  /** @deprecated use `GetGradingPeriodsForTermRequest$inboundSchema` instead. */
  export const inboundSchema = GetGradingPeriodsForTermRequest$inboundSchema;
  /** @deprecated use `GetGradingPeriodsForTermRequest$outboundSchema` instead. */
  export const outboundSchema = GetGradingPeriodsForTermRequest$outboundSchema;
  /** @deprecated use `GetGradingPeriodsForTermRequest$Outbound` instead. */
  export type Outbound = GetGradingPeriodsForTermRequest$Outbound;
}

export function getGradingPeriodsForTermRequestToJSON(
  getGradingPeriodsForTermRequest: GetGradingPeriodsForTermRequest,
): string {
  return JSON.stringify(
    GetGradingPeriodsForTermRequest$outboundSchema.parse(
      getGradingPeriodsForTermRequest,
    ),
  );
}

export function getGradingPeriodsForTermRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGradingPeriodsForTermRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGradingPeriodsForTermRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGradingPeriodsForTermRequest' from JSON`,
  );
}

/** @internal */
export const GetGradingPeriodsForTermResponseBody$inboundSchema: z.ZodType<
  GetGradingPeriodsForTermResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  gradingPeriods: z.array(components.AcademicSession$inboundSchema),
  totalCount: z.number(),
  pageCount: z.number(),
  pageNumber: z.number(),
  offset: z.number(),
  limit: z.number(),
});

/** @internal */
export type GetGradingPeriodsForTermResponseBody$Outbound = {
  gradingPeriods: Array<components.AcademicSession$Outbound>;
  totalCount: number;
  pageCount: number;
  pageNumber: number;
  offset: number;
  limit: number;
};

/** @internal */
export const GetGradingPeriodsForTermResponseBody$outboundSchema: z.ZodType<
  GetGradingPeriodsForTermResponseBody$Outbound,
  z.ZodTypeDef,
  GetGradingPeriodsForTermResponseBody
> = z.object({
  gradingPeriods: z.array(components.AcademicSession$outboundSchema),
  totalCount: z.number(),
  pageCount: z.number(),
  pageNumber: z.number(),
  offset: z.number(),
  limit: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGradingPeriodsForTermResponseBody$ {
  /** @deprecated use `GetGradingPeriodsForTermResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetGradingPeriodsForTermResponseBody$inboundSchema;
  /** @deprecated use `GetGradingPeriodsForTermResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetGradingPeriodsForTermResponseBody$outboundSchema;
  /** @deprecated use `GetGradingPeriodsForTermResponseBody$Outbound` instead. */
  export type Outbound = GetGradingPeriodsForTermResponseBody$Outbound;
}

export function getGradingPeriodsForTermResponseBodyToJSON(
  getGradingPeriodsForTermResponseBody: GetGradingPeriodsForTermResponseBody,
): string {
  return JSON.stringify(
    GetGradingPeriodsForTermResponseBody$outboundSchema.parse(
      getGradingPeriodsForTermResponseBody,
    ),
  );
}

export function getGradingPeriodsForTermResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetGradingPeriodsForTermResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetGradingPeriodsForTermResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGradingPeriodsForTermResponseBody' from JSON`,
  );
}

/** @internal */
export const GetGradingPeriodsForTermResponse$inboundSchema: z.ZodType<
  GetGradingPeriodsForTermResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => GetGradingPeriodsForTermResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type GetGradingPeriodsForTermResponse$Outbound = {
  Result: GetGradingPeriodsForTermResponseBody$Outbound;
};

/** @internal */
export const GetGradingPeriodsForTermResponse$outboundSchema: z.ZodType<
  GetGradingPeriodsForTermResponse$Outbound,
  z.ZodTypeDef,
  GetGradingPeriodsForTermResponse
> = z.object({
  result: z.lazy(() => GetGradingPeriodsForTermResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGradingPeriodsForTermResponse$ {
  /** @deprecated use `GetGradingPeriodsForTermResponse$inboundSchema` instead. */
  export const inboundSchema = GetGradingPeriodsForTermResponse$inboundSchema;
  /** @deprecated use `GetGradingPeriodsForTermResponse$outboundSchema` instead. */
  export const outboundSchema = GetGradingPeriodsForTermResponse$outboundSchema;
  /** @deprecated use `GetGradingPeriodsForTermResponse$Outbound` instead. */
  export type Outbound = GetGradingPeriodsForTermResponse$Outbound;
}

export function getGradingPeriodsForTermResponseToJSON(
  getGradingPeriodsForTermResponse: GetGradingPeriodsForTermResponse,
): string {
  return JSON.stringify(
    GetGradingPeriodsForTermResponse$outboundSchema.parse(
      getGradingPeriodsForTermResponse,
    ),
  );
}

export function getGradingPeriodsForTermResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetGradingPeriodsForTermResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGradingPeriodsForTermResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGradingPeriodsForTermResponse' from JSON`,
  );
}
