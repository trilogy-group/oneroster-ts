/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetDemographicsRequest = {
  /**
   * The unique identifier for the demographics record
   */
  sourcedId: string;
};

/**
 * Demographics record retrieved successfully
 */
export type GetDemographicsResponse = {
  /**
   * Represents a student's demographics information.
   */
  demographics: components.Demographics;
};

/** @internal */
export const GetDemographicsRequest$inboundSchema: z.ZodType<
  GetDemographicsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetDemographicsRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetDemographicsRequest$outboundSchema: z.ZodType<
  GetDemographicsRequest$Outbound,
  z.ZodTypeDef,
  GetDemographicsRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDemographicsRequest$ {
  /** @deprecated use `GetDemographicsRequest$inboundSchema` instead. */
  export const inboundSchema = GetDemographicsRequest$inboundSchema;
  /** @deprecated use `GetDemographicsRequest$outboundSchema` instead. */
  export const outboundSchema = GetDemographicsRequest$outboundSchema;
  /** @deprecated use `GetDemographicsRequest$Outbound` instead. */
  export type Outbound = GetDemographicsRequest$Outbound;
}

export function getDemographicsRequestToJSON(
  getDemographicsRequest: GetDemographicsRequest,
): string {
  return JSON.stringify(
    GetDemographicsRequest$outboundSchema.parse(getDemographicsRequest),
  );
}

export function getDemographicsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetDemographicsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetDemographicsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDemographicsRequest' from JSON`,
  );
}

/** @internal */
export const GetDemographicsResponse$inboundSchema: z.ZodType<
  GetDemographicsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  demographics: components.Demographics$inboundSchema,
});

/** @internal */
export type GetDemographicsResponse$Outbound = {
  demographics: components.Demographics$Outbound;
};

/** @internal */
export const GetDemographicsResponse$outboundSchema: z.ZodType<
  GetDemographicsResponse$Outbound,
  z.ZodTypeDef,
  GetDemographicsResponse
> = z.object({
  demographics: components.Demographics$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDemographicsResponse$ {
  /** @deprecated use `GetDemographicsResponse$inboundSchema` instead. */
  export const inboundSchema = GetDemographicsResponse$inboundSchema;
  /** @deprecated use `GetDemographicsResponse$outboundSchema` instead. */
  export const outboundSchema = GetDemographicsResponse$outboundSchema;
  /** @deprecated use `GetDemographicsResponse$Outbound` instead. */
  export type Outbound = GetDemographicsResponse$Outbound;
}

export function getDemographicsResponseToJSON(
  getDemographicsResponse: GetDemographicsResponse,
): string {
  return JSON.stringify(
    GetDemographicsResponse$outboundSchema.parse(getDemographicsResponse),
  );
}

export function getDemographicsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetDemographicsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetDemographicsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDemographicsResponse' from JSON`,
  );
}
