/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteSchoolRequest = {
  /**
   * School sourced ID
   */
  sourcedId: string;
};

/** @internal */
export const DeleteSchoolRequest$inboundSchema: z.ZodType<
  DeleteSchoolRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type DeleteSchoolRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const DeleteSchoolRequest$outboundSchema: z.ZodType<
  DeleteSchoolRequest$Outbound,
  z.ZodTypeDef,
  DeleteSchoolRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSchoolRequest$ {
  /** @deprecated use `DeleteSchoolRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteSchoolRequest$inboundSchema;
  /** @deprecated use `DeleteSchoolRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteSchoolRequest$outboundSchema;
  /** @deprecated use `DeleteSchoolRequest$Outbound` instead. */
  export type Outbound = DeleteSchoolRequest$Outbound;
}

export function deleteSchoolRequestToJSON(
  deleteSchoolRequest: DeleteSchoolRequest,
): string {
  return JSON.stringify(
    DeleteSchoolRequest$outboundSchema.parse(deleteSchoolRequest),
  );
}

export function deleteSchoolRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteSchoolRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteSchoolRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteSchoolRequest' from JSON`,
  );
}
