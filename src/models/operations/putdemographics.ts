/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PutDemographicsStatus = {
  Active: "active",
  Tobedeleted: "tobedeleted",
} as const;
export type PutDemographicsStatus = ClosedEnum<typeof PutDemographicsStatus>;

export const PutDemographicsSex = {
  Male: "male",
  Female: "female",
} as const;
export type PutDemographicsSex = ClosedEnum<typeof PutDemographicsSex>;

export const PutDemographicsAmericanIndianOrAlaskaNative = {
  True: "true",
  False: "false",
} as const;
export type PutDemographicsAmericanIndianOrAlaskaNative = ClosedEnum<
  typeof PutDemographicsAmericanIndianOrAlaskaNative
>;

export const PutDemographicsAsian = {
  True: "true",
  False: "false",
} as const;
export type PutDemographicsAsian = ClosedEnum<typeof PutDemographicsAsian>;

export const PutDemographicsBlackOrAfricanAmerican = {
  True: "true",
  False: "false",
} as const;
export type PutDemographicsBlackOrAfricanAmerican = ClosedEnum<
  typeof PutDemographicsBlackOrAfricanAmerican
>;

export const PutDemographicsNativeHawaiianOrOtherPacificIslander = {
  True: "true",
  False: "false",
} as const;
export type PutDemographicsNativeHawaiianOrOtherPacificIslander = ClosedEnum<
  typeof PutDemographicsNativeHawaiianOrOtherPacificIslander
>;

export const PutDemographicsWhite = {
  True: "true",
  False: "false",
} as const;
export type PutDemographicsWhite = ClosedEnum<typeof PutDemographicsWhite>;

export const PutDemographicsDemographicRaceTwoOrMoreRaces = {
  True: "true",
  False: "false",
} as const;
export type PutDemographicsDemographicRaceTwoOrMoreRaces = ClosedEnum<
  typeof PutDemographicsDemographicRaceTwoOrMoreRaces
>;

export const PutDemographicsHispanicOrLatinoEthnicity = {
  True: "true",
  False: "false",
} as const;
export type PutDemographicsHispanicOrLatinoEthnicity = ClosedEnum<
  typeof PutDemographicsHispanicOrLatinoEthnicity
>;

export type PutDemographicsDemographics = {
  sourcedId: string;
  status?: PutDemographicsStatus | undefined;
  metadata?: { [k: string]: any } | undefined;
  birthDate?: string | null | undefined;
  sex?: PutDemographicsSex | null | undefined;
  americanIndianOrAlaskaNative?:
    | PutDemographicsAmericanIndianOrAlaskaNative
    | null
    | undefined;
  asian?: PutDemographicsAsian | null | undefined;
  blackOrAfricanAmerican?:
    | PutDemographicsBlackOrAfricanAmerican
    | null
    | undefined;
  nativeHawaiianOrOtherPacificIslander?:
    | PutDemographicsNativeHawaiianOrOtherPacificIslander
    | null
    | undefined;
  white?: PutDemographicsWhite | null | undefined;
  demographicRaceTwoOrMoreRaces?:
    | PutDemographicsDemographicRaceTwoOrMoreRaces
    | null
    | undefined;
  hispanicOrLatinoEthnicity?:
    | PutDemographicsHispanicOrLatinoEthnicity
    | null
    | undefined;
  countryOfBirthCode?: string | null | undefined;
  stateOfBirthAbbreviation?: string | null | undefined;
  cityOfBirth?: string | null | undefined;
  publicSchoolResidenceStatus?: string | null | undefined;
};

export type PutDemographicsRequestBody = {
  demographics: PutDemographicsDemographics;
};

export type PutDemographicsRequest = {
  /**
   * The unique identifier for the demographics record to update
   */
  sourcedId: string;
  requestBody?: PutDemographicsRequestBody | undefined;
};

/** @internal */
export const PutDemographicsStatus$inboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsStatus
> = z.nativeEnum(PutDemographicsStatus);

/** @internal */
export const PutDemographicsStatus$outboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsStatus
> = PutDemographicsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsStatus$ {
  /** @deprecated use `PutDemographicsStatus$inboundSchema` instead. */
  export const inboundSchema = PutDemographicsStatus$inboundSchema;
  /** @deprecated use `PutDemographicsStatus$outboundSchema` instead. */
  export const outboundSchema = PutDemographicsStatus$outboundSchema;
}

/** @internal */
export const PutDemographicsSex$inboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsSex
> = z.nativeEnum(PutDemographicsSex);

/** @internal */
export const PutDemographicsSex$outboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsSex
> = PutDemographicsSex$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsSex$ {
  /** @deprecated use `PutDemographicsSex$inboundSchema` instead. */
  export const inboundSchema = PutDemographicsSex$inboundSchema;
  /** @deprecated use `PutDemographicsSex$outboundSchema` instead. */
  export const outboundSchema = PutDemographicsSex$outboundSchema;
}

/** @internal */
export const PutDemographicsAmericanIndianOrAlaskaNative$inboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsAmericanIndianOrAlaskaNative> = z
    .nativeEnum(PutDemographicsAmericanIndianOrAlaskaNative);

/** @internal */
export const PutDemographicsAmericanIndianOrAlaskaNative$outboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsAmericanIndianOrAlaskaNative> =
    PutDemographicsAmericanIndianOrAlaskaNative$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsAmericanIndianOrAlaskaNative$ {
  /** @deprecated use `PutDemographicsAmericanIndianOrAlaskaNative$inboundSchema` instead. */
  export const inboundSchema =
    PutDemographicsAmericanIndianOrAlaskaNative$inboundSchema;
  /** @deprecated use `PutDemographicsAmericanIndianOrAlaskaNative$outboundSchema` instead. */
  export const outboundSchema =
    PutDemographicsAmericanIndianOrAlaskaNative$outboundSchema;
}

/** @internal */
export const PutDemographicsAsian$inboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsAsian
> = z.nativeEnum(PutDemographicsAsian);

/** @internal */
export const PutDemographicsAsian$outboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsAsian
> = PutDemographicsAsian$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsAsian$ {
  /** @deprecated use `PutDemographicsAsian$inboundSchema` instead. */
  export const inboundSchema = PutDemographicsAsian$inboundSchema;
  /** @deprecated use `PutDemographicsAsian$outboundSchema` instead. */
  export const outboundSchema = PutDemographicsAsian$outboundSchema;
}

/** @internal */
export const PutDemographicsBlackOrAfricanAmerican$inboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsBlackOrAfricanAmerican> = z.nativeEnum(
    PutDemographicsBlackOrAfricanAmerican,
  );

/** @internal */
export const PutDemographicsBlackOrAfricanAmerican$outboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsBlackOrAfricanAmerican> =
    PutDemographicsBlackOrAfricanAmerican$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsBlackOrAfricanAmerican$ {
  /** @deprecated use `PutDemographicsBlackOrAfricanAmerican$inboundSchema` instead. */
  export const inboundSchema =
    PutDemographicsBlackOrAfricanAmerican$inboundSchema;
  /** @deprecated use `PutDemographicsBlackOrAfricanAmerican$outboundSchema` instead. */
  export const outboundSchema =
    PutDemographicsBlackOrAfricanAmerican$outboundSchema;
}

/** @internal */
export const PutDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsNativeHawaiianOrOtherPacificIslander> =
    z.nativeEnum(PutDemographicsNativeHawaiianOrOtherPacificIslander);

/** @internal */
export const PutDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsNativeHawaiianOrOtherPacificIslander> =
    PutDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsNativeHawaiianOrOtherPacificIslander$ {
  /** @deprecated use `PutDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema` instead. */
  export const inboundSchema =
    PutDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema;
  /** @deprecated use `PutDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema` instead. */
  export const outboundSchema =
    PutDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema;
}

/** @internal */
export const PutDemographicsWhite$inboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsWhite
> = z.nativeEnum(PutDemographicsWhite);

/** @internal */
export const PutDemographicsWhite$outboundSchema: z.ZodNativeEnum<
  typeof PutDemographicsWhite
> = PutDemographicsWhite$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsWhite$ {
  /** @deprecated use `PutDemographicsWhite$inboundSchema` instead. */
  export const inboundSchema = PutDemographicsWhite$inboundSchema;
  /** @deprecated use `PutDemographicsWhite$outboundSchema` instead. */
  export const outboundSchema = PutDemographicsWhite$outboundSchema;
}

/** @internal */
export const PutDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsDemographicRaceTwoOrMoreRaces> = z
    .nativeEnum(PutDemographicsDemographicRaceTwoOrMoreRaces);

/** @internal */
export const PutDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsDemographicRaceTwoOrMoreRaces> =
    PutDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsDemographicRaceTwoOrMoreRaces$ {
  /** @deprecated use `PutDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema` instead. */
  export const inboundSchema =
    PutDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema;
  /** @deprecated use `PutDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema` instead. */
  export const outboundSchema =
    PutDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema;
}

/** @internal */
export const PutDemographicsHispanicOrLatinoEthnicity$inboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsHispanicOrLatinoEthnicity> = z
    .nativeEnum(PutDemographicsHispanicOrLatinoEthnicity);

/** @internal */
export const PutDemographicsHispanicOrLatinoEthnicity$outboundSchema:
  z.ZodNativeEnum<typeof PutDemographicsHispanicOrLatinoEthnicity> =
    PutDemographicsHispanicOrLatinoEthnicity$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsHispanicOrLatinoEthnicity$ {
  /** @deprecated use `PutDemographicsHispanicOrLatinoEthnicity$inboundSchema` instead. */
  export const inboundSchema =
    PutDemographicsHispanicOrLatinoEthnicity$inboundSchema;
  /** @deprecated use `PutDemographicsHispanicOrLatinoEthnicity$outboundSchema` instead. */
  export const outboundSchema =
    PutDemographicsHispanicOrLatinoEthnicity$outboundSchema;
}

/** @internal */
export const PutDemographicsDemographics$inboundSchema: z.ZodType<
  PutDemographicsDemographics,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
  status: PutDemographicsStatus$inboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  birthDate: z.nullable(z.string()).optional(),
  sex: z.nullable(PutDemographicsSex$inboundSchema).optional(),
  americanIndianOrAlaskaNative: z.nullable(
    PutDemographicsAmericanIndianOrAlaskaNative$inboundSchema,
  ).optional(),
  asian: z.nullable(PutDemographicsAsian$inboundSchema).optional(),
  blackOrAfricanAmerican: z.nullable(
    PutDemographicsBlackOrAfricanAmerican$inboundSchema,
  ).optional(),
  nativeHawaiianOrOtherPacificIslander: z.nullable(
    PutDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema,
  ).optional(),
  white: z.nullable(PutDemographicsWhite$inboundSchema).optional(),
  demographicRaceTwoOrMoreRaces: z.nullable(
    PutDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema,
  ).optional(),
  hispanicOrLatinoEthnicity: z.nullable(
    PutDemographicsHispanicOrLatinoEthnicity$inboundSchema,
  ).optional(),
  countryOfBirthCode: z.nullable(z.string()).optional(),
  stateOfBirthAbbreviation: z.nullable(z.string()).optional(),
  cityOfBirth: z.nullable(z.string()).optional(),
  publicSchoolResidenceStatus: z.nullable(z.string()).optional(),
});

/** @internal */
export type PutDemographicsDemographics$Outbound = {
  sourcedId: string;
  status: string;
  metadata?: { [k: string]: any } | undefined;
  birthDate?: string | null | undefined;
  sex?: string | null | undefined;
  americanIndianOrAlaskaNative?: string | null | undefined;
  asian?: string | null | undefined;
  blackOrAfricanAmerican?: string | null | undefined;
  nativeHawaiianOrOtherPacificIslander?: string | null | undefined;
  white?: string | null | undefined;
  demographicRaceTwoOrMoreRaces?: string | null | undefined;
  hispanicOrLatinoEthnicity?: string | null | undefined;
  countryOfBirthCode?: string | null | undefined;
  stateOfBirthAbbreviation?: string | null | undefined;
  cityOfBirth?: string | null | undefined;
  publicSchoolResidenceStatus?: string | null | undefined;
};

/** @internal */
export const PutDemographicsDemographics$outboundSchema: z.ZodType<
  PutDemographicsDemographics$Outbound,
  z.ZodTypeDef,
  PutDemographicsDemographics
> = z.object({
  sourcedId: z.string(),
  status: PutDemographicsStatus$outboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  birthDate: z.nullable(z.string()).optional(),
  sex: z.nullable(PutDemographicsSex$outboundSchema).optional(),
  americanIndianOrAlaskaNative: z.nullable(
    PutDemographicsAmericanIndianOrAlaskaNative$outboundSchema,
  ).optional(),
  asian: z.nullable(PutDemographicsAsian$outboundSchema).optional(),
  blackOrAfricanAmerican: z.nullable(
    PutDemographicsBlackOrAfricanAmerican$outboundSchema,
  ).optional(),
  nativeHawaiianOrOtherPacificIslander: z.nullable(
    PutDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema,
  ).optional(),
  white: z.nullable(PutDemographicsWhite$outboundSchema).optional(),
  demographicRaceTwoOrMoreRaces: z.nullable(
    PutDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema,
  ).optional(),
  hispanicOrLatinoEthnicity: z.nullable(
    PutDemographicsHispanicOrLatinoEthnicity$outboundSchema,
  ).optional(),
  countryOfBirthCode: z.nullable(z.string()).optional(),
  stateOfBirthAbbreviation: z.nullable(z.string()).optional(),
  cityOfBirth: z.nullable(z.string()).optional(),
  publicSchoolResidenceStatus: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsDemographics$ {
  /** @deprecated use `PutDemographicsDemographics$inboundSchema` instead. */
  export const inboundSchema = PutDemographicsDemographics$inboundSchema;
  /** @deprecated use `PutDemographicsDemographics$outboundSchema` instead. */
  export const outboundSchema = PutDemographicsDemographics$outboundSchema;
  /** @deprecated use `PutDemographicsDemographics$Outbound` instead. */
  export type Outbound = PutDemographicsDemographics$Outbound;
}

export function putDemographicsDemographicsToJSON(
  putDemographicsDemographics: PutDemographicsDemographics,
): string {
  return JSON.stringify(
    PutDemographicsDemographics$outboundSchema.parse(
      putDemographicsDemographics,
    ),
  );
}

export function putDemographicsDemographicsFromJSON(
  jsonString: string,
): SafeParseResult<PutDemographicsDemographics, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutDemographicsDemographics$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutDemographicsDemographics' from JSON`,
  );
}

/** @internal */
export const PutDemographicsRequestBody$inboundSchema: z.ZodType<
  PutDemographicsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  demographics: z.lazy(() => PutDemographicsDemographics$inboundSchema),
});

/** @internal */
export type PutDemographicsRequestBody$Outbound = {
  demographics: PutDemographicsDemographics$Outbound;
};

/** @internal */
export const PutDemographicsRequestBody$outboundSchema: z.ZodType<
  PutDemographicsRequestBody$Outbound,
  z.ZodTypeDef,
  PutDemographicsRequestBody
> = z.object({
  demographics: z.lazy(() => PutDemographicsDemographics$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsRequestBody$ {
  /** @deprecated use `PutDemographicsRequestBody$inboundSchema` instead. */
  export const inboundSchema = PutDemographicsRequestBody$inboundSchema;
  /** @deprecated use `PutDemographicsRequestBody$outboundSchema` instead. */
  export const outboundSchema = PutDemographicsRequestBody$outboundSchema;
  /** @deprecated use `PutDemographicsRequestBody$Outbound` instead. */
  export type Outbound = PutDemographicsRequestBody$Outbound;
}

export function putDemographicsRequestBodyToJSON(
  putDemographicsRequestBody: PutDemographicsRequestBody,
): string {
  return JSON.stringify(
    PutDemographicsRequestBody$outboundSchema.parse(putDemographicsRequestBody),
  );
}

export function putDemographicsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PutDemographicsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutDemographicsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutDemographicsRequestBody' from JSON`,
  );
}

/** @internal */
export const PutDemographicsRequest$inboundSchema: z.ZodType<
  PutDemographicsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
  RequestBody: z.lazy(() => PutDemographicsRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PutDemographicsRequest$Outbound = {
  sourcedId: string;
  RequestBody?: PutDemographicsRequestBody$Outbound | undefined;
};

/** @internal */
export const PutDemographicsRequest$outboundSchema: z.ZodType<
  PutDemographicsRequest$Outbound,
  z.ZodTypeDef,
  PutDemographicsRequest
> = z.object({
  sourcedId: z.string(),
  requestBody: z.lazy(() => PutDemographicsRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutDemographicsRequest$ {
  /** @deprecated use `PutDemographicsRequest$inboundSchema` instead. */
  export const inboundSchema = PutDemographicsRequest$inboundSchema;
  /** @deprecated use `PutDemographicsRequest$outboundSchema` instead. */
  export const outboundSchema = PutDemographicsRequest$outboundSchema;
  /** @deprecated use `PutDemographicsRequest$Outbound` instead. */
  export type Outbound = PutDemographicsRequest$Outbound;
}

export function putDemographicsRequestToJSON(
  putDemographicsRequest: PutDemographicsRequest,
): string {
  return JSON.stringify(
    PutDemographicsRequest$outboundSchema.parse(putDemographicsRequest),
  );
}

export function putDemographicsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutDemographicsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutDemographicsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutDemographicsRequest' from JSON`,
  );
}
