/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetLineItemRequest = {
  /**
   * The sourcedId of the line item
   */
  sourcedId: string;
};

/**
 * Successful response with the line item
 */
export type GetLineItemResponse = {
  /**
   * Represents a line item.
   */
  lineItem: components.LineItem;
};

/** @internal */
export const GetLineItemRequest$inboundSchema: z.ZodType<
  GetLineItemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetLineItemRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetLineItemRequest$outboundSchema: z.ZodType<
  GetLineItemRequest$Outbound,
  z.ZodTypeDef,
  GetLineItemRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLineItemRequest$ {
  /** @deprecated use `GetLineItemRequest$inboundSchema` instead. */
  export const inboundSchema = GetLineItemRequest$inboundSchema;
  /** @deprecated use `GetLineItemRequest$outboundSchema` instead. */
  export const outboundSchema = GetLineItemRequest$outboundSchema;
  /** @deprecated use `GetLineItemRequest$Outbound` instead. */
  export type Outbound = GetLineItemRequest$Outbound;
}

export function getLineItemRequestToJSON(
  getLineItemRequest: GetLineItemRequest,
): string {
  return JSON.stringify(
    GetLineItemRequest$outboundSchema.parse(getLineItemRequest),
  );
}

export function getLineItemRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetLineItemRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetLineItemRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetLineItemRequest' from JSON`,
  );
}

/** @internal */
export const GetLineItemResponse$inboundSchema: z.ZodType<
  GetLineItemResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  lineItem: components.LineItem$inboundSchema,
});

/** @internal */
export type GetLineItemResponse$Outbound = {
  lineItem: components.LineItem$Outbound;
};

/** @internal */
export const GetLineItemResponse$outboundSchema: z.ZodType<
  GetLineItemResponse$Outbound,
  z.ZodTypeDef,
  GetLineItemResponse
> = z.object({
  lineItem: components.LineItem$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLineItemResponse$ {
  /** @deprecated use `GetLineItemResponse$inboundSchema` instead. */
  export const inboundSchema = GetLineItemResponse$inboundSchema;
  /** @deprecated use `GetLineItemResponse$outboundSchema` instead. */
  export const outboundSchema = GetLineItemResponse$outboundSchema;
  /** @deprecated use `GetLineItemResponse$Outbound` instead. */
  export type Outbound = GetLineItemResponse$Outbound;
}

export function getLineItemResponseToJSON(
  getLineItemResponse: GetLineItemResponse,
): string {
  return JSON.stringify(
    GetLineItemResponse$outboundSchema.parse(getLineItemResponse),
  );
}

export function getLineItemResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetLineItemResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetLineItemResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetLineItemResponse' from JSON`,
  );
}
