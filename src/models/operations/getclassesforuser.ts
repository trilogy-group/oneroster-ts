/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetClassesForUserRequest = {
  /**
   * The sourcedId of the user
   */
  userSourcedId: string;
};

/**
 * Successful response containing a collection of classes for the user
 */
export type GetClassesForUserResponse = {
  classes: Array<components.Class>;
};

/** @internal */
export const GetClassesForUserRequest$inboundSchema: z.ZodType<
  GetClassesForUserRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  userSourcedId: z.string(),
});

/** @internal */
export type GetClassesForUserRequest$Outbound = {
  userSourcedId: string;
};

/** @internal */
export const GetClassesForUserRequest$outboundSchema: z.ZodType<
  GetClassesForUserRequest$Outbound,
  z.ZodTypeDef,
  GetClassesForUserRequest
> = z.object({
  userSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassesForUserRequest$ {
  /** @deprecated use `GetClassesForUserRequest$inboundSchema` instead. */
  export const inboundSchema = GetClassesForUserRequest$inboundSchema;
  /** @deprecated use `GetClassesForUserRequest$outboundSchema` instead. */
  export const outboundSchema = GetClassesForUserRequest$outboundSchema;
  /** @deprecated use `GetClassesForUserRequest$Outbound` instead. */
  export type Outbound = GetClassesForUserRequest$Outbound;
}

export function getClassesForUserRequestToJSON(
  getClassesForUserRequest: GetClassesForUserRequest,
): string {
  return JSON.stringify(
    GetClassesForUserRequest$outboundSchema.parse(getClassesForUserRequest),
  );
}

export function getClassesForUserRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetClassesForUserRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassesForUserRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassesForUserRequest' from JSON`,
  );
}

/** @internal */
export const GetClassesForUserResponse$inboundSchema: z.ZodType<
  GetClassesForUserResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  classes: z.array(components.Class$inboundSchema),
});

/** @internal */
export type GetClassesForUserResponse$Outbound = {
  classes: Array<components.Class$Outbound>;
};

/** @internal */
export const GetClassesForUserResponse$outboundSchema: z.ZodType<
  GetClassesForUserResponse$Outbound,
  z.ZodTypeDef,
  GetClassesForUserResponse
> = z.object({
  classes: z.array(components.Class$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassesForUserResponse$ {
  /** @deprecated use `GetClassesForUserResponse$inboundSchema` instead. */
  export const inboundSchema = GetClassesForUserResponse$inboundSchema;
  /** @deprecated use `GetClassesForUserResponse$outboundSchema` instead. */
  export const outboundSchema = GetClassesForUserResponse$outboundSchema;
  /** @deprecated use `GetClassesForUserResponse$Outbound` instead. */
  export type Outbound = GetClassesForUserResponse$Outbound;
}

export function getClassesForUserResponseToJSON(
  getClassesForUserResponse: GetClassesForUserResponse,
): string {
  return JSON.stringify(
    GetClassesForUserResponse$outboundSchema.parse(getClassesForUserResponse),
  );
}

export function getClassesForUserResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetClassesForUserResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassesForUserResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassesForUserResponse' from JSON`,
  );
}
