/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateScoreScaleRequestBody = {
  /**
   * Represents a score scale.
   */
  scoreScale: components.ScoreScale;
};

export type UpdateScoreScaleRequest = {
  /**
   * The sourcedId of the score scale to update
   */
  sourcedId: string;
  requestBody: UpdateScoreScaleRequestBody;
};

/**
 * Score scale successfully updated
 */
export type UpdateScoreScaleResponse = {
  /**
   * Represents a score scale.
   */
  scoreScale: components.ScoreScale;
};

/** @internal */
export const UpdateScoreScaleRequestBody$inboundSchema: z.ZodType<
  UpdateScoreScaleRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  scoreScale: components.ScoreScale$inboundSchema,
});

/** @internal */
export type UpdateScoreScaleRequestBody$Outbound = {
  scoreScale: components.ScoreScale$Outbound;
};

/** @internal */
export const UpdateScoreScaleRequestBody$outboundSchema: z.ZodType<
  UpdateScoreScaleRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateScoreScaleRequestBody
> = z.object({
  scoreScale: components.ScoreScale$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateScoreScaleRequestBody$ {
  /** @deprecated use `UpdateScoreScaleRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateScoreScaleRequestBody$inboundSchema;
  /** @deprecated use `UpdateScoreScaleRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateScoreScaleRequestBody$outboundSchema;
  /** @deprecated use `UpdateScoreScaleRequestBody$Outbound` instead. */
  export type Outbound = UpdateScoreScaleRequestBody$Outbound;
}

export function updateScoreScaleRequestBodyToJSON(
  updateScoreScaleRequestBody: UpdateScoreScaleRequestBody,
): string {
  return JSON.stringify(
    UpdateScoreScaleRequestBody$outboundSchema.parse(
      updateScoreScaleRequestBody,
    ),
  );
}

export function updateScoreScaleRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateScoreScaleRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateScoreScaleRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateScoreScaleRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateScoreScaleRequest$inboundSchema: z.ZodType<
  UpdateScoreScaleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
  RequestBody: z.lazy(() => UpdateScoreScaleRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateScoreScaleRequest$Outbound = {
  sourcedId: string;
  RequestBody: UpdateScoreScaleRequestBody$Outbound;
};

/** @internal */
export const UpdateScoreScaleRequest$outboundSchema: z.ZodType<
  UpdateScoreScaleRequest$Outbound,
  z.ZodTypeDef,
  UpdateScoreScaleRequest
> = z.object({
  sourcedId: z.string(),
  requestBody: z.lazy(() => UpdateScoreScaleRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateScoreScaleRequest$ {
  /** @deprecated use `UpdateScoreScaleRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateScoreScaleRequest$inboundSchema;
  /** @deprecated use `UpdateScoreScaleRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateScoreScaleRequest$outboundSchema;
  /** @deprecated use `UpdateScoreScaleRequest$Outbound` instead. */
  export type Outbound = UpdateScoreScaleRequest$Outbound;
}

export function updateScoreScaleRequestToJSON(
  updateScoreScaleRequest: UpdateScoreScaleRequest,
): string {
  return JSON.stringify(
    UpdateScoreScaleRequest$outboundSchema.parse(updateScoreScaleRequest),
  );
}

export function updateScoreScaleRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateScoreScaleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateScoreScaleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateScoreScaleRequest' from JSON`,
  );
}

/** @internal */
export const UpdateScoreScaleResponse$inboundSchema: z.ZodType<
  UpdateScoreScaleResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  scoreScale: components.ScoreScale$inboundSchema,
});

/** @internal */
export type UpdateScoreScaleResponse$Outbound = {
  scoreScale: components.ScoreScale$Outbound;
};

/** @internal */
export const UpdateScoreScaleResponse$outboundSchema: z.ZodType<
  UpdateScoreScaleResponse$Outbound,
  z.ZodTypeDef,
  UpdateScoreScaleResponse
> = z.object({
  scoreScale: components.ScoreScale$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateScoreScaleResponse$ {
  /** @deprecated use `UpdateScoreScaleResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateScoreScaleResponse$inboundSchema;
  /** @deprecated use `UpdateScoreScaleResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateScoreScaleResponse$outboundSchema;
  /** @deprecated use `UpdateScoreScaleResponse$Outbound` instead. */
  export type Outbound = UpdateScoreScaleResponse$Outbound;
}

export function updateScoreScaleResponseToJSON(
  updateScoreScaleResponse: UpdateScoreScaleResponse,
): string {
  return JSON.stringify(
    UpdateScoreScaleResponse$outboundSchema.parse(updateScoreScaleResponse),
  );
}

export function updateScoreScaleResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateScoreScaleResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateScoreScaleResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateScoreScaleResponse' from JSON`,
  );
}
