/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCourseComponentRequest = {
  /**
   * The sourcedId of the course component
   */
  sourcedId: string;
};

export const GetCourseComponentStatus = {
  Active: "active",
  Tobedeleted: "tobedeleted",
} as const;
export type GetCourseComponentStatus = ClosedEnum<
  typeof GetCourseComponentStatus
>;

export type GetCourseComponentCourse = {
  sourcedId: string;
};

export type GetCourseComponentCourseComponentCourseComponent = {
  sourcedId: string;
};

export type GetCourseComponentParent = {
  sourcedId: string;
};

/**
 * Represents a component of a course.
 */
export type GetCourseComponentCourseComponent = {
  sourcedId?: string | undefined;
  status: GetCourseComponentStatus;
  dateLastModified?: Date | undefined;
  metadata?: { [k: string]: any } | null | undefined;
  course: GetCourseComponentCourse;
  courseComponent?:
    | GetCourseComponentCourseComponentCourseComponent
    | null
    | undefined;
  parent?: GetCourseComponentParent | null | undefined;
  title: string;
  sortOrder: number;
  prerequisites?: Array<string> | null | undefined;
  prerequisiteCriteria?: string | null | undefined;
  /**
   * The date the component is unlocked for the student
   */
  unlockDate: string;
};

/**
 * Single Course Component
 */
export type GetCourseComponentResponse = {
  /**
   * Represents a component of a course.
   */
  courseComponent: GetCourseComponentCourseComponent;
};

/** @internal */
export const GetCourseComponentRequest$inboundSchema: z.ZodType<
  GetCourseComponentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetCourseComponentRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetCourseComponentRequest$outboundSchema: z.ZodType<
  GetCourseComponentRequest$Outbound,
  z.ZodTypeDef,
  GetCourseComponentRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCourseComponentRequest$ {
  /** @deprecated use `GetCourseComponentRequest$inboundSchema` instead. */
  export const inboundSchema = GetCourseComponentRequest$inboundSchema;
  /** @deprecated use `GetCourseComponentRequest$outboundSchema` instead. */
  export const outboundSchema = GetCourseComponentRequest$outboundSchema;
  /** @deprecated use `GetCourseComponentRequest$Outbound` instead. */
  export type Outbound = GetCourseComponentRequest$Outbound;
}

export function getCourseComponentRequestToJSON(
  getCourseComponentRequest: GetCourseComponentRequest,
): string {
  return JSON.stringify(
    GetCourseComponentRequest$outboundSchema.parse(getCourseComponentRequest),
  );
}

export function getCourseComponentRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCourseComponentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCourseComponentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCourseComponentRequest' from JSON`,
  );
}

/** @internal */
export const GetCourseComponentStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetCourseComponentStatus
> = z.nativeEnum(GetCourseComponentStatus);

/** @internal */
export const GetCourseComponentStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetCourseComponentStatus
> = GetCourseComponentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCourseComponentStatus$ {
  /** @deprecated use `GetCourseComponentStatus$inboundSchema` instead. */
  export const inboundSchema = GetCourseComponentStatus$inboundSchema;
  /** @deprecated use `GetCourseComponentStatus$outboundSchema` instead. */
  export const outboundSchema = GetCourseComponentStatus$outboundSchema;
}

/** @internal */
export const GetCourseComponentCourse$inboundSchema: z.ZodType<
  GetCourseComponentCourse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetCourseComponentCourse$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetCourseComponentCourse$outboundSchema: z.ZodType<
  GetCourseComponentCourse$Outbound,
  z.ZodTypeDef,
  GetCourseComponentCourse
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCourseComponentCourse$ {
  /** @deprecated use `GetCourseComponentCourse$inboundSchema` instead. */
  export const inboundSchema = GetCourseComponentCourse$inboundSchema;
  /** @deprecated use `GetCourseComponentCourse$outboundSchema` instead. */
  export const outboundSchema = GetCourseComponentCourse$outboundSchema;
  /** @deprecated use `GetCourseComponentCourse$Outbound` instead. */
  export type Outbound = GetCourseComponentCourse$Outbound;
}

export function getCourseComponentCourseToJSON(
  getCourseComponentCourse: GetCourseComponentCourse,
): string {
  return JSON.stringify(
    GetCourseComponentCourse$outboundSchema.parse(getCourseComponentCourse),
  );
}

export function getCourseComponentCourseFromJSON(
  jsonString: string,
): SafeParseResult<GetCourseComponentCourse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCourseComponentCourse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCourseComponentCourse' from JSON`,
  );
}

/** @internal */
export const GetCourseComponentCourseComponentCourseComponent$inboundSchema:
  z.ZodType<
    GetCourseComponentCourseComponentCourseComponent,
    z.ZodTypeDef,
    unknown
  > = z.object({
    sourcedId: z.string(),
  });

/** @internal */
export type GetCourseComponentCourseComponentCourseComponent$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetCourseComponentCourseComponentCourseComponent$outboundSchema:
  z.ZodType<
    GetCourseComponentCourseComponentCourseComponent$Outbound,
    z.ZodTypeDef,
    GetCourseComponentCourseComponentCourseComponent
  > = z.object({
    sourcedId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCourseComponentCourseComponentCourseComponent$ {
  /** @deprecated use `GetCourseComponentCourseComponentCourseComponent$inboundSchema` instead. */
  export const inboundSchema =
    GetCourseComponentCourseComponentCourseComponent$inboundSchema;
  /** @deprecated use `GetCourseComponentCourseComponentCourseComponent$outboundSchema` instead. */
  export const outboundSchema =
    GetCourseComponentCourseComponentCourseComponent$outboundSchema;
  /** @deprecated use `GetCourseComponentCourseComponentCourseComponent$Outbound` instead. */
  export type Outbound =
    GetCourseComponentCourseComponentCourseComponent$Outbound;
}

export function getCourseComponentCourseComponentCourseComponentToJSON(
  getCourseComponentCourseComponentCourseComponent:
    GetCourseComponentCourseComponentCourseComponent,
): string {
  return JSON.stringify(
    GetCourseComponentCourseComponentCourseComponent$outboundSchema.parse(
      getCourseComponentCourseComponentCourseComponent,
    ),
  );
}

export function getCourseComponentCourseComponentCourseComponentFromJSON(
  jsonString: string,
): SafeParseResult<
  GetCourseComponentCourseComponentCourseComponent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetCourseComponentCourseComponentCourseComponent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetCourseComponentCourseComponentCourseComponent' from JSON`,
  );
}

/** @internal */
export const GetCourseComponentParent$inboundSchema: z.ZodType<
  GetCourseComponentParent,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetCourseComponentParent$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetCourseComponentParent$outboundSchema: z.ZodType<
  GetCourseComponentParent$Outbound,
  z.ZodTypeDef,
  GetCourseComponentParent
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCourseComponentParent$ {
  /** @deprecated use `GetCourseComponentParent$inboundSchema` instead. */
  export const inboundSchema = GetCourseComponentParent$inboundSchema;
  /** @deprecated use `GetCourseComponentParent$outboundSchema` instead. */
  export const outboundSchema = GetCourseComponentParent$outboundSchema;
  /** @deprecated use `GetCourseComponentParent$Outbound` instead. */
  export type Outbound = GetCourseComponentParent$Outbound;
}

export function getCourseComponentParentToJSON(
  getCourseComponentParent: GetCourseComponentParent,
): string {
  return JSON.stringify(
    GetCourseComponentParent$outboundSchema.parse(getCourseComponentParent),
  );
}

export function getCourseComponentParentFromJSON(
  jsonString: string,
): SafeParseResult<GetCourseComponentParent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCourseComponentParent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCourseComponentParent' from JSON`,
  );
}

/** @internal */
export const GetCourseComponentCourseComponent$inboundSchema: z.ZodType<
  GetCourseComponentCourseComponent,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string().optional(),
  status: GetCourseComponentStatus$inboundSchema,
  dateLastModified: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  metadata: z.nullable(z.record(z.any())).optional(),
  course: z.lazy(() => GetCourseComponentCourse$inboundSchema),
  courseComponent: z.nullable(
    z.lazy(() =>
      GetCourseComponentCourseComponentCourseComponent$inboundSchema
    ),
  ).optional(),
  parent: z.nullable(z.lazy(() => GetCourseComponentParent$inboundSchema))
    .optional(),
  title: z.string(),
  sortOrder: z.number(),
  prerequisites: z.nullable(z.array(z.string())).optional(),
  prerequisiteCriteria: z.nullable(z.string()).optional(),
  unlockDate: z.string(),
});

/** @internal */
export type GetCourseComponentCourseComponent$Outbound = {
  sourcedId?: string | undefined;
  status: string;
  dateLastModified?: string | undefined;
  metadata?: { [k: string]: any } | null | undefined;
  course: GetCourseComponentCourse$Outbound;
  courseComponent?:
    | GetCourseComponentCourseComponentCourseComponent$Outbound
    | null
    | undefined;
  parent?: GetCourseComponentParent$Outbound | null | undefined;
  title: string;
  sortOrder: number;
  prerequisites?: Array<string> | null | undefined;
  prerequisiteCriteria?: string | null | undefined;
  unlockDate: string;
};

/** @internal */
export const GetCourseComponentCourseComponent$outboundSchema: z.ZodType<
  GetCourseComponentCourseComponent$Outbound,
  z.ZodTypeDef,
  GetCourseComponentCourseComponent
> = z.object({
  sourcedId: z.string().optional(),
  status: GetCourseComponentStatus$outboundSchema,
  dateLastModified: z.date().transform(v => v.toISOString()).optional(),
  metadata: z.nullable(z.record(z.any())).optional(),
  course: z.lazy(() => GetCourseComponentCourse$outboundSchema),
  courseComponent: z.nullable(
    z.lazy(() =>
      GetCourseComponentCourseComponentCourseComponent$outboundSchema
    ),
  ).optional(),
  parent: z.nullable(z.lazy(() => GetCourseComponentParent$outboundSchema))
    .optional(),
  title: z.string(),
  sortOrder: z.number(),
  prerequisites: z.nullable(z.array(z.string())).optional(),
  prerequisiteCriteria: z.nullable(z.string()).optional(),
  unlockDate: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCourseComponentCourseComponent$ {
  /** @deprecated use `GetCourseComponentCourseComponent$inboundSchema` instead. */
  export const inboundSchema = GetCourseComponentCourseComponent$inboundSchema;
  /** @deprecated use `GetCourseComponentCourseComponent$outboundSchema` instead. */
  export const outboundSchema =
    GetCourseComponentCourseComponent$outboundSchema;
  /** @deprecated use `GetCourseComponentCourseComponent$Outbound` instead. */
  export type Outbound = GetCourseComponentCourseComponent$Outbound;
}

export function getCourseComponentCourseComponentToJSON(
  getCourseComponentCourseComponent: GetCourseComponentCourseComponent,
): string {
  return JSON.stringify(
    GetCourseComponentCourseComponent$outboundSchema.parse(
      getCourseComponentCourseComponent,
    ),
  );
}

export function getCourseComponentCourseComponentFromJSON(
  jsonString: string,
): SafeParseResult<GetCourseComponentCourseComponent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCourseComponentCourseComponent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCourseComponentCourseComponent' from JSON`,
  );
}

/** @internal */
export const GetCourseComponentResponse$inboundSchema: z.ZodType<
  GetCourseComponentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  courseComponent: z.lazy(() =>
    GetCourseComponentCourseComponent$inboundSchema
  ),
});

/** @internal */
export type GetCourseComponentResponse$Outbound = {
  courseComponent: GetCourseComponentCourseComponent$Outbound;
};

/** @internal */
export const GetCourseComponentResponse$outboundSchema: z.ZodType<
  GetCourseComponentResponse$Outbound,
  z.ZodTypeDef,
  GetCourseComponentResponse
> = z.object({
  courseComponent: z.lazy(() =>
    GetCourseComponentCourseComponent$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCourseComponentResponse$ {
  /** @deprecated use `GetCourseComponentResponse$inboundSchema` instead. */
  export const inboundSchema = GetCourseComponentResponse$inboundSchema;
  /** @deprecated use `GetCourseComponentResponse$outboundSchema` instead. */
  export const outboundSchema = GetCourseComponentResponse$outboundSchema;
  /** @deprecated use `GetCourseComponentResponse$Outbound` instead. */
  export type Outbound = GetCourseComponentResponse$Outbound;
}

export function getCourseComponentResponseToJSON(
  getCourseComponentResponse: GetCourseComponentResponse,
): string {
  return JSON.stringify(
    GetCourseComponentResponse$outboundSchema.parse(getCourseComponentResponse),
  );
}

export function getCourseComponentResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetCourseComponentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCourseComponentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCourseComponentResponse' from JSON`,
  );
}
