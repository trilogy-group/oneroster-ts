/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CreateComponentResourceStatus = {
  Active: "active",
  Tobedeleted: "tobedeleted",
} as const;
export type CreateComponentResourceStatus = ClosedEnum<
  typeof CreateComponentResourceStatus
>;

export type CreateComponentResourceCourseComponent = {
  sourcedId: string;
};

export type CreateComponentResourceResource = {
  sourcedId: string;
};

/**
 * Represents a resource associated with a course component.
 */
export type CreateComponentResourceComponentResource = {
  sourcedId: string;
  status: CreateComponentResourceStatus;
  dateLastModified?: Date | undefined;
  metadata?: { [k: string]: any } | null | undefined;
  courseComponent: CreateComponentResourceCourseComponent;
  resource: CreateComponentResourceResource;
  title: string;
  sortOrder?: number | undefined;
};

export type CreateComponentResourceRequest = {
  /**
   * Represents a resource associated with a course component.
   */
  componentResource: CreateComponentResourceComponentResource;
};

export type CreateComponentResourceSourcedIdPairs = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/**
 * Created Component Resource Successfully
 */
export type CreateComponentResourceResponse = {
  sourcedIdPairs: CreateComponentResourceSourcedIdPairs;
};

/** @internal */
export const CreateComponentResourceStatus$inboundSchema: z.ZodNativeEnum<
  typeof CreateComponentResourceStatus
> = z.nativeEnum(CreateComponentResourceStatus);

/** @internal */
export const CreateComponentResourceStatus$outboundSchema: z.ZodNativeEnum<
  typeof CreateComponentResourceStatus
> = CreateComponentResourceStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateComponentResourceStatus$ {
  /** @deprecated use `CreateComponentResourceStatus$inboundSchema` instead. */
  export const inboundSchema = CreateComponentResourceStatus$inboundSchema;
  /** @deprecated use `CreateComponentResourceStatus$outboundSchema` instead. */
  export const outboundSchema = CreateComponentResourceStatus$outboundSchema;
}

/** @internal */
export const CreateComponentResourceCourseComponent$inboundSchema: z.ZodType<
  CreateComponentResourceCourseComponent,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type CreateComponentResourceCourseComponent$Outbound = {
  sourcedId: string;
};

/** @internal */
export const CreateComponentResourceCourseComponent$outboundSchema: z.ZodType<
  CreateComponentResourceCourseComponent$Outbound,
  z.ZodTypeDef,
  CreateComponentResourceCourseComponent
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateComponentResourceCourseComponent$ {
  /** @deprecated use `CreateComponentResourceCourseComponent$inboundSchema` instead. */
  export const inboundSchema =
    CreateComponentResourceCourseComponent$inboundSchema;
  /** @deprecated use `CreateComponentResourceCourseComponent$outboundSchema` instead. */
  export const outboundSchema =
    CreateComponentResourceCourseComponent$outboundSchema;
  /** @deprecated use `CreateComponentResourceCourseComponent$Outbound` instead. */
  export type Outbound = CreateComponentResourceCourseComponent$Outbound;
}

export function createComponentResourceCourseComponentToJSON(
  createComponentResourceCourseComponent:
    CreateComponentResourceCourseComponent,
): string {
  return JSON.stringify(
    CreateComponentResourceCourseComponent$outboundSchema.parse(
      createComponentResourceCourseComponent,
    ),
  );
}

export function createComponentResourceCourseComponentFromJSON(
  jsonString: string,
): SafeParseResult<CreateComponentResourceCourseComponent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateComponentResourceCourseComponent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateComponentResourceCourseComponent' from JSON`,
  );
}

/** @internal */
export const CreateComponentResourceResource$inboundSchema: z.ZodType<
  CreateComponentResourceResource,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type CreateComponentResourceResource$Outbound = {
  sourcedId: string;
};

/** @internal */
export const CreateComponentResourceResource$outboundSchema: z.ZodType<
  CreateComponentResourceResource$Outbound,
  z.ZodTypeDef,
  CreateComponentResourceResource
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateComponentResourceResource$ {
  /** @deprecated use `CreateComponentResourceResource$inboundSchema` instead. */
  export const inboundSchema = CreateComponentResourceResource$inboundSchema;
  /** @deprecated use `CreateComponentResourceResource$outboundSchema` instead. */
  export const outboundSchema = CreateComponentResourceResource$outboundSchema;
  /** @deprecated use `CreateComponentResourceResource$Outbound` instead. */
  export type Outbound = CreateComponentResourceResource$Outbound;
}

export function createComponentResourceResourceToJSON(
  createComponentResourceResource: CreateComponentResourceResource,
): string {
  return JSON.stringify(
    CreateComponentResourceResource$outboundSchema.parse(
      createComponentResourceResource,
    ),
  );
}

export function createComponentResourceResourceFromJSON(
  jsonString: string,
): SafeParseResult<CreateComponentResourceResource, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateComponentResourceResource$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateComponentResourceResource' from JSON`,
  );
}

/** @internal */
export const CreateComponentResourceComponentResource$inboundSchema: z.ZodType<
  CreateComponentResourceComponentResource,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
  status: CreateComponentResourceStatus$inboundSchema,
  dateLastModified: z.string().datetime({ offset: true }).transform(v =>
    new Date(v)
  ).optional(),
  metadata: z.nullable(z.record(z.any())).optional(),
  courseComponent: z.lazy(() =>
    CreateComponentResourceCourseComponent$inboundSchema
  ),
  resource: z.lazy(() => CreateComponentResourceResource$inboundSchema),
  title: z.string(),
  sortOrder: z.number().default(0),
});

/** @internal */
export type CreateComponentResourceComponentResource$Outbound = {
  sourcedId: string;
  status: string;
  dateLastModified?: string | undefined;
  metadata?: { [k: string]: any } | null | undefined;
  courseComponent: CreateComponentResourceCourseComponent$Outbound;
  resource: CreateComponentResourceResource$Outbound;
  title: string;
  sortOrder: number;
};

/** @internal */
export const CreateComponentResourceComponentResource$outboundSchema: z.ZodType<
  CreateComponentResourceComponentResource$Outbound,
  z.ZodTypeDef,
  CreateComponentResourceComponentResource
> = z.object({
  sourcedId: z.string(),
  status: CreateComponentResourceStatus$outboundSchema,
  dateLastModified: z.date().transform(v => v.toISOString()).optional(),
  metadata: z.nullable(z.record(z.any())).optional(),
  courseComponent: z.lazy(() =>
    CreateComponentResourceCourseComponent$outboundSchema
  ),
  resource: z.lazy(() => CreateComponentResourceResource$outboundSchema),
  title: z.string(),
  sortOrder: z.number().default(0),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateComponentResourceComponentResource$ {
  /** @deprecated use `CreateComponentResourceComponentResource$inboundSchema` instead. */
  export const inboundSchema =
    CreateComponentResourceComponentResource$inboundSchema;
  /** @deprecated use `CreateComponentResourceComponentResource$outboundSchema` instead. */
  export const outboundSchema =
    CreateComponentResourceComponentResource$outboundSchema;
  /** @deprecated use `CreateComponentResourceComponentResource$Outbound` instead. */
  export type Outbound = CreateComponentResourceComponentResource$Outbound;
}

export function createComponentResourceComponentResourceToJSON(
  createComponentResourceComponentResource:
    CreateComponentResourceComponentResource,
): string {
  return JSON.stringify(
    CreateComponentResourceComponentResource$outboundSchema.parse(
      createComponentResourceComponentResource,
    ),
  );
}

export function createComponentResourceComponentResourceFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateComponentResourceComponentResource,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateComponentResourceComponentResource$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateComponentResourceComponentResource' from JSON`,
  );
}

/** @internal */
export const CreateComponentResourceRequest$inboundSchema: z.ZodType<
  CreateComponentResourceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  componentResource: z.lazy(() =>
    CreateComponentResourceComponentResource$inboundSchema
  ),
});

/** @internal */
export type CreateComponentResourceRequest$Outbound = {
  componentResource: CreateComponentResourceComponentResource$Outbound;
};

/** @internal */
export const CreateComponentResourceRequest$outboundSchema: z.ZodType<
  CreateComponentResourceRequest$Outbound,
  z.ZodTypeDef,
  CreateComponentResourceRequest
> = z.object({
  componentResource: z.lazy(() =>
    CreateComponentResourceComponentResource$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateComponentResourceRequest$ {
  /** @deprecated use `CreateComponentResourceRequest$inboundSchema` instead. */
  export const inboundSchema = CreateComponentResourceRequest$inboundSchema;
  /** @deprecated use `CreateComponentResourceRequest$outboundSchema` instead. */
  export const outboundSchema = CreateComponentResourceRequest$outboundSchema;
  /** @deprecated use `CreateComponentResourceRequest$Outbound` instead. */
  export type Outbound = CreateComponentResourceRequest$Outbound;
}

export function createComponentResourceRequestToJSON(
  createComponentResourceRequest: CreateComponentResourceRequest,
): string {
  return JSON.stringify(
    CreateComponentResourceRequest$outboundSchema.parse(
      createComponentResourceRequest,
    ),
  );
}

export function createComponentResourceRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateComponentResourceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateComponentResourceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateComponentResourceRequest' from JSON`,
  );
}

/** @internal */
export const CreateComponentResourceSourcedIdPairs$inboundSchema: z.ZodType<
  CreateComponentResourceSourcedIdPairs,
  z.ZodTypeDef,
  unknown
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/** @internal */
export type CreateComponentResourceSourcedIdPairs$Outbound = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/** @internal */
export const CreateComponentResourceSourcedIdPairs$outboundSchema: z.ZodType<
  CreateComponentResourceSourcedIdPairs$Outbound,
  z.ZodTypeDef,
  CreateComponentResourceSourcedIdPairs
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateComponentResourceSourcedIdPairs$ {
  /** @deprecated use `CreateComponentResourceSourcedIdPairs$inboundSchema` instead. */
  export const inboundSchema =
    CreateComponentResourceSourcedIdPairs$inboundSchema;
  /** @deprecated use `CreateComponentResourceSourcedIdPairs$outboundSchema` instead. */
  export const outboundSchema =
    CreateComponentResourceSourcedIdPairs$outboundSchema;
  /** @deprecated use `CreateComponentResourceSourcedIdPairs$Outbound` instead. */
  export type Outbound = CreateComponentResourceSourcedIdPairs$Outbound;
}

export function createComponentResourceSourcedIdPairsToJSON(
  createComponentResourceSourcedIdPairs: CreateComponentResourceSourcedIdPairs,
): string {
  return JSON.stringify(
    CreateComponentResourceSourcedIdPairs$outboundSchema.parse(
      createComponentResourceSourcedIdPairs,
    ),
  );
}

export function createComponentResourceSourcedIdPairsFromJSON(
  jsonString: string,
): SafeParseResult<CreateComponentResourceSourcedIdPairs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateComponentResourceSourcedIdPairs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateComponentResourceSourcedIdPairs' from JSON`,
  );
}

/** @internal */
export const CreateComponentResourceResponse$inboundSchema: z.ZodType<
  CreateComponentResourceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedIdPairs: z.lazy(() =>
    CreateComponentResourceSourcedIdPairs$inboundSchema
  ),
});

/** @internal */
export type CreateComponentResourceResponse$Outbound = {
  sourcedIdPairs: CreateComponentResourceSourcedIdPairs$Outbound;
};

/** @internal */
export const CreateComponentResourceResponse$outboundSchema: z.ZodType<
  CreateComponentResourceResponse$Outbound,
  z.ZodTypeDef,
  CreateComponentResourceResponse
> = z.object({
  sourcedIdPairs: z.lazy(() =>
    CreateComponentResourceSourcedIdPairs$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateComponentResourceResponse$ {
  /** @deprecated use `CreateComponentResourceResponse$inboundSchema` instead. */
  export const inboundSchema = CreateComponentResourceResponse$inboundSchema;
  /** @deprecated use `CreateComponentResourceResponse$outboundSchema` instead. */
  export const outboundSchema = CreateComponentResourceResponse$outboundSchema;
  /** @deprecated use `CreateComponentResourceResponse$Outbound` instead. */
  export type Outbound = CreateComponentResourceResponse$Outbound;
}

export function createComponentResourceResponseToJSON(
  createComponentResourceResponse: CreateComponentResourceResponse,
): string {
  return JSON.stringify(
    CreateComponentResourceResponse$outboundSchema.parse(
      createComponentResourceResponse,
    ),
  );
}

export function createComponentResourceResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateComponentResourceResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateComponentResourceResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateComponentResourceResponse' from JSON`,
  );
}
