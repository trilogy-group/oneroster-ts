/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Successful response containing a collection of resources
 */
export type GetAllResourcesResponse = {
  resources: Array<components.Resource>;
};

/** @internal */
export const GetAllResourcesResponse$inboundSchema: z.ZodType<
  GetAllResourcesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resources: z.array(components.Resource$inboundSchema),
});

/** @internal */
export type GetAllResourcesResponse$Outbound = {
  resources: Array<components.Resource$Outbound>;
};

/** @internal */
export const GetAllResourcesResponse$outboundSchema: z.ZodType<
  GetAllResourcesResponse$Outbound,
  z.ZodTypeDef,
  GetAllResourcesResponse
> = z.object({
  resources: z.array(components.Resource$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllResourcesResponse$ {
  /** @deprecated use `GetAllResourcesResponse$inboundSchema` instead. */
  export const inboundSchema = GetAllResourcesResponse$inboundSchema;
  /** @deprecated use `GetAllResourcesResponse$outboundSchema` instead. */
  export const outboundSchema = GetAllResourcesResponse$outboundSchema;
  /** @deprecated use `GetAllResourcesResponse$Outbound` instead. */
  export type Outbound = GetAllResourcesResponse$Outbound;
}

export function getAllResourcesResponseToJSON(
  getAllResourcesResponse: GetAllResourcesResponse,
): string {
  return JSON.stringify(
    GetAllResourcesResponse$outboundSchema.parse(getAllResourcesResponse),
  );
}

export function getAllResourcesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAllResourcesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllResourcesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllResourcesResponse' from JSON`,
  );
}
