/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteCourseRequest = {
  /**
   * The sourcedId of the course to delete
   */
  sourcedId: string;
};

/** @internal */
export const DeleteCourseRequest$inboundSchema: z.ZodType<
  DeleteCourseRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type DeleteCourseRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const DeleteCourseRequest$outboundSchema: z.ZodType<
  DeleteCourseRequest$Outbound,
  z.ZodTypeDef,
  DeleteCourseRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCourseRequest$ {
  /** @deprecated use `DeleteCourseRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteCourseRequest$inboundSchema;
  /** @deprecated use `DeleteCourseRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteCourseRequest$outboundSchema;
  /** @deprecated use `DeleteCourseRequest$Outbound` instead. */
  export type Outbound = DeleteCourseRequest$Outbound;
}

export function deleteCourseRequestToJSON(
  deleteCourseRequest: DeleteCourseRequest,
): string {
  return JSON.stringify(
    DeleteCourseRequest$outboundSchema.parse(deleteCourseRequest),
  );
}

export function deleteCourseRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteCourseRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteCourseRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteCourseRequest' from JSON`,
  );
}
