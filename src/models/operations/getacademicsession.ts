/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAcademicSessionRequest = {
  /**
   * The sourcedId of the academic session
   */
  sourcedId: string;
};

/**
 * Success
 */
export type GetAcademicSessionResponse = {
  /**
   * Represents an academic session.
   */
  academicSession: components.AcademicSession;
};

/** @internal */
export const GetAcademicSessionRequest$inboundSchema: z.ZodType<
  GetAcademicSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetAcademicSessionRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetAcademicSessionRequest$outboundSchema: z.ZodType<
  GetAcademicSessionRequest$Outbound,
  z.ZodTypeDef,
  GetAcademicSessionRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAcademicSessionRequest$ {
  /** @deprecated use `GetAcademicSessionRequest$inboundSchema` instead. */
  export const inboundSchema = GetAcademicSessionRequest$inboundSchema;
  /** @deprecated use `GetAcademicSessionRequest$outboundSchema` instead. */
  export const outboundSchema = GetAcademicSessionRequest$outboundSchema;
  /** @deprecated use `GetAcademicSessionRequest$Outbound` instead. */
  export type Outbound = GetAcademicSessionRequest$Outbound;
}

export function getAcademicSessionRequestToJSON(
  getAcademicSessionRequest: GetAcademicSessionRequest,
): string {
  return JSON.stringify(
    GetAcademicSessionRequest$outboundSchema.parse(getAcademicSessionRequest),
  );
}

export function getAcademicSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAcademicSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAcademicSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAcademicSessionRequest' from JSON`,
  );
}

/** @internal */
export const GetAcademicSessionResponse$inboundSchema: z.ZodType<
  GetAcademicSessionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  academicSession: components.AcademicSession$inboundSchema,
});

/** @internal */
export type GetAcademicSessionResponse$Outbound = {
  academicSession: components.AcademicSession$Outbound;
};

/** @internal */
export const GetAcademicSessionResponse$outboundSchema: z.ZodType<
  GetAcademicSessionResponse$Outbound,
  z.ZodTypeDef,
  GetAcademicSessionResponse
> = z.object({
  academicSession: components.AcademicSession$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAcademicSessionResponse$ {
  /** @deprecated use `GetAcademicSessionResponse$inboundSchema` instead. */
  export const inboundSchema = GetAcademicSessionResponse$inboundSchema;
  /** @deprecated use `GetAcademicSessionResponse$outboundSchema` instead. */
  export const outboundSchema = GetAcademicSessionResponse$outboundSchema;
  /** @deprecated use `GetAcademicSessionResponse$Outbound` instead. */
  export type Outbound = GetAcademicSessionResponse$Outbound;
}

export function getAcademicSessionResponseToJSON(
  getAcademicSessionResponse: GetAcademicSessionResponse,
): string {
  return JSON.stringify(
    GetAcademicSessionResponse$outboundSchema.parse(getAcademicSessionResponse),
  );
}

export function getAcademicSessionResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAcademicSessionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAcademicSessionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAcademicSessionResponse' from JSON`,
  );
}
