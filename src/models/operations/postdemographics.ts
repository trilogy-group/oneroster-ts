/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PostDemographicsStatus = {
  Active: "active",
  Tobedeleted: "tobedeleted",
} as const;
export type PostDemographicsStatus = ClosedEnum<typeof PostDemographicsStatus>;

export const PostDemographicsSex = {
  Male: "male",
  Female: "female",
} as const;
export type PostDemographicsSex = ClosedEnum<typeof PostDemographicsSex>;

export const PostDemographicsAmericanIndianOrAlaskaNative = {
  True: "true",
  False: "false",
} as const;
export type PostDemographicsAmericanIndianOrAlaskaNative = ClosedEnum<
  typeof PostDemographicsAmericanIndianOrAlaskaNative
>;

export const PostDemographicsAsian = {
  True: "true",
  False: "false",
} as const;
export type PostDemographicsAsian = ClosedEnum<typeof PostDemographicsAsian>;

export const PostDemographicsBlackOrAfricanAmerican = {
  True: "true",
  False: "false",
} as const;
export type PostDemographicsBlackOrAfricanAmerican = ClosedEnum<
  typeof PostDemographicsBlackOrAfricanAmerican
>;

export const PostDemographicsNativeHawaiianOrOtherPacificIslander = {
  True: "true",
  False: "false",
} as const;
export type PostDemographicsNativeHawaiianOrOtherPacificIslander = ClosedEnum<
  typeof PostDemographicsNativeHawaiianOrOtherPacificIslander
>;

export const PostDemographicsWhite = {
  True: "true",
  False: "false",
} as const;
export type PostDemographicsWhite = ClosedEnum<typeof PostDemographicsWhite>;

export const PostDemographicsDemographicRaceTwoOrMoreRaces = {
  True: "true",
  False: "false",
} as const;
export type PostDemographicsDemographicRaceTwoOrMoreRaces = ClosedEnum<
  typeof PostDemographicsDemographicRaceTwoOrMoreRaces
>;

export const PostDemographicsHispanicOrLatinoEthnicity = {
  True: "true",
  False: "false",
} as const;
export type PostDemographicsHispanicOrLatinoEthnicity = ClosedEnum<
  typeof PostDemographicsHispanicOrLatinoEthnicity
>;

export type PostDemographicsDemographics = {
  sourcedId: string;
  status?: PostDemographicsStatus | undefined;
  metadata?: { [k: string]: any } | undefined;
  birthDate?: string | null | undefined;
  sex?: PostDemographicsSex | null | undefined;
  americanIndianOrAlaskaNative?:
    | PostDemographicsAmericanIndianOrAlaskaNative
    | null
    | undefined;
  asian?: PostDemographicsAsian | null | undefined;
  blackOrAfricanAmerican?:
    | PostDemographicsBlackOrAfricanAmerican
    | null
    | undefined;
  nativeHawaiianOrOtherPacificIslander?:
    | PostDemographicsNativeHawaiianOrOtherPacificIslander
    | null
    | undefined;
  white?: PostDemographicsWhite | null | undefined;
  demographicRaceTwoOrMoreRaces?:
    | PostDemographicsDemographicRaceTwoOrMoreRaces
    | null
    | undefined;
  hispanicOrLatinoEthnicity?:
    | PostDemographicsHispanicOrLatinoEthnicity
    | null
    | undefined;
  countryOfBirthCode?: string | null | undefined;
  stateOfBirthAbbreviation?: string | null | undefined;
  cityOfBirth?: string | null | undefined;
  publicSchoolResidenceStatus?: string | null | undefined;
};

export type PostDemographicsRequest = {
  demographics: PostDemographicsDemographics;
};

export type PostDemographicsSourcedIdPairs = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/**
 * Demographics record created successfully
 */
export type PostDemographicsResponse = {
  sourcedIdPairs: PostDemographicsSourcedIdPairs;
};

/** @internal */
export const PostDemographicsStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsStatus
> = z.nativeEnum(PostDemographicsStatus);

/** @internal */
export const PostDemographicsStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsStatus
> = PostDemographicsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsStatus$ {
  /** @deprecated use `PostDemographicsStatus$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsStatus$inboundSchema;
  /** @deprecated use `PostDemographicsStatus$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsStatus$outboundSchema;
}

/** @internal */
export const PostDemographicsSex$inboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsSex
> = z.nativeEnum(PostDemographicsSex);

/** @internal */
export const PostDemographicsSex$outboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsSex
> = PostDemographicsSex$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsSex$ {
  /** @deprecated use `PostDemographicsSex$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsSex$inboundSchema;
  /** @deprecated use `PostDemographicsSex$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsSex$outboundSchema;
}

/** @internal */
export const PostDemographicsAmericanIndianOrAlaskaNative$inboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsAmericanIndianOrAlaskaNative> = z
    .nativeEnum(PostDemographicsAmericanIndianOrAlaskaNative);

/** @internal */
export const PostDemographicsAmericanIndianOrAlaskaNative$outboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsAmericanIndianOrAlaskaNative> =
    PostDemographicsAmericanIndianOrAlaskaNative$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsAmericanIndianOrAlaskaNative$ {
  /** @deprecated use `PostDemographicsAmericanIndianOrAlaskaNative$inboundSchema` instead. */
  export const inboundSchema =
    PostDemographicsAmericanIndianOrAlaskaNative$inboundSchema;
  /** @deprecated use `PostDemographicsAmericanIndianOrAlaskaNative$outboundSchema` instead. */
  export const outboundSchema =
    PostDemographicsAmericanIndianOrAlaskaNative$outboundSchema;
}

/** @internal */
export const PostDemographicsAsian$inboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsAsian
> = z.nativeEnum(PostDemographicsAsian);

/** @internal */
export const PostDemographicsAsian$outboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsAsian
> = PostDemographicsAsian$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsAsian$ {
  /** @deprecated use `PostDemographicsAsian$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsAsian$inboundSchema;
  /** @deprecated use `PostDemographicsAsian$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsAsian$outboundSchema;
}

/** @internal */
export const PostDemographicsBlackOrAfricanAmerican$inboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsBlackOrAfricanAmerican> = z.nativeEnum(
    PostDemographicsBlackOrAfricanAmerican,
  );

/** @internal */
export const PostDemographicsBlackOrAfricanAmerican$outboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsBlackOrAfricanAmerican> =
    PostDemographicsBlackOrAfricanAmerican$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsBlackOrAfricanAmerican$ {
  /** @deprecated use `PostDemographicsBlackOrAfricanAmerican$inboundSchema` instead. */
  export const inboundSchema =
    PostDemographicsBlackOrAfricanAmerican$inboundSchema;
  /** @deprecated use `PostDemographicsBlackOrAfricanAmerican$outboundSchema` instead. */
  export const outboundSchema =
    PostDemographicsBlackOrAfricanAmerican$outboundSchema;
}

/** @internal */
export const PostDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsNativeHawaiianOrOtherPacificIslander> =
    z.nativeEnum(PostDemographicsNativeHawaiianOrOtherPacificIslander);

/** @internal */
export const PostDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsNativeHawaiianOrOtherPacificIslander> =
    PostDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsNativeHawaiianOrOtherPacificIslander$ {
  /** @deprecated use `PostDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema` instead. */
  export const inboundSchema =
    PostDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema;
  /** @deprecated use `PostDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema` instead. */
  export const outboundSchema =
    PostDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema;
}

/** @internal */
export const PostDemographicsWhite$inboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsWhite
> = z.nativeEnum(PostDemographicsWhite);

/** @internal */
export const PostDemographicsWhite$outboundSchema: z.ZodNativeEnum<
  typeof PostDemographicsWhite
> = PostDemographicsWhite$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsWhite$ {
  /** @deprecated use `PostDemographicsWhite$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsWhite$inboundSchema;
  /** @deprecated use `PostDemographicsWhite$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsWhite$outboundSchema;
}

/** @internal */
export const PostDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsDemographicRaceTwoOrMoreRaces> = z
    .nativeEnum(PostDemographicsDemographicRaceTwoOrMoreRaces);

/** @internal */
export const PostDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsDemographicRaceTwoOrMoreRaces> =
    PostDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsDemographicRaceTwoOrMoreRaces$ {
  /** @deprecated use `PostDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema` instead. */
  export const inboundSchema =
    PostDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema;
  /** @deprecated use `PostDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema` instead. */
  export const outboundSchema =
    PostDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema;
}

/** @internal */
export const PostDemographicsHispanicOrLatinoEthnicity$inboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsHispanicOrLatinoEthnicity> = z
    .nativeEnum(PostDemographicsHispanicOrLatinoEthnicity);

/** @internal */
export const PostDemographicsHispanicOrLatinoEthnicity$outboundSchema:
  z.ZodNativeEnum<typeof PostDemographicsHispanicOrLatinoEthnicity> =
    PostDemographicsHispanicOrLatinoEthnicity$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsHispanicOrLatinoEthnicity$ {
  /** @deprecated use `PostDemographicsHispanicOrLatinoEthnicity$inboundSchema` instead. */
  export const inboundSchema =
    PostDemographicsHispanicOrLatinoEthnicity$inboundSchema;
  /** @deprecated use `PostDemographicsHispanicOrLatinoEthnicity$outboundSchema` instead. */
  export const outboundSchema =
    PostDemographicsHispanicOrLatinoEthnicity$outboundSchema;
}

/** @internal */
export const PostDemographicsDemographics$inboundSchema: z.ZodType<
  PostDemographicsDemographics,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
  status: PostDemographicsStatus$inboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  birthDate: z.nullable(z.string()).optional(),
  sex: z.nullable(PostDemographicsSex$inboundSchema).optional(),
  americanIndianOrAlaskaNative: z.nullable(
    PostDemographicsAmericanIndianOrAlaskaNative$inboundSchema,
  ).optional(),
  asian: z.nullable(PostDemographicsAsian$inboundSchema).optional(),
  blackOrAfricanAmerican: z.nullable(
    PostDemographicsBlackOrAfricanAmerican$inboundSchema,
  ).optional(),
  nativeHawaiianOrOtherPacificIslander: z.nullable(
    PostDemographicsNativeHawaiianOrOtherPacificIslander$inboundSchema,
  ).optional(),
  white: z.nullable(PostDemographicsWhite$inboundSchema).optional(),
  demographicRaceTwoOrMoreRaces: z.nullable(
    PostDemographicsDemographicRaceTwoOrMoreRaces$inboundSchema,
  ).optional(),
  hispanicOrLatinoEthnicity: z.nullable(
    PostDemographicsHispanicOrLatinoEthnicity$inboundSchema,
  ).optional(),
  countryOfBirthCode: z.nullable(z.string()).optional(),
  stateOfBirthAbbreviation: z.nullable(z.string()).optional(),
  cityOfBirth: z.nullable(z.string()).optional(),
  publicSchoolResidenceStatus: z.nullable(z.string()).optional(),
});

/** @internal */
export type PostDemographicsDemographics$Outbound = {
  sourcedId: string;
  status: string;
  metadata?: { [k: string]: any } | undefined;
  birthDate?: string | null | undefined;
  sex?: string | null | undefined;
  americanIndianOrAlaskaNative?: string | null | undefined;
  asian?: string | null | undefined;
  blackOrAfricanAmerican?: string | null | undefined;
  nativeHawaiianOrOtherPacificIslander?: string | null | undefined;
  white?: string | null | undefined;
  demographicRaceTwoOrMoreRaces?: string | null | undefined;
  hispanicOrLatinoEthnicity?: string | null | undefined;
  countryOfBirthCode?: string | null | undefined;
  stateOfBirthAbbreviation?: string | null | undefined;
  cityOfBirth?: string | null | undefined;
  publicSchoolResidenceStatus?: string | null | undefined;
};

/** @internal */
export const PostDemographicsDemographics$outboundSchema: z.ZodType<
  PostDemographicsDemographics$Outbound,
  z.ZodTypeDef,
  PostDemographicsDemographics
> = z.object({
  sourcedId: z.string(),
  status: PostDemographicsStatus$outboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  birthDate: z.nullable(z.string()).optional(),
  sex: z.nullable(PostDemographicsSex$outboundSchema).optional(),
  americanIndianOrAlaskaNative: z.nullable(
    PostDemographicsAmericanIndianOrAlaskaNative$outboundSchema,
  ).optional(),
  asian: z.nullable(PostDemographicsAsian$outboundSchema).optional(),
  blackOrAfricanAmerican: z.nullable(
    PostDemographicsBlackOrAfricanAmerican$outboundSchema,
  ).optional(),
  nativeHawaiianOrOtherPacificIslander: z.nullable(
    PostDemographicsNativeHawaiianOrOtherPacificIslander$outboundSchema,
  ).optional(),
  white: z.nullable(PostDemographicsWhite$outboundSchema).optional(),
  demographicRaceTwoOrMoreRaces: z.nullable(
    PostDemographicsDemographicRaceTwoOrMoreRaces$outboundSchema,
  ).optional(),
  hispanicOrLatinoEthnicity: z.nullable(
    PostDemographicsHispanicOrLatinoEthnicity$outboundSchema,
  ).optional(),
  countryOfBirthCode: z.nullable(z.string()).optional(),
  stateOfBirthAbbreviation: z.nullable(z.string()).optional(),
  cityOfBirth: z.nullable(z.string()).optional(),
  publicSchoolResidenceStatus: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsDemographics$ {
  /** @deprecated use `PostDemographicsDemographics$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsDemographics$inboundSchema;
  /** @deprecated use `PostDemographicsDemographics$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsDemographics$outboundSchema;
  /** @deprecated use `PostDemographicsDemographics$Outbound` instead. */
  export type Outbound = PostDemographicsDemographics$Outbound;
}

export function postDemographicsDemographicsToJSON(
  postDemographicsDemographics: PostDemographicsDemographics,
): string {
  return JSON.stringify(
    PostDemographicsDemographics$outboundSchema.parse(
      postDemographicsDemographics,
    ),
  );
}

export function postDemographicsDemographicsFromJSON(
  jsonString: string,
): SafeParseResult<PostDemographicsDemographics, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDemographicsDemographics$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDemographicsDemographics' from JSON`,
  );
}

/** @internal */
export const PostDemographicsRequest$inboundSchema: z.ZodType<
  PostDemographicsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  demographics: z.lazy(() => PostDemographicsDemographics$inboundSchema),
});

/** @internal */
export type PostDemographicsRequest$Outbound = {
  demographics: PostDemographicsDemographics$Outbound;
};

/** @internal */
export const PostDemographicsRequest$outboundSchema: z.ZodType<
  PostDemographicsRequest$Outbound,
  z.ZodTypeDef,
  PostDemographicsRequest
> = z.object({
  demographics: z.lazy(() => PostDemographicsDemographics$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsRequest$ {
  /** @deprecated use `PostDemographicsRequest$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsRequest$inboundSchema;
  /** @deprecated use `PostDemographicsRequest$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsRequest$outboundSchema;
  /** @deprecated use `PostDemographicsRequest$Outbound` instead. */
  export type Outbound = PostDemographicsRequest$Outbound;
}

export function postDemographicsRequestToJSON(
  postDemographicsRequest: PostDemographicsRequest,
): string {
  return JSON.stringify(
    PostDemographicsRequest$outboundSchema.parse(postDemographicsRequest),
  );
}

export function postDemographicsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostDemographicsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDemographicsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDemographicsRequest' from JSON`,
  );
}

/** @internal */
export const PostDemographicsSourcedIdPairs$inboundSchema: z.ZodType<
  PostDemographicsSourcedIdPairs,
  z.ZodTypeDef,
  unknown
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/** @internal */
export type PostDemographicsSourcedIdPairs$Outbound = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/** @internal */
export const PostDemographicsSourcedIdPairs$outboundSchema: z.ZodType<
  PostDemographicsSourcedIdPairs$Outbound,
  z.ZodTypeDef,
  PostDemographicsSourcedIdPairs
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsSourcedIdPairs$ {
  /** @deprecated use `PostDemographicsSourcedIdPairs$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsSourcedIdPairs$inboundSchema;
  /** @deprecated use `PostDemographicsSourcedIdPairs$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsSourcedIdPairs$outboundSchema;
  /** @deprecated use `PostDemographicsSourcedIdPairs$Outbound` instead. */
  export type Outbound = PostDemographicsSourcedIdPairs$Outbound;
}

export function postDemographicsSourcedIdPairsToJSON(
  postDemographicsSourcedIdPairs: PostDemographicsSourcedIdPairs,
): string {
  return JSON.stringify(
    PostDemographicsSourcedIdPairs$outboundSchema.parse(
      postDemographicsSourcedIdPairs,
    ),
  );
}

export function postDemographicsSourcedIdPairsFromJSON(
  jsonString: string,
): SafeParseResult<PostDemographicsSourcedIdPairs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDemographicsSourcedIdPairs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDemographicsSourcedIdPairs' from JSON`,
  );
}

/** @internal */
export const PostDemographicsResponse$inboundSchema: z.ZodType<
  PostDemographicsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedIdPairs: z.lazy(() => PostDemographicsSourcedIdPairs$inboundSchema),
});

/** @internal */
export type PostDemographicsResponse$Outbound = {
  sourcedIdPairs: PostDemographicsSourcedIdPairs$Outbound;
};

/** @internal */
export const PostDemographicsResponse$outboundSchema: z.ZodType<
  PostDemographicsResponse$Outbound,
  z.ZodTypeDef,
  PostDemographicsResponse
> = z.object({
  sourcedIdPairs: z.lazy(() => PostDemographicsSourcedIdPairs$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostDemographicsResponse$ {
  /** @deprecated use `PostDemographicsResponse$inboundSchema` instead. */
  export const inboundSchema = PostDemographicsResponse$inboundSchema;
  /** @deprecated use `PostDemographicsResponse$outboundSchema` instead. */
  export const outboundSchema = PostDemographicsResponse$outboundSchema;
  /** @deprecated use `PostDemographicsResponse$Outbound` instead. */
  export type Outbound = PostDemographicsResponse$Outbound;
}

export function postDemographicsResponseToJSON(
  postDemographicsResponse: PostDemographicsResponse,
): string {
  return JSON.stringify(
    PostDemographicsResponse$outboundSchema.parse(postDemographicsResponse),
  );
}

export function postDemographicsResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostDemographicsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostDemographicsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostDemographicsResponse' from JSON`,
  );
}
