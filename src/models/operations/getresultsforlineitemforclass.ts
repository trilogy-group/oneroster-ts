/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetResultsForLineItemForClassRequest = {
  /**
   * The sourcedId of the class
   */
  classSourcedId: string;
  /**
   * The sourcedId of the line item
   */
  lineItemSourcedId: string;
};

/**
 * Successful response containing a collection of results for the specified line item in the class
 */
export type GetResultsForLineItemForClassResponse = {
  results: Array<components.Result>;
};

/** @internal */
export const GetResultsForLineItemForClassRequest$inboundSchema: z.ZodType<
  GetResultsForLineItemForClassRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  classSourcedId: z.string(),
  lineItemSourcedId: z.string(),
});

/** @internal */
export type GetResultsForLineItemForClassRequest$Outbound = {
  classSourcedId: string;
  lineItemSourcedId: string;
};

/** @internal */
export const GetResultsForLineItemForClassRequest$outboundSchema: z.ZodType<
  GetResultsForLineItemForClassRequest$Outbound,
  z.ZodTypeDef,
  GetResultsForLineItemForClassRequest
> = z.object({
  classSourcedId: z.string(),
  lineItemSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResultsForLineItemForClassRequest$ {
  /** @deprecated use `GetResultsForLineItemForClassRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetResultsForLineItemForClassRequest$inboundSchema;
  /** @deprecated use `GetResultsForLineItemForClassRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetResultsForLineItemForClassRequest$outboundSchema;
  /** @deprecated use `GetResultsForLineItemForClassRequest$Outbound` instead. */
  export type Outbound = GetResultsForLineItemForClassRequest$Outbound;
}

export function getResultsForLineItemForClassRequestToJSON(
  getResultsForLineItemForClassRequest: GetResultsForLineItemForClassRequest,
): string {
  return JSON.stringify(
    GetResultsForLineItemForClassRequest$outboundSchema.parse(
      getResultsForLineItemForClassRequest,
    ),
  );
}

export function getResultsForLineItemForClassRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetResultsForLineItemForClassRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetResultsForLineItemForClassRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResultsForLineItemForClassRequest' from JSON`,
  );
}

/** @internal */
export const GetResultsForLineItemForClassResponse$inboundSchema: z.ZodType<
  GetResultsForLineItemForClassResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  results: z.array(components.Result$inboundSchema),
});

/** @internal */
export type GetResultsForLineItemForClassResponse$Outbound = {
  results: Array<components.Result$Outbound>;
};

/** @internal */
export const GetResultsForLineItemForClassResponse$outboundSchema: z.ZodType<
  GetResultsForLineItemForClassResponse$Outbound,
  z.ZodTypeDef,
  GetResultsForLineItemForClassResponse
> = z.object({
  results: z.array(components.Result$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResultsForLineItemForClassResponse$ {
  /** @deprecated use `GetResultsForLineItemForClassResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetResultsForLineItemForClassResponse$inboundSchema;
  /** @deprecated use `GetResultsForLineItemForClassResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetResultsForLineItemForClassResponse$outboundSchema;
  /** @deprecated use `GetResultsForLineItemForClassResponse$Outbound` instead. */
  export type Outbound = GetResultsForLineItemForClassResponse$Outbound;
}

export function getResultsForLineItemForClassResponseToJSON(
  getResultsForLineItemForClassResponse: GetResultsForLineItemForClassResponse,
): string {
  return JSON.stringify(
    GetResultsForLineItemForClassResponse$outboundSchema.parse(
      getResultsForLineItemForClassResponse,
    ),
  );
}

export function getResultsForLineItemForClassResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetResultsForLineItemForClassResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetResultsForLineItemForClassResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResultsForLineItemForClassResponse' from JSON`,
  );
}
