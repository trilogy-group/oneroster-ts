/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RemoveResourceFromCourseRequest = {
  /**
   * The sourcedId of the course
   */
  courseSourcedId: string;
  /**
   * The sourcedId of the resource to remove
   */
  resourceSourcedId: string;
};

/** @internal */
export const RemoveResourceFromCourseRequest$inboundSchema: z.ZodType<
  RemoveResourceFromCourseRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  courseSourcedId: z.string(),
  resourceSourcedId: z.string(),
});

/** @internal */
export type RemoveResourceFromCourseRequest$Outbound = {
  courseSourcedId: string;
  resourceSourcedId: string;
};

/** @internal */
export const RemoveResourceFromCourseRequest$outboundSchema: z.ZodType<
  RemoveResourceFromCourseRequest$Outbound,
  z.ZodTypeDef,
  RemoveResourceFromCourseRequest
> = z.object({
  courseSourcedId: z.string(),
  resourceSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveResourceFromCourseRequest$ {
  /** @deprecated use `RemoveResourceFromCourseRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveResourceFromCourseRequest$inboundSchema;
  /** @deprecated use `RemoveResourceFromCourseRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveResourceFromCourseRequest$outboundSchema;
  /** @deprecated use `RemoveResourceFromCourseRequest$Outbound` instead. */
  export type Outbound = RemoveResourceFromCourseRequest$Outbound;
}

export function removeResourceFromCourseRequestToJSON(
  removeResourceFromCourseRequest: RemoveResourceFromCourseRequest,
): string {
  return JSON.stringify(
    RemoveResourceFromCourseRequest$outboundSchema.parse(
      removeResourceFromCourseRequest,
    ),
  );
}

export function removeResourceFromCourseRequestFromJSON(
  jsonString: string,
): SafeParseResult<RemoveResourceFromCourseRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveResourceFromCourseRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveResourceFromCourseRequest' from JSON`,
  );
}
