/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetClassesForTermRequest = {
  /**
   * The sourcedId of the term
   */
  termSourcedId: string;
};

/**
 * Successful response containing a collection of classes for the term
 */
export type GetClassesForTermResponse = {
  classes: Array<components.Class>;
};

/** @internal */
export const GetClassesForTermRequest$inboundSchema: z.ZodType<
  GetClassesForTermRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  termSourcedId: z.string(),
});

/** @internal */
export type GetClassesForTermRequest$Outbound = {
  termSourcedId: string;
};

/** @internal */
export const GetClassesForTermRequest$outboundSchema: z.ZodType<
  GetClassesForTermRequest$Outbound,
  z.ZodTypeDef,
  GetClassesForTermRequest
> = z.object({
  termSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassesForTermRequest$ {
  /** @deprecated use `GetClassesForTermRequest$inboundSchema` instead. */
  export const inboundSchema = GetClassesForTermRequest$inboundSchema;
  /** @deprecated use `GetClassesForTermRequest$outboundSchema` instead. */
  export const outboundSchema = GetClassesForTermRequest$outboundSchema;
  /** @deprecated use `GetClassesForTermRequest$Outbound` instead. */
  export type Outbound = GetClassesForTermRequest$Outbound;
}

export function getClassesForTermRequestToJSON(
  getClassesForTermRequest: GetClassesForTermRequest,
): string {
  return JSON.stringify(
    GetClassesForTermRequest$outboundSchema.parse(getClassesForTermRequest),
  );
}

export function getClassesForTermRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetClassesForTermRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassesForTermRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassesForTermRequest' from JSON`,
  );
}

/** @internal */
export const GetClassesForTermResponse$inboundSchema: z.ZodType<
  GetClassesForTermResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  classes: z.array(components.Class$inboundSchema),
});

/** @internal */
export type GetClassesForTermResponse$Outbound = {
  classes: Array<components.Class$Outbound>;
};

/** @internal */
export const GetClassesForTermResponse$outboundSchema: z.ZodType<
  GetClassesForTermResponse$Outbound,
  z.ZodTypeDef,
  GetClassesForTermResponse
> = z.object({
  classes: z.array(components.Class$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassesForTermResponse$ {
  /** @deprecated use `GetClassesForTermResponse$inboundSchema` instead. */
  export const inboundSchema = GetClassesForTermResponse$inboundSchema;
  /** @deprecated use `GetClassesForTermResponse$outboundSchema` instead. */
  export const outboundSchema = GetClassesForTermResponse$outboundSchema;
  /** @deprecated use `GetClassesForTermResponse$Outbound` instead. */
  export type Outbound = GetClassesForTermResponse$Outbound;
}

export function getClassesForTermResponseToJSON(
  getClassesForTermResponse: GetClassesForTermResponse,
): string {
  return JSON.stringify(
    GetClassesForTermResponse$outboundSchema.parse(getClassesForTermResponse),
  );
}

export function getClassesForTermResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetClassesForTermResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassesForTermResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassesForTermResponse' from JSON`,
  );
}
