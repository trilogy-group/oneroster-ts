/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAssessmentResultRequest = {
  /**
   * The sourcedId of the assessment result
   */
  sourcedId: string;
};

/**
 * Successful response with the assessment result
 */
export type GetAssessmentResultResponse = {
  /**
   * Represents an assessment result.
   */
  assessmentResult: components.AssessmentResult;
};

/** @internal */
export const GetAssessmentResultRequest$inboundSchema: z.ZodType<
  GetAssessmentResultRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetAssessmentResultRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetAssessmentResultRequest$outboundSchema: z.ZodType<
  GetAssessmentResultRequest$Outbound,
  z.ZodTypeDef,
  GetAssessmentResultRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssessmentResultRequest$ {
  /** @deprecated use `GetAssessmentResultRequest$inboundSchema` instead. */
  export const inboundSchema = GetAssessmentResultRequest$inboundSchema;
  /** @deprecated use `GetAssessmentResultRequest$outboundSchema` instead. */
  export const outboundSchema = GetAssessmentResultRequest$outboundSchema;
  /** @deprecated use `GetAssessmentResultRequest$Outbound` instead. */
  export type Outbound = GetAssessmentResultRequest$Outbound;
}

export function getAssessmentResultRequestToJSON(
  getAssessmentResultRequest: GetAssessmentResultRequest,
): string {
  return JSON.stringify(
    GetAssessmentResultRequest$outboundSchema.parse(getAssessmentResultRequest),
  );
}

export function getAssessmentResultRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAssessmentResultRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssessmentResultRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssessmentResultRequest' from JSON`,
  );
}

/** @internal */
export const GetAssessmentResultResponse$inboundSchema: z.ZodType<
  GetAssessmentResultResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  assessmentResult: components.AssessmentResult$inboundSchema,
});

/** @internal */
export type GetAssessmentResultResponse$Outbound = {
  assessmentResult: components.AssessmentResult$Outbound;
};

/** @internal */
export const GetAssessmentResultResponse$outboundSchema: z.ZodType<
  GetAssessmentResultResponse$Outbound,
  z.ZodTypeDef,
  GetAssessmentResultResponse
> = z.object({
  assessmentResult: components.AssessmentResult$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssessmentResultResponse$ {
  /** @deprecated use `GetAssessmentResultResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssessmentResultResponse$inboundSchema;
  /** @deprecated use `GetAssessmentResultResponse$outboundSchema` instead. */
  export const outboundSchema = GetAssessmentResultResponse$outboundSchema;
  /** @deprecated use `GetAssessmentResultResponse$Outbound` instead. */
  export type Outbound = GetAssessmentResultResponse$Outbound;
}

export function getAssessmentResultResponseToJSON(
  getAssessmentResultResponse: GetAssessmentResultResponse,
): string {
  return JSON.stringify(
    GetAssessmentResultResponse$outboundSchema.parse(
      getAssessmentResultResponse,
    ),
  );
}

export function getAssessmentResultResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssessmentResultResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssessmentResultResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssessmentResultResponse' from JSON`,
  );
}
