/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The order to sort the response by
 */
export const GetAllAssessmentLineItemsOrderBy = {
  Asc: "asc",
  Desc: "desc",
} as const;
/**
 * The order to sort the response by
 */
export type GetAllAssessmentLineItemsOrderBy = ClosedEnum<
  typeof GetAllAssessmentLineItemsOrderBy
>;

export type GetAllAssessmentLineItemsRequest = {
  /**
   * Comma-separated list of fields to include in the response
   */
  fields?: string | undefined;
  /**
   * The maximum number of items to return in the paginated response
   */
  limit?: number | undefined;
  /**
   * The number of items to skip in the paginated response
   */
  offset?: number | undefined;
  /**
   * The field to sort the response by
   */
  sort?: string | undefined;
  /**
   * The order to sort the response by
   */
  orderBy?: GetAllAssessmentLineItemsOrderBy | undefined;
  /**
   * The filter to apply to the response
   */
  filter?: string | undefined;
  /**
   * The search query to apply to the response
   */
  search?: string | undefined;
};

/**
 * Successful response containing a collection of assessment line items
 */
export type GetAllAssessmentLineItemsResponseBody = {
  assessmentLineItems: Array<components.AssessmentLineItem>;
};

export type GetAllAssessmentLineItemsResponse = {
  result: GetAllAssessmentLineItemsResponseBody;
};

/** @internal */
export const GetAllAssessmentLineItemsOrderBy$inboundSchema: z.ZodNativeEnum<
  typeof GetAllAssessmentLineItemsOrderBy
> = z.nativeEnum(GetAllAssessmentLineItemsOrderBy);

/** @internal */
export const GetAllAssessmentLineItemsOrderBy$outboundSchema: z.ZodNativeEnum<
  typeof GetAllAssessmentLineItemsOrderBy
> = GetAllAssessmentLineItemsOrderBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentLineItemsOrderBy$ {
  /** @deprecated use `GetAllAssessmentLineItemsOrderBy$inboundSchema` instead. */
  export const inboundSchema = GetAllAssessmentLineItemsOrderBy$inboundSchema;
  /** @deprecated use `GetAllAssessmentLineItemsOrderBy$outboundSchema` instead. */
  export const outboundSchema = GetAllAssessmentLineItemsOrderBy$outboundSchema;
}

/** @internal */
export const GetAllAssessmentLineItemsRequest$inboundSchema: z.ZodType<
  GetAllAssessmentLineItemsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetAllAssessmentLineItemsOrderBy$inboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/** @internal */
export type GetAllAssessmentLineItemsRequest$Outbound = {
  fields?: string | undefined;
  limit: number;
  offset: number;
  sort?: string | undefined;
  orderBy?: string | undefined;
  filter?: string | undefined;
  search?: string | undefined;
};

/** @internal */
export const GetAllAssessmentLineItemsRequest$outboundSchema: z.ZodType<
  GetAllAssessmentLineItemsRequest$Outbound,
  z.ZodTypeDef,
  GetAllAssessmentLineItemsRequest
> = z.object({
  fields: z.string().optional(),
  limit: z.number().int().default(100),
  offset: z.number().int().default(0),
  sort: z.string().optional(),
  orderBy: GetAllAssessmentLineItemsOrderBy$outboundSchema.optional(),
  filter: z.string().optional(),
  search: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentLineItemsRequest$ {
  /** @deprecated use `GetAllAssessmentLineItemsRequest$inboundSchema` instead. */
  export const inboundSchema = GetAllAssessmentLineItemsRequest$inboundSchema;
  /** @deprecated use `GetAllAssessmentLineItemsRequest$outboundSchema` instead. */
  export const outboundSchema = GetAllAssessmentLineItemsRequest$outboundSchema;
  /** @deprecated use `GetAllAssessmentLineItemsRequest$Outbound` instead. */
  export type Outbound = GetAllAssessmentLineItemsRequest$Outbound;
}

export function getAllAssessmentLineItemsRequestToJSON(
  getAllAssessmentLineItemsRequest: GetAllAssessmentLineItemsRequest,
): string {
  return JSON.stringify(
    GetAllAssessmentLineItemsRequest$outboundSchema.parse(
      getAllAssessmentLineItemsRequest,
    ),
  );
}

export function getAllAssessmentLineItemsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAllAssessmentLineItemsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllAssessmentLineItemsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllAssessmentLineItemsRequest' from JSON`,
  );
}

/** @internal */
export const GetAllAssessmentLineItemsResponseBody$inboundSchema: z.ZodType<
  GetAllAssessmentLineItemsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  assessmentLineItems: z.array(components.AssessmentLineItem$inboundSchema),
});

/** @internal */
export type GetAllAssessmentLineItemsResponseBody$Outbound = {
  assessmentLineItems: Array<components.AssessmentLineItem$Outbound>;
};

/** @internal */
export const GetAllAssessmentLineItemsResponseBody$outboundSchema: z.ZodType<
  GetAllAssessmentLineItemsResponseBody$Outbound,
  z.ZodTypeDef,
  GetAllAssessmentLineItemsResponseBody
> = z.object({
  assessmentLineItems: z.array(components.AssessmentLineItem$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentLineItemsResponseBody$ {
  /** @deprecated use `GetAllAssessmentLineItemsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetAllAssessmentLineItemsResponseBody$inboundSchema;
  /** @deprecated use `GetAllAssessmentLineItemsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetAllAssessmentLineItemsResponseBody$outboundSchema;
  /** @deprecated use `GetAllAssessmentLineItemsResponseBody$Outbound` instead. */
  export type Outbound = GetAllAssessmentLineItemsResponseBody$Outbound;
}

export function getAllAssessmentLineItemsResponseBodyToJSON(
  getAllAssessmentLineItemsResponseBody: GetAllAssessmentLineItemsResponseBody,
): string {
  return JSON.stringify(
    GetAllAssessmentLineItemsResponseBody$outboundSchema.parse(
      getAllAssessmentLineItemsResponseBody,
    ),
  );
}

export function getAllAssessmentLineItemsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetAllAssessmentLineItemsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAllAssessmentLineItemsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllAssessmentLineItemsResponseBody' from JSON`,
  );
}

/** @internal */
export const GetAllAssessmentLineItemsResponse$inboundSchema: z.ZodType<
  GetAllAssessmentLineItemsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => GetAllAssessmentLineItemsResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type GetAllAssessmentLineItemsResponse$Outbound = {
  Result: GetAllAssessmentLineItemsResponseBody$Outbound;
};

/** @internal */
export const GetAllAssessmentLineItemsResponse$outboundSchema: z.ZodType<
  GetAllAssessmentLineItemsResponse$Outbound,
  z.ZodTypeDef,
  GetAllAssessmentLineItemsResponse
> = z.object({
  result: z.lazy(() => GetAllAssessmentLineItemsResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAllAssessmentLineItemsResponse$ {
  /** @deprecated use `GetAllAssessmentLineItemsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAllAssessmentLineItemsResponse$inboundSchema;
  /** @deprecated use `GetAllAssessmentLineItemsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetAllAssessmentLineItemsResponse$outboundSchema;
  /** @deprecated use `GetAllAssessmentLineItemsResponse$Outbound` instead. */
  export type Outbound = GetAllAssessmentLineItemsResponse$Outbound;
}

export function getAllAssessmentLineItemsResponseToJSON(
  getAllAssessmentLineItemsResponse: GetAllAssessmentLineItemsResponse,
): string {
  return JSON.stringify(
    GetAllAssessmentLineItemsResponse$outboundSchema.parse(
      getAllAssessmentLineItemsResponse,
    ),
  );
}

export function getAllAssessmentLineItemsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAllAssessmentLineItemsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAllAssessmentLineItemsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAllAssessmentLineItemsResponse' from JSON`,
  );
}
