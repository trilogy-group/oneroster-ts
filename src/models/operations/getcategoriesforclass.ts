/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetCategoriesForClassRequest = {
  /**
   * The sourcedId of the class
   */
  sourcedId: string;
};

/**
 * Successful response containing a collection of categories for the class
 */
export type GetCategoriesForClassResponse = {
  categories: Array<components.Category>;
};

/** @internal */
export const GetCategoriesForClassRequest$inboundSchema: z.ZodType<
  GetCategoriesForClassRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetCategoriesForClassRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetCategoriesForClassRequest$outboundSchema: z.ZodType<
  GetCategoriesForClassRequest$Outbound,
  z.ZodTypeDef,
  GetCategoriesForClassRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCategoriesForClassRequest$ {
  /** @deprecated use `GetCategoriesForClassRequest$inboundSchema` instead. */
  export const inboundSchema = GetCategoriesForClassRequest$inboundSchema;
  /** @deprecated use `GetCategoriesForClassRequest$outboundSchema` instead. */
  export const outboundSchema = GetCategoriesForClassRequest$outboundSchema;
  /** @deprecated use `GetCategoriesForClassRequest$Outbound` instead. */
  export type Outbound = GetCategoriesForClassRequest$Outbound;
}

export function getCategoriesForClassRequestToJSON(
  getCategoriesForClassRequest: GetCategoriesForClassRequest,
): string {
  return JSON.stringify(
    GetCategoriesForClassRequest$outboundSchema.parse(
      getCategoriesForClassRequest,
    ),
  );
}

export function getCategoriesForClassRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetCategoriesForClassRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCategoriesForClassRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCategoriesForClassRequest' from JSON`,
  );
}

/** @internal */
export const GetCategoriesForClassResponse$inboundSchema: z.ZodType<
  GetCategoriesForClassResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  categories: z.array(components.Category$inboundSchema),
});

/** @internal */
export type GetCategoriesForClassResponse$Outbound = {
  categories: Array<components.Category$Outbound>;
};

/** @internal */
export const GetCategoriesForClassResponse$outboundSchema: z.ZodType<
  GetCategoriesForClassResponse$Outbound,
  z.ZodTypeDef,
  GetCategoriesForClassResponse
> = z.object({
  categories: z.array(components.Category$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCategoriesForClassResponse$ {
  /** @deprecated use `GetCategoriesForClassResponse$inboundSchema` instead. */
  export const inboundSchema = GetCategoriesForClassResponse$inboundSchema;
  /** @deprecated use `GetCategoriesForClassResponse$outboundSchema` instead. */
  export const outboundSchema = GetCategoriesForClassResponse$outboundSchema;
  /** @deprecated use `GetCategoriesForClassResponse$Outbound` instead. */
  export type Outbound = GetCategoriesForClassResponse$Outbound;
}

export function getCategoriesForClassResponseToJSON(
  getCategoriesForClassResponse: GetCategoriesForClassResponse,
): string {
  return JSON.stringify(
    GetCategoriesForClassResponse$outboundSchema.parse(
      getCategoriesForClassResponse,
    ),
  );
}

export function getCategoriesForClassResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetCategoriesForClassResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCategoriesForClassResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCategoriesForClassResponse' from JSON`,
  );
}
