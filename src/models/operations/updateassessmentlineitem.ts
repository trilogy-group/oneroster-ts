/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateAssessmentLineItemRequestBody = {
  /**
   * Represents an assessment line item.
   */
  assessmentLineItem: components.AssessmentLineItem;
};

export type UpdateAssessmentLineItemRequest = {
  /**
   * The sourcedId of the assessment line item to update
   */
  sourcedId: string;
  requestBody: UpdateAssessmentLineItemRequestBody;
};

/**
 * Assessment line item successfully updated
 */
export type UpdateAssessmentLineItemResponse = {
  /**
   * Represents an assessment line item.
   */
  assessmentLineItem: components.AssessmentLineItem;
};

/** @internal */
export const UpdateAssessmentLineItemRequestBody$inboundSchema: z.ZodType<
  UpdateAssessmentLineItemRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  assessmentLineItem: components.AssessmentLineItem$inboundSchema,
});

/** @internal */
export type UpdateAssessmentLineItemRequestBody$Outbound = {
  assessmentLineItem: components.AssessmentLineItem$Outbound;
};

/** @internal */
export const UpdateAssessmentLineItemRequestBody$outboundSchema: z.ZodType<
  UpdateAssessmentLineItemRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateAssessmentLineItemRequestBody
> = z.object({
  assessmentLineItem: components.AssessmentLineItem$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAssessmentLineItemRequestBody$ {
  /** @deprecated use `UpdateAssessmentLineItemRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateAssessmentLineItemRequestBody$inboundSchema;
  /** @deprecated use `UpdateAssessmentLineItemRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateAssessmentLineItemRequestBody$outboundSchema;
  /** @deprecated use `UpdateAssessmentLineItemRequestBody$Outbound` instead. */
  export type Outbound = UpdateAssessmentLineItemRequestBody$Outbound;
}

export function updateAssessmentLineItemRequestBodyToJSON(
  updateAssessmentLineItemRequestBody: UpdateAssessmentLineItemRequestBody,
): string {
  return JSON.stringify(
    UpdateAssessmentLineItemRequestBody$outboundSchema.parse(
      updateAssessmentLineItemRequestBody,
    ),
  );
}

export function updateAssessmentLineItemRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAssessmentLineItemRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateAssessmentLineItemRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAssessmentLineItemRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateAssessmentLineItemRequest$inboundSchema: z.ZodType<
  UpdateAssessmentLineItemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
  RequestBody: z.lazy(() => UpdateAssessmentLineItemRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateAssessmentLineItemRequest$Outbound = {
  sourcedId: string;
  RequestBody: UpdateAssessmentLineItemRequestBody$Outbound;
};

/** @internal */
export const UpdateAssessmentLineItemRequest$outboundSchema: z.ZodType<
  UpdateAssessmentLineItemRequest$Outbound,
  z.ZodTypeDef,
  UpdateAssessmentLineItemRequest
> = z.object({
  sourcedId: z.string(),
  requestBody: z.lazy(() => UpdateAssessmentLineItemRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAssessmentLineItemRequest$ {
  /** @deprecated use `UpdateAssessmentLineItemRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateAssessmentLineItemRequest$inboundSchema;
  /** @deprecated use `UpdateAssessmentLineItemRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateAssessmentLineItemRequest$outboundSchema;
  /** @deprecated use `UpdateAssessmentLineItemRequest$Outbound` instead. */
  export type Outbound = UpdateAssessmentLineItemRequest$Outbound;
}

export function updateAssessmentLineItemRequestToJSON(
  updateAssessmentLineItemRequest: UpdateAssessmentLineItemRequest,
): string {
  return JSON.stringify(
    UpdateAssessmentLineItemRequest$outboundSchema.parse(
      updateAssessmentLineItemRequest,
    ),
  );
}

export function updateAssessmentLineItemRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAssessmentLineItemRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAssessmentLineItemRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAssessmentLineItemRequest' from JSON`,
  );
}

/** @internal */
export const UpdateAssessmentLineItemResponse$inboundSchema: z.ZodType<
  UpdateAssessmentLineItemResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  assessmentLineItem: components.AssessmentLineItem$inboundSchema,
});

/** @internal */
export type UpdateAssessmentLineItemResponse$Outbound = {
  assessmentLineItem: components.AssessmentLineItem$Outbound;
};

/** @internal */
export const UpdateAssessmentLineItemResponse$outboundSchema: z.ZodType<
  UpdateAssessmentLineItemResponse$Outbound,
  z.ZodTypeDef,
  UpdateAssessmentLineItemResponse
> = z.object({
  assessmentLineItem: components.AssessmentLineItem$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAssessmentLineItemResponse$ {
  /** @deprecated use `UpdateAssessmentLineItemResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateAssessmentLineItemResponse$inboundSchema;
  /** @deprecated use `UpdateAssessmentLineItemResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateAssessmentLineItemResponse$outboundSchema;
  /** @deprecated use `UpdateAssessmentLineItemResponse$Outbound` instead. */
  export type Outbound = UpdateAssessmentLineItemResponse$Outbound;
}

export function updateAssessmentLineItemResponseToJSON(
  updateAssessmentLineItemResponse: UpdateAssessmentLineItemResponse,
): string {
  return JSON.stringify(
    UpdateAssessmentLineItemResponse$outboundSchema.parse(
      updateAssessmentLineItemResponse,
    ),
  );
}

export function updateAssessmentLineItemResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAssessmentLineItemResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAssessmentLineItemResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAssessmentLineItemResponse' from JSON`,
  );
}
