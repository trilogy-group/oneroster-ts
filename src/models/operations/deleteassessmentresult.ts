/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteAssessmentResultRequest = {
  /**
   * The sourcedId of the assessment result to delete
   */
  sourcedId: string;
};

/** @internal */
export const DeleteAssessmentResultRequest$inboundSchema: z.ZodType<
  DeleteAssessmentResultRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type DeleteAssessmentResultRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const DeleteAssessmentResultRequest$outboundSchema: z.ZodType<
  DeleteAssessmentResultRequest$Outbound,
  z.ZodTypeDef,
  DeleteAssessmentResultRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAssessmentResultRequest$ {
  /** @deprecated use `DeleteAssessmentResultRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteAssessmentResultRequest$inboundSchema;
  /** @deprecated use `DeleteAssessmentResultRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteAssessmentResultRequest$outboundSchema;
  /** @deprecated use `DeleteAssessmentResultRequest$Outbound` instead. */
  export type Outbound = DeleteAssessmentResultRequest$Outbound;
}

export function deleteAssessmentResultRequestToJSON(
  deleteAssessmentResultRequest: DeleteAssessmentResultRequest,
): string {
  return JSON.stringify(
    DeleteAssessmentResultRequest$outboundSchema.parse(
      deleteAssessmentResultRequest,
    ),
  );
}

export function deleteAssessmentResultRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteAssessmentResultRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteAssessmentResultRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteAssessmentResultRequest' from JSON`,
  );
}
