/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetLineItemsForSchoolRequest = {
  /**
   * The sourcedId of the school
   */
  sourcedId: string;
};

/**
 * Successful response containing a collection of line items
 */
export type GetLineItemsForSchoolResponse = {
  lineItems: Array<components.LineItem>;
};

/** @internal */
export const GetLineItemsForSchoolRequest$inboundSchema: z.ZodType<
  GetLineItemsForSchoolRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetLineItemsForSchoolRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetLineItemsForSchoolRequest$outboundSchema: z.ZodType<
  GetLineItemsForSchoolRequest$Outbound,
  z.ZodTypeDef,
  GetLineItemsForSchoolRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLineItemsForSchoolRequest$ {
  /** @deprecated use `GetLineItemsForSchoolRequest$inboundSchema` instead. */
  export const inboundSchema = GetLineItemsForSchoolRequest$inboundSchema;
  /** @deprecated use `GetLineItemsForSchoolRequest$outboundSchema` instead. */
  export const outboundSchema = GetLineItemsForSchoolRequest$outboundSchema;
  /** @deprecated use `GetLineItemsForSchoolRequest$Outbound` instead. */
  export type Outbound = GetLineItemsForSchoolRequest$Outbound;
}

export function getLineItemsForSchoolRequestToJSON(
  getLineItemsForSchoolRequest: GetLineItemsForSchoolRequest,
): string {
  return JSON.stringify(
    GetLineItemsForSchoolRequest$outboundSchema.parse(
      getLineItemsForSchoolRequest,
    ),
  );
}

export function getLineItemsForSchoolRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetLineItemsForSchoolRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetLineItemsForSchoolRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetLineItemsForSchoolRequest' from JSON`,
  );
}

/** @internal */
export const GetLineItemsForSchoolResponse$inboundSchema: z.ZodType<
  GetLineItemsForSchoolResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  lineItems: z.array(components.LineItem$inboundSchema),
});

/** @internal */
export type GetLineItemsForSchoolResponse$Outbound = {
  lineItems: Array<components.LineItem$Outbound>;
};

/** @internal */
export const GetLineItemsForSchoolResponse$outboundSchema: z.ZodType<
  GetLineItemsForSchoolResponse$Outbound,
  z.ZodTypeDef,
  GetLineItemsForSchoolResponse
> = z.object({
  lineItems: z.array(components.LineItem$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLineItemsForSchoolResponse$ {
  /** @deprecated use `GetLineItemsForSchoolResponse$inboundSchema` instead. */
  export const inboundSchema = GetLineItemsForSchoolResponse$inboundSchema;
  /** @deprecated use `GetLineItemsForSchoolResponse$outboundSchema` instead. */
  export const outboundSchema = GetLineItemsForSchoolResponse$outboundSchema;
  /** @deprecated use `GetLineItemsForSchoolResponse$Outbound` instead. */
  export type Outbound = GetLineItemsForSchoolResponse$Outbound;
}

export function getLineItemsForSchoolResponseToJSON(
  getLineItemsForSchoolResponse: GetLineItemsForSchoolResponse,
): string {
  return JSON.stringify(
    GetLineItemsForSchoolResponse$outboundSchema.parse(
      getLineItemsForSchoolResponse,
    ),
  );
}

export function getLineItemsForSchoolResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetLineItemsForSchoolResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetLineItemsForSchoolResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetLineItemsForSchoolResponse' from JSON`,
  );
}
