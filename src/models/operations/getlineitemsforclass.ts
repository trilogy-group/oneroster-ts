/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetLineItemsForClassRequest = {
  /**
   * The sourcedId of the class
   */
  classSourcedId: string;
};

/**
 * Successful response containing a collection of line items for the class
 */
export type GetLineItemsForClassResponse = {
  lineItems: Array<components.LineItem>;
};

/** @internal */
export const GetLineItemsForClassRequest$inboundSchema: z.ZodType<
  GetLineItemsForClassRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  classSourcedId: z.string(),
});

/** @internal */
export type GetLineItemsForClassRequest$Outbound = {
  classSourcedId: string;
};

/** @internal */
export const GetLineItemsForClassRequest$outboundSchema: z.ZodType<
  GetLineItemsForClassRequest$Outbound,
  z.ZodTypeDef,
  GetLineItemsForClassRequest
> = z.object({
  classSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLineItemsForClassRequest$ {
  /** @deprecated use `GetLineItemsForClassRequest$inboundSchema` instead. */
  export const inboundSchema = GetLineItemsForClassRequest$inboundSchema;
  /** @deprecated use `GetLineItemsForClassRequest$outboundSchema` instead. */
  export const outboundSchema = GetLineItemsForClassRequest$outboundSchema;
  /** @deprecated use `GetLineItemsForClassRequest$Outbound` instead. */
  export type Outbound = GetLineItemsForClassRequest$Outbound;
}

export function getLineItemsForClassRequestToJSON(
  getLineItemsForClassRequest: GetLineItemsForClassRequest,
): string {
  return JSON.stringify(
    GetLineItemsForClassRequest$outboundSchema.parse(
      getLineItemsForClassRequest,
    ),
  );
}

export function getLineItemsForClassRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetLineItemsForClassRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetLineItemsForClassRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetLineItemsForClassRequest' from JSON`,
  );
}

/** @internal */
export const GetLineItemsForClassResponse$inboundSchema: z.ZodType<
  GetLineItemsForClassResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  lineItems: z.array(components.LineItem$inboundSchema),
});

/** @internal */
export type GetLineItemsForClassResponse$Outbound = {
  lineItems: Array<components.LineItem$Outbound>;
};

/** @internal */
export const GetLineItemsForClassResponse$outboundSchema: z.ZodType<
  GetLineItemsForClassResponse$Outbound,
  z.ZodTypeDef,
  GetLineItemsForClassResponse
> = z.object({
  lineItems: z.array(components.LineItem$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLineItemsForClassResponse$ {
  /** @deprecated use `GetLineItemsForClassResponse$inboundSchema` instead. */
  export const inboundSchema = GetLineItemsForClassResponse$inboundSchema;
  /** @deprecated use `GetLineItemsForClassResponse$outboundSchema` instead. */
  export const outboundSchema = GetLineItemsForClassResponse$outboundSchema;
  /** @deprecated use `GetLineItemsForClassResponse$Outbound` instead. */
  export type Outbound = GetLineItemsForClassResponse$Outbound;
}

export function getLineItemsForClassResponseToJSON(
  getLineItemsForClassResponse: GetLineItemsForClassResponse,
): string {
  return JSON.stringify(
    GetLineItemsForClassResponse$outboundSchema.parse(
      getLineItemsForClassResponse,
    ),
  );
}

export function getLineItemsForClassResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetLineItemsForClassResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetLineItemsForClassResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetLineItemsForClassResponse' from JSON`,
  );
}
