/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetResultsForClassRequest = {
  /**
   * The sourcedId of the class
   */
  sourcedId: string;
};

/**
 * Successful response containing a collection of results for the class
 */
export type GetResultsForClassResponse = {
  results: Array<components.Result>;
};

/** @internal */
export const GetResultsForClassRequest$inboundSchema: z.ZodType<
  GetResultsForClassRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type GetResultsForClassRequest$Outbound = {
  sourcedId: string;
};

/** @internal */
export const GetResultsForClassRequest$outboundSchema: z.ZodType<
  GetResultsForClassRequest$Outbound,
  z.ZodTypeDef,
  GetResultsForClassRequest
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResultsForClassRequest$ {
  /** @deprecated use `GetResultsForClassRequest$inboundSchema` instead. */
  export const inboundSchema = GetResultsForClassRequest$inboundSchema;
  /** @deprecated use `GetResultsForClassRequest$outboundSchema` instead. */
  export const outboundSchema = GetResultsForClassRequest$outboundSchema;
  /** @deprecated use `GetResultsForClassRequest$Outbound` instead. */
  export type Outbound = GetResultsForClassRequest$Outbound;
}

export function getResultsForClassRequestToJSON(
  getResultsForClassRequest: GetResultsForClassRequest,
): string {
  return JSON.stringify(
    GetResultsForClassRequest$outboundSchema.parse(getResultsForClassRequest),
  );
}

export function getResultsForClassRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetResultsForClassRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResultsForClassRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResultsForClassRequest' from JSON`,
  );
}

/** @internal */
export const GetResultsForClassResponse$inboundSchema: z.ZodType<
  GetResultsForClassResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  results: z.array(components.Result$inboundSchema),
});

/** @internal */
export type GetResultsForClassResponse$Outbound = {
  results: Array<components.Result$Outbound>;
};

/** @internal */
export const GetResultsForClassResponse$outboundSchema: z.ZodType<
  GetResultsForClassResponse$Outbound,
  z.ZodTypeDef,
  GetResultsForClassResponse
> = z.object({
  results: z.array(components.Result$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetResultsForClassResponse$ {
  /** @deprecated use `GetResultsForClassResponse$inboundSchema` instead. */
  export const inboundSchema = GetResultsForClassResponse$inboundSchema;
  /** @deprecated use `GetResultsForClassResponse$outboundSchema` instead. */
  export const outboundSchema = GetResultsForClassResponse$outboundSchema;
  /** @deprecated use `GetResultsForClassResponse$Outbound` instead. */
  export type Outbound = GetResultsForClassResponse$Outbound;
}

export function getResultsForClassResponseToJSON(
  getResultsForClassResponse: GetResultsForClassResponse,
): string {
  return JSON.stringify(
    GetResultsForClassResponse$outboundSchema.parse(getResultsForClassResponse),
  );
}

export function getResultsForClassResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetResultsForClassResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetResultsForClassResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetResultsForClassResponse' from JSON`,
  );
}
