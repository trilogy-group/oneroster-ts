/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { teachersGet } from "../funcs/teachersGet.js";
import { teachersGetAll } from "../funcs/teachersGetAll.js";
import { teachersGetClasses } from "../funcs/teachersGetClasses.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Teachers extends ClientSDK {
  /**
   * Get all Teachers
   *
   * @remarks
   * To get all Teachers on the service provider.
   */
  async getAll(
    request: operations.GetAllTeachersRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.GetAllTeachersResponse, { offset: number }>
  > {
    return unwrapResultIterator(teachersGetAll(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a specific Teacher
   *
   * @remarks
   * To get a specific Teacher on the service provider. If the corresponding record cannot be located, the api will return a 404 error code and message 'Teacher not found.'
   */
  async get(
    request: operations.GetTeacherRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTeacherResponse> {
    return unwrapAsync(teachersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Classes for a Teacher
   *
   * @remarks
   * To get the set of Classes a Teacher is enrolled in. If the specified teacher cannot be identified within the service provider, the api will return a 404 error code and message 'Teacher not found.'
   */
  async getClasses(
    request: operations.GetClassesForTeacherRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.GetClassesForTeacherResponse, { offset: number }>
  > {
    return unwrapResultIterator(teachersGetClasses(
      this,
      request,
      options,
    ));
  }
}
