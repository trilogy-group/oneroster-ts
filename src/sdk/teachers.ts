/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { teachersGet } from "../funcs/teachersGet.js";
import { teachersGetAll } from "../funcs/teachersGetAll.js";
import { teachersGetClasses } from "../funcs/teachersGetClasses.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Teachers extends ClientSDK {
  /**
   * Get all teachers
   *
   * @remarks
   * Returns a collection of all teachers.
   */
  async getAll(
    options?: RequestOptions,
  ): Promise<operations.GetAllTeachersResponse> {
    return unwrapAsync(teachersGetAll(
      this,
      options,
    ));
  }

  /**
   * Get a specific teacher
   *
   * @remarks
   * Returns a specific teacher by sourcedId.
   */
  async get(
    request: operations.GetTeacherRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTeacherResponse> {
    return unwrapAsync(teachersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get classes for a teacher
   *
   * @remarks
   * Returns a collection of classes that the teacher is teaching.
   */
  async getClasses(
    request: operations.GetClassesForTeacherRequest,
    options?: RequestOptions,
  ): Promise<operations.GetClassesForTeacherResponse> {
    return unwrapAsync(teachersGetClasses(
      this,
      request,
      options,
    ));
  }
}
