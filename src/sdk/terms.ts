/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { termsGet } from "../funcs/termsGet.js";
import { termsGetClasses } from "../funcs/termsGetClasses.js";
import { termsGetGradingPeriods } from "../funcs/termsGetGradingPeriods.js";
import { termsList } from "../funcs/termsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Terms extends ClientSDK {
  /**
   * Get all terms
   *
   * @remarks
   * Returns a collection of all terms.
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.GetAllTermsResponse> {
    return unwrapAsync(termsList(
      this,
      options,
    ));
  }

  /**
   * Get a specific term
   *
   * @remarks
   * Returns a specific term by sourcedId.
   */
  async get(
    request: operations.GetTermRequest,
    options?: RequestOptions,
  ): Promise<operations.GetTermResponse> {
    return unwrapAsync(termsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get grading periods for a term
   *
   * @remarks
   * Returns a collection of grading periods associated with the term.
   */
  async getGradingPeriods(
    request: operations.GetGradingPeriodsForTermRequest,
    options?: RequestOptions,
  ): Promise<operations.GetGradingPeriodsForTermResponse> {
    return unwrapAsync(termsGetGradingPeriods(
      this,
      request,
      options,
    ));
  }

  /**
   * Get classes for a term
   *
   * @remarks
   * Returns a collection of classes associated with the term.
   */
  async getClasses(
    request: operations.GetClassesForTermRequest,
    options?: RequestOptions,
  ): Promise<operations.GetClassesForTermResponse> {
    return unwrapAsync(termsGetClasses(
      this,
      request,
      options,
    ));
  }
}
