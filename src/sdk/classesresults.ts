/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { classesResultsGet } from "../funcs/classesResultsGet.js";
import { classesResultsGetForLineItem } from "../funcs/classesResultsGetForLineItem.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class ClassesResults extends ClientSDK {
  /**
   * Get Results for a Line Item for a Class
   *
   * @remarks
   * Get the set of results on the service provider for a specific lineItem and for a specific class. If the corresponding record cannot be located, the api will return a 404 error code and message 'Class or line item not found.'
   */
  async getForLineItem(
    request: operations.GetResultsForLineItemForClassRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.GetResultsForLineItemForClassResponse,
      { offset: number }
    >
  > {
    return unwrapResultIterator(classesResultsGetForLineItem(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Results for a Class
   *
   * @remarks
   * Get the set of results on the service provider for a specific class. If the corresponding record cannot be located, the api will return a 404 error code and message 'Class not found.'
   */
  async get(
    request: operations.GetResultsForClassRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.GetResultsForClassResponse, { offset: number }>
  > {
    return unwrapResultIterator(classesResultsGet(
      this,
      request,
      options,
    ));
  }
}
