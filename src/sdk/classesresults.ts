/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { classesResultsGet } from "../funcs/classesResultsGet.js";
import { classesResultsGetForLineItem } from "../funcs/classesResultsGetForLineItem.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ClassesResults extends ClientSDK {
  /**
   * Get results for a specific line item in a class
   *
   * @remarks
   * Returns a collection of results for a specific line item within a class.
   */
  async getForLineItem(
    request: operations.GetResultsForLineItemForClassRequest,
    options?: RequestOptions,
  ): Promise<operations.GetResultsForLineItemForClassResponse> {
    return unwrapAsync(classesResultsGetForLineItem(
      this,
      request,
      options,
    ));
  }

  /**
   * Get results for a class
   *
   * @remarks
   * Returns a collection of results associated with a specific class.
   */
  async get(
    request: operations.GetResultsForClassRequest,
    options?: RequestOptions,
  ): Promise<operations.GetResultsForClassResponse> {
    return unwrapAsync(classesResultsGet(
      this,
      request,
      options,
    ));
  }
}
