/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { lineItemsCreate } from "../funcs/lineItemsCreate.js";
import { lineItemsDelete } from "../funcs/lineItemsDelete.js";
import { lineItemsGet } from "../funcs/lineItemsGet.js";
import { lineItemsList } from "../funcs/lineItemsList.js";
import { lineItemsUpdate } from "../funcs/lineItemsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class LineItems extends ClientSDK {
  /**
   * Get all line items
   *
   * @remarks
   * Returns a collection of all line items.
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.GetAllLineItemsResponse> {
    return unwrapAsync(lineItemsList(
      this,
      options,
    ));
  }

  /**
   * Create a new line item
   *
   * @remarks
   * Creates a new line item with the provided information.
   */
  async create(
    request: operations.CreateLineItemRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateLineItemResponse> {
    return unwrapAsync(lineItemsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a specific line item
   *
   * @remarks
   * Returns a specific line item by sourcedId.
   */
  async get(
    request: operations.GetLineItemRequest,
    options?: RequestOptions,
  ): Promise<operations.GetLineItemResponse> {
    return unwrapAsync(lineItemsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an existing line item
   *
   * @remarks
   * Updates an existing line item with the provided information.
   */
  async update(
    request: operations.UpdateLineItemRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(lineItemsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a line item
   *
   * @remarks
   * Deletes a line item with the specified sourcedId.
   */
  async delete(
    request: operations.DeleteLineItemRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(lineItemsDelete(
      this,
      request,
      options,
    ));
  }
}
