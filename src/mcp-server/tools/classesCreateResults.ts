/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { classesCreateResults } from "../../funcs/classesCreateResults.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations.PostResultsForAcademicSessionForClassRequest$inboundSchema,
};

export const tool$classesCreateResults: ToolDefinition<typeof args> = {
  name: "classes-create-results",
  description: `Create Results for an Academic Session for a Class

To create a set of results for a specific academic session and specific class. The responding system must return the set of sourcedIds that have been allocated to the newly created result records. If the corresponding record cannot be located, the api will return a 404 error code and message 'Class or academic session not found.'`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await classesCreateResults(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
